{
  "version": "3.4",
  "log": [
    {
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/FixedPoint96.sol:FixedPoint96": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/FixedPoint96.sol:7",
        "version": {
          "withMetadata": "a14ab961957f0dd38e02092531510f81679b9a8d594ed046020b4d3ebce5cb16",
          "withoutMetadata": "a14ab961957f0dd38e02092531510f81679b9a8d594ed046020b4d3ebce5cb16",
          "linkedWithoutMetadata": "a14ab961957f0dd38e02092531510f81679b9a8d594ed046020b4d3ebce5cb16"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "40c9f9db23044d96d23924eaedce70da2d578911187d66b81160abd5d1519396",
          "withoutMetadata": "40c9f9db23044d96d23924eaedce70da2d578911187d66b81160abd5d1519396",
          "linkedWithoutMetadata": "40c9f9db23044d96d23924eaedce70da2d578911187d66b81160abd5d1519396"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@134dd3v/uniswap-v3-core-0.8-support/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "684c01a9ef4b3b974549fb25eeb9cac84126aaf9c9c8fd51d922a1d9f4f60d76",
          "withoutMetadata": "684c01a9ef4b3b974549fb25eeb9cac84126aaf9c9c8fd51d922a1d9f4f60d76",
          "linkedWithoutMetadata": "684c01a9ef4b3b974549fb25eeb9cac84126aaf9c9c8fd51d922a1d9f4f60d76"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/Chainlink.sol:Chainlink": {
        "src": "@chainlink/contracts/src/v0.8/Chainlink.sol:11",
        "version": {
          "withMetadata": "6535975bc4a3b9c3b8cbd98a180a92e927072fcc8e207c081c3a81da30095993",
          "withoutMetadata": "6535975bc4a3b9c3b8cbd98a180a92e927072fcc8e207c081c3a81da30095993",
          "linkedWithoutMetadata": "6535975bc4a3b9c3b8cbd98a180a92e927072fcc8e207c081c3a81da30095993"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient": {
        "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "s_requestCount",
            "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)2074",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)2296",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)2154",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)2074": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)2296": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)2154": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "oracleRequest(address,uint256,bytes32,address,bytes4,uint256,uint256,bytes)",
          "cancelOracleRequest(bytes32,uint256,bytes4,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:ENSInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setSubnodeOwner(bytes32,bytes32,address)",
          "setResolver(bytes32,address)",
          "setOwner(bytes32,address)",
          "setTTL(bytes32,uint64)",
          "owner(bytes32)",
          "resolver(bytes32)",
          "ttl(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:OperatorInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol:7",
        "inherit": [
          "@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol:ChainlinkRequestInterface",
          "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface"
        ],
        "libraries": [],
        "methods": [
          "operatorRequest(address,uint256,bytes32,bytes4,uint256,uint256,bytes)",
          "fulfillOracleRequest2(bytes32,uint256,address,bytes4,uint256,bytes)",
          "ownerTransferAndCall(address,uint256,bytes)",
          "distributeFunds(address payable[],uint256[])",
          "getAuthorizedSenders()",
          "setAuthorizedSenders(address[])",
          "getForwarder()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:OracleInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "fulfillOracleRequest(bytes32,uint256,address,bytes4,uint256,bytes32)",
          "isAuthorizedSender(address)",
          "withdraw(address,uint256)",
          "withdrawable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:PointerInterface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:BufferChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol:12",
        "version": {
          "withMetadata": "797f7e71c47b0427bec00ea9b8277c9df293534f1c5bd753130c4278a0cc5c7f",
          "withoutMetadata": "797f7e71c47b0427bec00ea9b8277c9df293534f1c5bd753130c4278a0cc5c7f",
          "linkedWithoutMetadata": "797f7e71c47b0427bec00ea9b8277c9df293534f1c5bd753130c4278a0cc5c7f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:CBORChainlink": {
        "src": "@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol:6",
        "version": {
          "withMetadata": "59386d139c23f12b0963a904e1c463ab98327a649b9721591bc2902bb7433140",
          "withoutMetadata": "59386d139c23f12b0963a904e1c463ab98327a649b9721591bc2902bb7433140",
          "linkedWithoutMetadata": "59386d139c23f12b0963a904e1c463ab98327a649b9721591bc2902bb7433140"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:ENSResolver": {
        "src": "@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "addr(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:58",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "eb002cca7494427025bb4feac616a5e61216288ad7a858ff8b0e494b2d062f9d",
          "withoutMetadata": "eb002cca7494427025bb4feac616a5e61216288ad7a858ff8b0e494b2d062f9d",
          "linkedWithoutMetadata": "eb002cca7494427025bb4feac616a5e61216288ad7a858ff8b0e494b2d062f9d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "@openzeppelin/contracts/interfaces/IERC1967.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/IERC4626.sol:IERC4626": {
        "src": "@openzeppelin/contracts/interfaces/IERC4626.sol:15",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "asset()",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "maxDeposit(address)",
          "previewDeposit(uint256)",
          "deposit(uint256,address)",
          "maxMint(address)",
          "previewMint(uint256)",
          "mint(uint256,address)",
          "maxWithdraw(address)",
          "previewWithdraw(uint256)",
          "withdraw(uint256,address,address)",
          "maxRedeem(address)",
          "previewRedeem(uint256)",
          "redeem(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:15",
        "version": {
          "withMetadata": "811134b09f14cd588cb5c59ea7fb22e78730c59c1b7fcad3a8063c6813d5bab5",
          "withoutMetadata": "811134b09f14cd588cb5c59ea7fb22e78730c59c1b7fcad3a8063c6813d5bab5",
          "linkedWithoutMetadata": "811134b09f14cd588cb5c59ea7fb22e78730c59c1b7fcad3a8063c6813d5bab5"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:22"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:18",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/Proxy.sol:Proxy": {
        "src": "@openzeppelin/contracts/proxy/Proxy.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "5caa8d7eab7d777d06f5b8960e2458292be0565c58a92e03aeebd4b221e3d7b9",
          "withoutMetadata": "5caa8d7eab7d777d06f5b8960e2458292be0565c58a92e03aeebd4b221e3d7b9",
          "linkedWithoutMetadata": "5caa8d7eab7d777d06f5b8960e2458292be0565c58a92e03aeebd4b221e3d7b9"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "@openzeppelin/contracts/proxy/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "84db432d2978352b5457316cffdacb3a7c6238a123a28b96d6e40d9a41a94aa5",
          "withoutMetadata": "84db432d2978352b5457316cffdacb3a7c6238a123a28b96d6e40d9a41a94aa5",
          "linkedWithoutMetadata": "84db432d2978352b5457316cffdacb3a7c6238a123a28b96d6e40d9a41a94aa5"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/proxy/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:ProxyAdmin": {
        "src": "@openzeppelin/contracts/proxy/transparent/ProxyAdmin.sol:13",
        "version": {
          "withMetadata": "929de74c0f3526d676bd6e5610a0dc2b60b16db1edd8e450bcc56b961967fda1",
          "withoutMetadata": "929de74c0f3526d676bd6e5610a0dc2b60b16db1edd8e450bcc56b961967fda1",
          "linkedWithoutMetadata": "929de74c0f3526d676bd6e5610a0dc2b60b16db1edd8e450bcc56b961967fda1"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:14",
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:58",
        "version": {
          "withMetadata": "408aa86212f568be5fd1119ee5f6beb77b2d743c36cc590d3c82e3ad62ea7bc6",
          "withoutMetadata": "408aa86212f568be5fd1119ee5f6beb77b2d743c36cc590d3c82e3ad62ea7bc6",
          "linkedWithoutMetadata": "408aa86212f568be5fd1119ee5f6beb77b2d743c36cc590d3c82e3ad62ea7bc6"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:63"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "201a13bc9a163bff4a8718d5ea20a9992962e7f908ff64f2d966aa6cedf9b740",
          "withoutMetadata": "201a13bc9a163bff4a8718d5ea20a9992962e7f908ff64f2d966aa6cedf9b740",
          "linkedWithoutMetadata": "201a13bc9a163bff4a8718d5ea20a9992962e7f908ff64f2d966aa6cedf9b740"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:14",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "tokenOfOwnerByIndex(address,uint256)",
          "totalSupply()",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "tokenOfOwnerByIndex(address,uint256)",
          "tokenByIndex(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "13394576746da14e4ff42e18ccae60e3101e952c8e3c1fba3df4297f55df4178",
          "withoutMetadata": "13394576746da14e4ff42e18ccae60e3101e952c8e3c1fba3df4297f55df4178",
          "linkedWithoutMetadata": "13394576746da14e4ff42e18ccae60e3101e952c8e3c1fba3df4297f55df4178"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:185"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Base64.sol:Base64": {
        "src": "@openzeppelin/contracts/utils/Base64.sol:11",
        "version": {
          "withMetadata": "8df116dacc110dfa89ee35d3af047a33c225fc253e5bd42bb6c9b8d4f0f08d0c",
          "withoutMetadata": "8df116dacc110dfa89ee35d3af047a33c225fc253e5bd42bb6c9b8d4f0f08d0c",
          "linkedWithoutMetadata": "8df116dacc110dfa89ee35d3af047a33c225fc253e5bd42bb6c9b8d4f0f08d0c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "@openzeppelin/contracts/utils/StorageSlot.sol:34",
        "version": {
          "withMetadata": "f7d763453783890adb54104f954e4837701efeb4f217cbc39bfa3928e03804ec",
          "withoutMetadata": "f7d763453783890adb54104f954e4837701efeb4f217cbc39bfa3928e03804ec",
          "linkedWithoutMetadata": "f7d763453783890adb54104f954e4837701efeb4f217cbc39bfa3928e03804ec"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:12",
        "version": {
          "withMetadata": "833fe0ef1e840c31314a99d565411201c8017b12e1b7a60bc216ac5ff28e8d53",
          "withoutMetadata": "833fe0ef1e840c31314a99d565411201c8017b12e1b7a60bc216ac5ff28e8d53",
          "linkedWithoutMetadata": "833fe0ef1e840c31314a99d565411201c8017b12e1b7a60bc216ac5ff28e8d53"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8170550afe9ce0b27d8555a3a57631e8b520ae2898292cbd904623cab125d924",
          "withoutMetadata": "8170550afe9ce0b27d8555a3a57631e8b520ae2898292cbd904623cab125d924",
          "linkedWithoutMetadata": "8170550afe9ce0b27d8555a3a57631e8b520ae2898292cbd904623cab125d924"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "@openzeppelin/contracts/utils/math/SignedMath.sol:SignedMath": {
        "src": "@openzeppelin/contracts/utils/math/SignedMath.sol:9",
        "version": {
          "withMetadata": "fcb662568583bec6a981f38f0fd6a1b881708ba8b3a936257f7baa16631e3905",
          "withoutMetadata": "fcb662568583bec6a981f38f0fd6a1b881708ba8b3a936257f7baa16631e3905",
          "linkedWithoutMetadata": "fcb662568583bec6a981f38f0fd6a1b881708ba8b3a936257f7baa16631e3905"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/ERC1967/ERC1967Proxy.sol:ERC1967Proxy": {
        "src": "contracts/ERC1967/ERC1967Proxy.sol:13",
        "version": {
          "withMetadata": "c2e85721df6a5fdc0aa3d4ab7c71d6cfc8758db29ea45c180660c18881ad0901",
          "withoutMetadata": "c2e85721df6a5fdc0aa3d4ab7c71d6cfc8758db29ea45c180660c18881ad0901",
          "linkedWithoutMetadata": "c2e85721df6a5fdc0aa3d4ab7c71d6cfc8758db29ea45c180660c18881ad0901"
        },
        "inherit": [
          "contracts/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC1967Proxy",
            "src": "contracts/ERC1967/ERC1967Proxy.sol:20"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade": {
        "src": "contracts/ERC1967/ERC1967Upgrade.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/Lock.sol:Lock": {
        "src": "contracts/Lock.sol:7",
        "version": {
          "withMetadata": "005f4385bf5232330f820f9afe17ff7f57100bd00fc009f5aa0e3fd94bb4d9b3",
          "withoutMetadata": "005f4385bf5232330f820f9afe17ff7f57100bd00fc009f5aa0e3fd94bb4d9b3",
          "linkedWithoutMetadata": "005f4385bf5232330f820f9afe17ff7f57100bd00fc009f5aa0e3fd94bb4d9b3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256)",
          "withdraw()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lock",
            "src": "contracts/Lock.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "unlockTime",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Lock",
              "src": "contracts/Lock.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address_payable",
              "contract": "Lock",
              "src": "contracts/Lock.sol:9"
            }
          ],
          "types": {
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/Proxy.sol:Proxy": {
        "src": "contracts/Proxy.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/access/Ownable.sol:Ownable": {
        "src": "contracts/access/Ownable.sol:18",
        "inherit": [
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/beacon/BeaconProxy.sol:BeaconProxy": {
        "src": "contracts/beacon/BeaconProxy.sol:18",
        "version": {
          "withMetadata": "404a9a5e4ea33d5d25d408d6710b750346790589f9aa3a01821c958c3fdd5170",
          "withoutMetadata": "404a9a5e4ea33d5d25d408d6710b750346790589f9aa3a01821c958c3fdd5170",
          "linkedWithoutMetadata": "404a9a5e4ea33d5d25d408d6710b750346790589f9aa3a01821c958c3fdd5170"
        },
        "inherit": [
          "contracts/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BeaconProxy",
            "src": "contracts/beacon/BeaconProxy.sol:30"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/beacon/IBeacon.sol:IBeacon": {
        "src": "contracts/beacon/IBeacon.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/beacon/UpgradeableBeacon.sol:UpgradeableBeacon": {
        "src": "contracts/beacon/UpgradeableBeacon.sol:16",
        "version": {
          "withMetadata": "f6a6c1fe31cd9cbc777715e668f4ae931c900738afc1b514bc8379e526106e5d",
          "withoutMetadata": "f6a6c1fe31cd9cbc777715e668f4ae931c900738afc1b514bc8379e526106e5d",
          "linkedWithoutMetadata": "f6a6c1fe31cd9cbc777715e668f4ae931c900738afc1b514bc8379e526106e5d"
        },
        "inherit": [
          "contracts/access/Ownable.sol:Ownable",
          "contracts/utils/Context.sol:Context",
          "contracts/beacon/IBeacon.sol:IBeacon"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "implementation()",
          "upgradeTo(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UpgradeableBeacon",
            "src": "contracts/beacon/UpgradeableBeacon.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/access/Ownable.sol:19"
            },
            {
              "label": "_implementation",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UpgradeableBeacon",
              "src": "contracts/beacon/UpgradeableBeacon.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/AccessControl.sol:AccessControl": {
        "src": "contracts/contracts/AccessControl.sol:49",
        "inherit": [
          "contracts/utils/ERC165.sol:ERC165",
          "contracts/utils/IERC165.sol:IERC165",
          "contracts/interfaces/IAccessControl.sol:IAccessControl",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)",
              "contract": "AccessControl",
              "src": "contracts/contracts/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)9243_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/AccessControlEnumerable.sol:AccessControlEnumerable": {
        "src": "contracts/contracts/AccessControlEnumerable.sol:13",
        "inherit": [
          "contracts/contracts/AccessControl.sol:AccessControl",
          "contracts/utils/ERC165.sol:ERC165",
          "contracts/utils/IERC165.sol:IERC165",
          "contracts/interfaces/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/interfaces/IAccessControl.sol:IAccessControl",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)",
              "contract": "AccessControl",
              "src": "contracts/contracts/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)38576_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts/contracts/AccessControlEnumerable.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)38576_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)38576_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)38261_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)9243_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)38261_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/ERC20.sol:ERC20": {
        "src": "contracts/contracts/ERC20.sol:35",
        "version": {
          "withMetadata": "2c795d8659b10d7b5833efcba4e5fd55ee3faf105729ca146267646e45d07801",
          "withoutMetadata": "2c795d8659b10d7b5833efcba4e5fd55ee3faf105729ca146267646e45d07801",
          "linkedWithoutMetadata": "2c795d8659b10d7b5833efcba4e5fd55ee3faf105729ca146267646e45d07801"
        },
        "inherit": [
          "contracts/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/interfaces/IERC20.sol:IERC20",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/contracts/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/ERC20Capped.sol:ERC20Capped": {
        "src": "contracts/contracts/ERC20Capped.sol:11",
        "inherit": [
          "contracts/contracts/ERC20.sol:ERC20",
          "contracts/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/interfaces/IERC20.sol:IERC20",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "cap()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20Capped",
            "src": "contracts/contracts/ERC20Capped.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "_cap",
            "src": "contracts/contracts/ERC20Capped.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GFarmTradingStorageV5.sol:GFarmTradingStorageV5": {
        "src": "contracts/contracts/GFarmTradingStorageV5.sol:9",
        "version": {
          "withMetadata": "9c3affd62491628efadfb1c1a2dd0df5f6827ab2e5059219c99416e23475340c",
          "withoutMetadata": "9c3affd62491628efadfb1c1a2dd0df5f6827ab2e5059219c99416e23475340c",
          "linkedWithoutMetadata": "9c3affd62491628efadfb1c1a2dd0df5f6827ab2e5059219c99416e23475340c"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "setGov(address)",
          "setDev(address)",
          "updateToken(address)",
          "addTradingContract(address)",
          "removeTradingContract(address)",
          "addSupportedToken(address)",
          "setPriceAggregator(address)",
          "setVault(address)",
          "setTrading(address)",
          "setCallbacks(address)",
          "setTokenDaiRouter(address)",
          "setMaxTradesPerBlock(uint256)",
          "setMaxTradesPerPair(uint256)",
          "setMaxPendingMarketOrders(uint256)",
          "setMaxGainP(uint256)",
          "setDefaultLeverageUnlocked(uint256)",
          "setMaxSlP(uint256)",
          "setNftSuccessTimelock(uint256)",
          "setSpreadReductionsP(uint256[5])",
          "setMaxOpenInterestDai(uint256,uint256)",
          "storeTrade((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,bool))",
          "unregisterTrade(address,uint256,uint256)",
          "storePendingMarketOrder(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256),uint256,bool)",
          "unregisterPendingMarketOrder(uint256,bool)",
          "storeOpenLimitOrder((address,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "updateOpenLimitOrder((address,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "unregisterOpenLimitOrder(address,uint256,uint256)",
          "storePendingNftOrder((address,uint256,address,uint256,uint256,uint8),uint256)",
          "unregisterPendingNftOrder(uint256)",
          "updateSl(address,uint256,uint256,uint256)",
          "updateTp(address,uint256,uint256,uint256)",
          "updateTrade((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256))",
          "storeReferral(address,address)",
          "increaseReferralRewards(address,uint256)",
          "increaseNftRewards(uint256,uint256)",
          "setLeverageUnlocked(address,uint256)",
          "handleDevGovFees(uint256,uint256,bool,bool)",
          "claimFees()",
          "handleTokens(address,uint256,bool)",
          "transferDai(address,address,uint256)",
          "transferLinkToAggregator(address,uint256,uint256)",
          "firstEmptyTradeIndex(address,uint256)",
          "firstEmptyOpenLimitIndex(address,uint256)",
          "hasOpenLimitOrder(address,uint256,uint256)",
          "getReferral(address)",
          "getLeverageUnlocked(address)",
          "pairTradersArray(uint256)",
          "getPendingOrderIds(address)",
          "pendingOrderIdsCount(address)",
          "getOpenLimitOrder(address,uint256,uint256)",
          "getOpenLimitOrders()",
          "getSupportedTokens()",
          "getSpreadReductionsArray()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "token",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTradesPerPair",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxTradesPerBlock",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxPendingMarketOrders",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:38"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxGainP",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:39"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxSlP",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "defaultLeverageUnlocked",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:41"
          },
          {
            "kind": "state-variable-assignment",
            "name": "nftSuccessTimelock",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "spreadReductionsP",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:43"
          },
          {
            "kind": "state-variable-assignment",
            "name": "gov",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:46"
          },
          {
            "kind": "state-variable-assignment",
            "name": "dev",
            "src": "contracts/contracts/GFarmTradingStorageV5.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "priceAggregator",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(AggregatorInterfaceV5)32830",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:20"
            },
            {
              "label": "trading",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(PausableInterfaceV5)34235",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:21"
            },
            {
              "label": "callbacks",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(PausableInterfaceV5)34235",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:22"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(TokenInterfaceV5)35103",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:23"
            },
            {
              "label": "vault",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:32"
            },
            {
              "label": "tokenDaiRouter",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:33"
            },
            {
              "label": "maxTradesPerPair",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:36"
            },
            {
              "label": "maxTradesPerBlock",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:37"
            },
            {
              "label": "maxPendingMarketOrders",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:38"
            },
            {
              "label": "maxGainP",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:39"
            },
            {
              "label": "maxSlP",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:40"
            },
            {
              "label": "defaultLeverageUnlocked",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:41"
            },
            {
              "label": "nftSuccessTimelock",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:42"
            },
            {
              "label": "spreadReductionsP",
              "offset": 0,
              "slot": "13",
              "type": "t_array(t_uint256)5_storage",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:43"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "18",
              "type": "t_address",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:46"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "19",
              "type": "t_address",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:47"
            },
            {
              "label": "devFeesToken",
              "offset": 0,
              "slot": "20",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:50"
            },
            {
              "label": "devFeesDai",
              "offset": 0,
              "slot": "21",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:51"
            },
            {
              "label": "govFeesToken",
              "offset": 0,
              "slot": "22",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:52"
            },
            {
              "label": "govFeesDai",
              "offset": 0,
              "slot": "23",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:53"
            },
            {
              "label": "tokensBurned",
              "offset": 0,
              "slot": "24",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:56"
            },
            {
              "label": "tokensMinted",
              "offset": 0,
              "slot": "25",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:57"
            },
            {
              "label": "nftRewards",
              "offset": 0,
              "slot": "26",
              "type": "t_uint256",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:58"
            },
            {
              "label": "supportedTokens",
              "offset": 0,
              "slot": "27",
              "type": "t_array(t_address)dyn_storage",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:127"
            },
            {
              "label": "traders",
              "offset": 0,
              "slot": "28",
              "type": "t_mapping(t_address,t_struct(Trader)10422_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:130"
            },
            {
              "label": "openTrades",
              "offset": 0,
              "slot": "29",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)10443_storage)))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:133"
            },
            {
              "label": "openTradesInfo",
              "offset": 0,
              "slot": "30",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)10456_storage)))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:135"
            },
            {
              "label": "openTradesCount",
              "offset": 0,
              "slot": "31",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:137"
            },
            {
              "label": "openLimitOrderIds",
              "offset": 0,
              "slot": "32",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:140"
            },
            {
              "label": "openLimitOrdersCount",
              "offset": 0,
              "slot": "33",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:142"
            },
            {
              "label": "openLimitOrders",
              "offset": 0,
              "slot": "34",
              "type": "t_array(t_struct(OpenLimitOrder)10483_storage)dyn_storage",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:143"
            },
            {
              "label": "reqID_pendingMarketOrder",
              "offset": 0,
              "slot": "35",
              "type": "t_mapping(t_uint256,t_struct(PendingMarketOrder)10497_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:146"
            },
            {
              "label": "reqID_pendingNftOrder",
              "offset": 0,
              "slot": "36",
              "type": "t_mapping(t_uint256,t_struct(PendingNftOrder)10511_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:147"
            },
            {
              "label": "pendingOrderIds",
              "offset": 0,
              "slot": "37",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:148"
            },
            {
              "label": "pendingMarketOpenCount",
              "offset": 0,
              "slot": "38",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:149"
            },
            {
              "label": "pendingMarketCloseCount",
              "offset": 0,
              "slot": "39",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:150"
            },
            {
              "label": "pairTraders",
              "offset": 0,
              "slot": "40",
              "type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:153"
            },
            {
              "label": "pairTradersId",
              "offset": 0,
              "slot": "41",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:154"
            },
            {
              "label": "openInterestDai",
              "offset": 0,
              "slot": "42",
              "type": "t_mapping(t_uint256,t_array(t_uint256)3_storage)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:157"
            },
            {
              "label": "tradesPerBlock",
              "offset": 0,
              "slot": "43",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:160"
            },
            {
              "label": "nftLastSuccess",
              "offset": 0,
              "slot": "44",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:161"
            },
            {
              "label": "isTradingContract",
              "offset": 0,
              "slot": "45",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GFarmTradingStorageV5",
              "src": "contracts/contracts/GFarmTradingStorageV5.sol:164"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(OpenLimitOrder)10483_storage)dyn_storage": {
              "label": "struct GFarmTradingStorageV5.OpenLimitOrder[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)3_storage": {
              "label": "uint256[3]",
              "numberOfBytes": "96"
            },
            "t_array(t_uint256)5_storage": {
              "label": "uint256[5]",
              "numberOfBytes": "160"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(AggregatorInterfaceV5)32830": {
              "label": "contract AggregatorInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_contract(PausableInterfaceV5)34235": {
              "label": "contract PausableInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_contract(TokenInterfaceV5)35103": {
              "label": "contract TokenInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_enum(LimitOrder)10415": {
              "label": "enum GFarmTradingStorageV5.LimitOrder",
              "members": [
                "TP",
                "SL",
                "LIQ",
                "OPEN"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)10443_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct GFarmTradingStorageV5.Trade)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)10456_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct GFarmTradingStorageV5.TradeInfo)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_uint256)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => uint256)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Trader)10422_storage)": {
              "label": "mapping(address => struct GFarmTradingStorageV5.Trader)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
              "label": "mapping(uint256 => address[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)3_storage)": {
              "label": "mapping(uint256 => uint256[3])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Trade)10443_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct GFarmTradingStorageV5.Trade))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInfo)10456_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct GFarmTradingStorageV5.TradeInfo))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(uint256 => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PendingMarketOrder)10497_storage)": {
              "label": "mapping(uint256 => struct GFarmTradingStorageV5.PendingMarketOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PendingNftOrder)10511_storage)": {
              "label": "mapping(uint256 => struct GFarmTradingStorageV5.PendingNftOrder)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Trade)10443_storage)": {
              "label": "mapping(uint256 => struct GFarmTradingStorageV5.Trade)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TradeInfo)10456_storage)": {
              "label": "mapping(uint256 => struct GFarmTradingStorageV5.TradeInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(OpenLimitOrder)10483_storage": {
              "label": "struct GFarmTradingStorageV5.OpenLimitOrder",
              "members": [
                {
                  "label": "trader",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pairIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "positionSize",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "spreadReductionP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "buy",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "leverage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "tp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "sl",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "minPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "maxPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                }
              ],
              "numberOfBytes": "416"
            },
            "t_struct(PendingMarketOrder)10497_storage": {
              "label": "struct GFarmTradingStorageV5.PendingMarketOrder",
              "members": [
                {
                  "label": "trade",
                  "type": "t_struct(Trade)10443_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "block",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "10"
                },
                {
                  "label": "wantedPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "11"
                },
                {
                  "label": "slippageP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "12"
                },
                {
                  "label": "spreadReductionP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "13"
                },
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "14"
                }
              ],
              "numberOfBytes": "480"
            },
            "t_struct(PendingNftOrder)10511_storage": {
              "label": "struct GFarmTradingStorageV5.PendingNftOrder",
              "members": [
                {
                  "label": "nftHolder",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "nftId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "trader",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "pairIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "orderType",
                  "type": "t_enum(LimitOrder)10415",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Trade)10443_storage": {
              "label": "struct GFarmTradingStorageV5.Trade",
              "members": [
                {
                  "label": "trader",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "pairIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "initialPosToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "positionSizeDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "openPrice",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "buy",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "leverage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "tp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "sl",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                }
              ],
              "numberOfBytes": "320"
            },
            "t_struct(TradeInfo)10456_storage": {
              "label": "struct GFarmTradingStorageV5.TradeInfo",
              "members": [
                {
                  "label": "tokenId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tokenPriceDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "openInterestDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "tpLastUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "slLastUpdated",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "beingMarketClosed",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(Trader)10422_storage": {
              "label": "struct GFarmTradingStorageV5.Trader",
              "members": [
                {
                  "label": "leverageUnlocked",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "referral",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "referralRewardsTotal",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNS.sol:GainsNetworkToken": {
        "src": "contracts/contracts/GNS.sol:6",
        "version": {
          "withMetadata": "8f383225aee576505db06d81afc3bda6d41b48a2e347ebc2c11e8d61b71968c0",
          "withoutMetadata": "8f383225aee576505db06d81afc3bda6d41b48a2e347ebc2c11e8d61b71968c0",
          "linkedWithoutMetadata": "8f383225aee576505db06d81afc3bda6d41b48a2e347ebc2c11e8d61b71968c0"
        },
        "inherit": [
          "contracts/contracts/AccessControlEnumerable.sol:AccessControlEnumerable",
          "contracts/contracts/AccessControl.sol:AccessControl",
          "contracts/utils/ERC165.sol:ERC165",
          "contracts/utils/IERC165.sol:IERC165",
          "contracts/interfaces/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "contracts/interfaces/IAccessControl.sol:IAccessControl",
          "contracts/contracts/ERC20Capped.sol:ERC20Capped",
          "contracts/contracts/ERC20.sol:ERC20",
          "contracts/extensions/IERC20Metadata.sol:IERC20Metadata",
          "contracts/interfaces/IERC20.sol:IERC20",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setupRoles(address,address,address,address,address,address)",
          "mint(address,uint256)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GainsNetworkToken",
            "src": "contracts/contracts/GNS.sol:12"
          },
          {
            "kind": "state-variable-assignment",
            "name": "initialized",
            "src": "contracts/contracts/GNS.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/contracts/ERC20.sol:43"
            },
            {
              "label": "_roles",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)",
              "contract": "AccessControl",
              "src": "contracts/contracts/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)38576_storage)",
              "contract": "AccessControlEnumerable",
              "src": "contracts/contracts/AccessControlEnumerable.sol:16"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "7",
              "type": "t_bool",
              "contract": "GainsNetworkToken",
              "src": "contracts/contracts/GNS.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)38576_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)9243_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)38576_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)38261_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)9243_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)38261_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSBorrowingFeesV6_4.sol:GNSBorrowingFeesV6_4": {
        "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:11",
        "version": {
          "withMetadata": "575685d34dbe1bf9b6702e4d48aecf09f287d3996746b0336dceb5baa21a9777",
          "withoutMetadata": "575685d34dbe1bf9b6702e4d48aecf09f287d3996746b0336dceb5baa21a9777",
          "linkedWithoutMetadata": "575685d34dbe1bf9b6702e4d48aecf09f287d3996746b0336dceb5baa21a9777"
        },
        "inherit": [
          "contracts/interfaces/GNSBorrowingFeesInterfaceV6_4.sol:GNSBorrowingFeesInterfaceV6_4",
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address)",
          "setPairParams(uint256,(uint16,uint32,uint48,uint72))",
          "setPairParamsArray(uint256[],struct GNSBorrowingFeesInterfaceV6_4.PairParams[])",
          "setGroupParams(uint16,(uint32,uint72,uint48))",
          "setGroupParamsArray(uint16[],struct GNSBorrowingFeesInterfaceV6_4.GroupParams[])",
          "getPendingAccFees((uint64,uint64,uint256,uint256,uint32,uint256,uint256,uint72,uint48))",
          "getPairGroupAccFeesDeltas(uint256,struct GNSBorrowingFeesInterfaceV6_4.PairGroup[],(uint64,uint64,uint48,uint80),uint256,bool,uint256)",
          "getPairPendingAccFees(uint256,uint256)",
          "getPairPendingAccFee(uint256,uint256,bool)",
          "getGroupPendingAccFees(uint16,uint256)",
          "getGroupPendingAccFee(uint16,uint256,bool)",
          "handleTradeAction(address,uint256,uint256,uint256,bool,bool)",
          "getTradeBorrowingFee((address,uint256,uint256,bool,uint256,uint256))",
          "getTradeLiquidationPrice((address,uint256,uint256,uint256,bool,uint256,uint256))",
          "getPairOpenInterestDai(uint256)",
          "getPairGroupIndex(uint256)",
          "withinMaxGroupOi(uint256,bool,uint256)",
          "getGroup(uint16)",
          "getPair(uint256)",
          "getAllPairs()",
          "getGroups(uint16[])",
          "getTradeInitialAccFees(address,uint256,uint256)",
          "getPairMaxOi(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "storageT",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(StorageInterfaceV5)34745",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:17"
            },
            {
              "label": "pairInfos",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(GNSPairInfosInterfaceV6)33308",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:18"
            },
            {
              "label": "groups",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint16,t_struct(Group)32951_storage)",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:21"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Pair)32925_storage)",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:22"
            },
            {
              "label": "initialAccFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(InitialAccFees)32960_storage)))",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:23"
            },
            {
              "label": "pairOis",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(PairOi)32934_storage)",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:25"
            },
            {
              "label": "groupFeeExponents",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint48)",
              "contract": "GNSBorrowingFeesV6_4",
              "src": "contracts/contracts/GNSBorrowingFeesV6_4.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(PairGroup)32908_storage)dyn_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.PairGroup[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GNSPairInfosInterfaceV6)33308": {
              "label": "contract GNSPairInfosInterfaceV6",
              "numberOfBytes": "20"
            },
            "t_contract(StorageInterfaceV5)34745": {
              "label": "contract StorageInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(InitialAccFees)32960_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct GNSBorrowingFeesInterfaceV6_4.InitialAccFees)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint16,t_struct(Group)32951_storage)": {
              "label": "mapping(uint16 => struct GNSBorrowingFeesInterfaceV6_4.Group)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(InitialAccFees)32960_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct GNSBorrowingFeesInterfaceV6_4.InitialAccFees))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(InitialAccFees)32960_storage)": {
              "label": "mapping(uint256 => struct GNSBorrowingFeesInterfaceV6_4.InitialAccFees)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Pair)32925_storage)": {
              "label": "mapping(uint256 => struct GNSBorrowingFeesInterfaceV6_4.Pair)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PairOi)32934_storage)": {
              "label": "mapping(uint256 => struct GNSBorrowingFeesInterfaceV6_4.PairOi)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint48)": {
              "label": "mapping(uint256 => uint48)",
              "numberOfBytes": "32"
            },
            "t_struct(Group)32951_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.Group",
              "members": [
                {
                  "label": "oiLong",
                  "type": "t_uint112",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "oiShort",
                  "type": "t_uint112",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "feePerBlock",
                  "type": "t_uint32",
                  "offset": 28,
                  "slot": "0"
                },
                {
                  "label": "accFeeLong",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accFeeShort",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "accLastUpdatedBlock",
                  "type": "t_uint48",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "maxOi",
                  "type": "t_uint80",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "lastAccBlockWeightedMarketCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(InitialAccFees)32960_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.InitialAccFees",
              "members": [
                {
                  "label": "accPairFee",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accGroupFee",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "block",
                  "type": "t_uint48",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "_placeholder",
                  "type": "t_uint80",
                  "offset": 22,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Pair)32925_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.Pair",
              "members": [
                {
                  "label": "groups",
                  "type": "t_array(t_struct(PairGroup)32908_storage)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feePerBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "accFeeLong",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "1"
                },
                {
                  "label": "accFeeShort",
                  "type": "t_uint64",
                  "offset": 12,
                  "slot": "1"
                },
                {
                  "label": "accLastUpdatedBlock",
                  "type": "t_uint48",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "feeExponent",
                  "type": "t_uint48",
                  "offset": 26,
                  "slot": "1"
                },
                {
                  "label": "lastAccBlockWeightedMarketCap",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PairGroup)32908_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.PairGroup",
              "members": [
                {
                  "label": "groupIndex",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "block",
                  "type": "t_uint48",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "initialAccFeeLong",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "initialAccFeeShort",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "prevGroupAccFeeLong",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "prevGroupAccFeeShort",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pairAccFeeLong",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "1"
                },
                {
                  "label": "pairAccFeeShort",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "_placeholder",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PairOi)32934_storage": {
              "label": "struct GNSBorrowingFeesInterfaceV6_4.PairOi",
              "members": [
                {
                  "label": "long",
                  "type": "t_uint72",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "short",
                  "type": "t_uint72",
                  "offset": 9,
                  "slot": "0"
                },
                {
                  "label": "max",
                  "type": "t_uint72",
                  "offset": 18,
                  "slot": "0"
                },
                {
                  "label": "_placeholder",
                  "type": "t_uint40",
                  "offset": 27,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint40": {
              "label": "uint40",
              "numberOfBytes": "5"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            },
            "t_uint72": {
              "label": "uint72",
              "numberOfBytes": "9"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            },
            "t_uint80": {
              "label": "uint80",
              "numberOfBytes": "10"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSOracleRewardsV6_4_1.sol:GNSOracleRewardsV6_4_1": {
        "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:10",
        "version": {
          "withMetadata": "31108a557963207d805eb58052119f991de696b93ad4f57fd207a0fd3153ffaa",
          "withoutMetadata": "31108a557963207d805eb58052119f991de696b93ad4f57fd207a0fd3153ffaa",
          "linkedWithoutMetadata": "31108a557963207d805eb58052119f991de696b93ad4f57fd207a0fd3153ffaa"
        },
        "inherit": [
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,uint256,uint256)",
          "updateTriggerTimeout(uint256)",
          "updateOracles(uint256)",
          "storeTrigger((address,uint256,uint256,uint8))",
          "unregisterTrigger((address,uint256,uint256,uint8))",
          "distributeOracleReward((address,uint256,uint256,uint8),uint256)",
          "claimRewards(address)",
          "setOpenLimitOrderType(address,uint256,uint256,uint8)",
          "triggered((address,uint256,uint256,uint8))",
          "timedOut((address,uint256,uint256,uint8))",
          "getOracles()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "storageT",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(StorageInterfaceV5)34745",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:23"
            },
            {
              "label": "triggerTimeout",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:27"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:28"
            },
            {
              "label": "pendingRewardsGns",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:45"
            },
            {
              "label": "triggeredLimits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(LimitOrder)34268,t_uint256))))",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:46"
            },
            {
              "label": "openLimitOrderTypes",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_enum(OpenLimitOrderType)14818)))",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:48"
            },
            {
              "label": "stateCopied",
              "offset": 0,
              "slot": "6",
              "type": "t_bool",
              "contract": "GNSOracleRewardsV6_4_1",
              "src": "contracts/contracts/GNSOracleRewardsV6_4_1.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(StorageInterfaceV5)34745": {
              "label": "contract StorageInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_enum(LimitOrder)34268": {
              "label": "enum StorageInterfaceV5.LimitOrder",
              "members": [
                "TP",
                "SL",
                "LIQ",
                "OPEN"
              ],
              "numberOfBytes": "1"
            },
            "t_enum(OpenLimitOrderType)14818": {
              "label": "enum GNSOracleRewardsV6_4_1.OpenLimitOrderType",
              "members": [
                "LEGACY",
                "REVERSAL",
                "MOMENTUM"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_enum(OpenLimitOrderType)14818)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => enum GNSOracleRewardsV6_4_1.OpenLimitOrderType)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(LimitOrder)34268,t_uint256))))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => mapping(enum StorageInterfaceV5.LimitOrder => uint256))))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(LimitOrder)34268,t_uint256)": {
              "label": "mapping(enum StorageInterfaceV5.LimitOrder => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_enum(OpenLimitOrderType)14818)": {
              "label": "mapping(uint256 => enum GNSOracleRewardsV6_4_1.OpenLimitOrderType)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(LimitOrder)34268,t_uint256))": {
              "label": "mapping(uint256 => mapping(enum StorageInterfaceV5.LimitOrder => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_enum(OpenLimitOrderType)14818))": {
              "label": "mapping(uint256 => mapping(uint256 => enum GNSOracleRewardsV6_4_1.OpenLimitOrderType))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(LimitOrder)34268,t_uint256)))": {
              "label": "mapping(uint256 => mapping(uint256 => mapping(enum StorageInterfaceV5.LimitOrder => uint256)))",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSPairInfosV6_1.sol:GNSPairInfosV6_1": {
        "src": "contracts/contracts/GNSPairInfosV6_1.sol:6",
        "version": {
          "withMetadata": "c810ba4b252cdc8daa224ade8db9dc23523251c9b472ea93b75bfdf58303f3d0",
          "withoutMetadata": "c810ba4b252cdc8daa224ade8db9dc23523251c9b472ea93b75bfdf58303f3d0",
          "linkedWithoutMetadata": "c810ba4b252cdc8daa224ade8db9dc23523251c9b472ea93b75bfdf58303f3d0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "setManager(address)",
          "setMaxNegativePnlOnOpenP(uint256)",
          "setPairParams(uint256,(uint256,uint256,uint256,uint256))",
          "setPairParamsArray(uint256[],struct GNSPairInfosV6_1.PairParams[])",
          "setOnePercentDepth(uint256,uint256,uint256)",
          "setOnePercentDepthArray(uint256[],uint256[],uint256[])",
          "setRolloverFeePerBlockP(uint256,uint256)",
          "setRolloverFeePerBlockPArray(uint256[],uint256[])",
          "setFundingFeePerBlockP(uint256,uint256)",
          "setFundingFeePerBlockPArray(uint256[],uint256[])",
          "storeTradeInitialAccFees(address,uint256,uint256,bool)",
          "getPendingAccRolloverFees(uint256)",
          "getPendingAccFundingFees(uint256)",
          "getTradePriceImpact(uint256,uint256,bool,uint256)",
          "getTradePriceImpactPure(uint256,bool,uint256,uint256,uint256)",
          "getTradeRolloverFee(address,uint256,uint256,uint256)",
          "getTradeRolloverFeePure(uint256,uint256,uint256)",
          "getTradeFundingFee(address,uint256,uint256,bool,uint256,uint256)",
          "getTradeFundingFeePure(int256,int256,uint256,uint256)",
          "getTradeLiquidationPrice(address,uint256,uint256,uint256,bool,uint256,uint256)",
          "getTradeLiquidationPricePure(uint256,bool,uint256,uint256,uint256,int256)",
          "getTradeValue(address,uint256,uint256,bool,uint256,uint256,int256,uint256)",
          "getTradeValuePure(uint256,int256,uint256,int256,uint256)",
          "getPairInfos(uint256[])",
          "getOnePercentDepthAbove(uint256)",
          "getOnePercentDepthBelow(uint256)",
          "getRolloverFeePerBlockP(uint256)",
          "getFundingFeePerBlockP(uint256)",
          "getAccRolloverFees(uint256)",
          "getAccRolloverFeesUpdateBlock(uint256)",
          "getAccFundingFeesLong(uint256)",
          "getAccFundingFeesShort(uint256)",
          "getAccFundingFeesUpdateBlock(uint256)",
          "getTradeInitialAccRolloverFeesPerCollateral(address,uint256,uint256)",
          "getTradeInitialAccFundingFeesPerOi(address,uint256,uint256)",
          "getTradeOpenedAfterUpdate(address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GNSPairInfosV6_1",
            "src": "contracts/contracts/GNSPairInfosV6_1.sol:89"
          },
          {
            "kind": "state-variable-immutable",
            "name": "storageT",
            "src": "contracts/contracts/GNSPairInfosV6_1.sol:8"
          },
          {
            "kind": "state-variable-assignment",
            "name": "maxNegativePnlOnOpenP",
            "src": "contracts/contracts/GNSPairInfosV6_1.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "manager",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:9"
            },
            {
              "label": "maxNegativePnlOnOpenP",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:16"
            },
            {
              "label": "pairParams",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(PairParams)15385_storage)",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:26"
            },
            {
              "label": "pairFundingFees",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(PairFundingFees)15397_storage)",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:35"
            },
            {
              "label": "pairRolloverFees",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_struct(PairRolloverFees)15407_storage)",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:43"
            },
            {
              "label": "tradeInitialAccFees",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)15419_storage)))",
              "contract": "GNSPairInfosV6_1",
              "src": "contracts/contracts/GNSPairInfosV6_1.sol:52"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)15419_storage)))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(TradeInitialAccFees)15419_storage))": {
              "label": "mapping(uint256 => mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PairFundingFees)15397_storage)": {
              "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairFundingFees)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PairParams)15385_storage)": {
              "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairParams)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(PairRolloverFees)15407_storage)": {
              "label": "mapping(uint256 => struct GNSPairInfosV6_1.PairRolloverFees)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(TradeInitialAccFees)15419_storage)": {
              "label": "mapping(uint256 => struct GNSPairInfosV6_1.TradeInitialAccFees)",
              "numberOfBytes": "32"
            },
            "t_struct(PairFundingFees)15397_storage": {
              "label": "struct GNSPairInfosV6_1.PairFundingFees",
              "members": [
                {
                  "label": "accPerOiLong",
                  "type": "t_int256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "accPerOiShort",
                  "type": "t_int256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastUpdateBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(PairParams)15385_storage": {
              "label": "struct GNSPairInfosV6_1.PairParams",
              "members": [
                {
                  "label": "onePercentDepthAbove",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "onePercentDepthBelow",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "rolloverFeePerBlockP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "fundingFeePerBlockP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(PairRolloverFees)15407_storage": {
              "label": "struct GNSPairInfosV6_1.PairRolloverFees",
              "members": [
                {
                  "label": "accPerCollateral",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastUpdateBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(TradeInitialAccFees)15419_storage": {
              "label": "struct GNSPairInfosV6_1.TradeInitialAccFees",
              "members": [
                {
                  "label": "rollover",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "funding",
                  "type": "t_int256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "openedAfterUpdate",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6": {
        "src": "contracts/contracts/GNSPairStorageV6.sol:6",
        "version": {
          "withMetadata": "931be3e34e62654695227d3960dd707029022205fce1132087d6ddf3428892c1",
          "withoutMetadata": "931be3e34e62654695227d3960dd707029022205fce1132087d6ddf3428892c1",
          "linkedWithoutMetadata": "931be3e34e62654695227d3960dd707029022205fce1132087d6ddf3428892c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(uint256,address)",
          "addPair((string,string,(address,address,uint8,uint256),uint256,uint256,uint256))",
          "addPairs(struct GNSPairsStorageV6.Pair[])",
          "updatePair(uint256,(string,string,(address,address,uint8,uint256),uint256,uint256,uint256))",
          "addGroup((string,bytes32,uint256,uint256,uint256))",
          "updateGroup(uint256,(string,bytes32,uint256,uint256,uint256))",
          "addFee((string,uint256,uint256,uint256,uint256,uint256,uint256))",
          "updateFee(uint256,(string,uint256,uint256,uint256,uint256,uint256,uint256))",
          "updateGroupCollateral(uint256,uint256,bool,bool)",
          "pairJob(uint256)",
          "pairFeed(uint256)",
          "pairSpreadP(uint256)",
          "pairMinLeverage(uint256)",
          "pairMaxLeverage(uint256)",
          "groupMaxCollateral(uint256)",
          "groupCollateral(uint256,bool)",
          "guaranteedSlEnabled(uint256)",
          "pairOpenFeeP(uint256)",
          "pairCloseFeeP(uint256)",
          "pairOracleFeeP(uint256)",
          "pairNftLimitOrderFeeP(uint256)",
          "pairReferralFeeP(uint256)",
          "pairMinLevPosDai(uint256)",
          "pairsBackend(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GNSPairsStorageV6",
            "src": "contracts/contracts/GNSPairStorageV6.sol:74"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "currentOrderId",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:50"
            },
            {
              "label": "pairsCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:51"
            },
            {
              "label": "groupsCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:52"
            },
            {
              "label": "feesCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:53"
            },
            {
              "label": "storageT",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(StorageInterfaceV5)34745",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:55"
            },
            {
              "label": "pairs",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(Pair)17050_storage)",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:57"
            },
            {
              "label": "groups",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Group)17061_storage)",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:58"
            },
            {
              "label": "fees",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_struct(Fee)17076_storage)",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:59"
            },
            {
              "label": "isPairListed",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:61"
            },
            {
              "label": "groupsCollaterals",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)",
              "contract": "GNSPairsStorageV6",
              "src": "contracts/contracts/GNSPairStorageV6.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(StorageInterfaceV5)34745": {
              "label": "contract StorageInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_enum(FeedCalculation)17026": {
              "label": "enum GNSPairsStorageV6.FeedCalculation",
              "members": [
                "DEFAULT",
                "INVERT",
                "COMBINE"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_string_memory_ptr,t_bool)": {
              "label": "mapping(string => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))": {
              "label": "mapping(string => mapping(string => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
              "label": "mapping(uint256 => uint256[2])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Fee)17076_storage)": {
              "label": "mapping(uint256 => struct GNSPairsStorageV6.Fee)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Group)17061_storage)": {
              "label": "mapping(uint256 => struct GNSPairsStorageV6.Group)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Pair)17050_storage)": {
              "label": "mapping(uint256 => struct GNSPairsStorageV6.Pair)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Fee)17076_storage": {
              "label": "struct GNSPairsStorageV6.Fee",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "openFeeP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "closeFeeP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "oracleFeeP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "nftLimitOrderFeeP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "referralFeeP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "minLevPosDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_struct(Feed)17036_storage": {
              "label": "struct GNSPairsStorageV6.Feed",
              "members": [
                {
                  "label": "feed1",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "feed2",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feedCalculation",
                  "type": "t_enum(FeedCalculation)17026",
                  "offset": 20,
                  "slot": "1"
                },
                {
                  "label": "maxDeviationP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Group)17061_storage": {
              "label": "struct GNSPairsStorageV6.Group",
              "members": [
                {
                  "label": "name",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "job",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "minLeverage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "maxLeverage",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "maxCollateralP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                }
              ],
              "numberOfBytes": "160"
            },
            "t_struct(Pair)17050_storage": {
              "label": "struct GNSPairsStorageV6.Pair",
              "members": [
                {
                  "label": "from",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "to",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "feed",
                  "type": "t_struct(Feed)17036_storage",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "spreadP",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "groupIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "feeIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                }
              ],
              "numberOfBytes": "256"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSPriceAggregatorV6_4.sol:GNSPriceAggregatorV6_4": {
        "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:13",
        "version": {
          "withMetadata": "42901f7817c9da85c25c0fb92c7059c6adf18c9b969ddb859c887bdac6da3a13",
          "withoutMetadata": "42901f7817c9da85c25c0fb92c7059c6adf18c9b969ddb859c887bdac6da3a13",
          "linkedWithoutMetadata": "42901f7817c9da85c25c0fb92c7059c6adf18c9b969ddb859c887bdac6da3a13"
        },
        "inherit": [
          "contracts/v6.3/TWAPPriceGetter.sol:TWAPPriceGetter",
          "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient"
        ],
        "libraries": [],
        "methods": [
          "(address,address,uint32,address,address,uint256,address[],bytes32[2])",
          "updatePairsStorage(address)",
          "updateUniV3Pool(address)",
          "updateTwapInterval(uint32)",
          "updateMinAnswers(uint256)",
          "addNode(address)",
          "replaceNode(uint256,address)",
          "removeNode(uint256)",
          "setMarketJobId(bytes32)",
          "setLimitJobId(bytes32)",
          "getPrice(uint256,uint8,uint256,uint256)",
          "fulfill(bytes32,uint256)",
          "linkFee(uint256,uint256)",
          "claimBackLink()",
          "openFeeP(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GNSPriceAggregatorV6_4",
            "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:103"
          },
          {
            "kind": "state-variable-immutable",
            "name": "storageT",
            "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)2074",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)2296",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)2154",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            },
            {
              "label": "uniV3Pool",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(IUniswapV3Pool)21",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:18"
            },
            {
              "label": "twapInterval",
              "offset": 20,
              "slot": "6",
              "type": "t_uint32",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:19"
            },
            {
              "label": "isGnsToken0InLp",
              "offset": 24,
              "slot": "6",
              "type": "t_bool",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:22"
            },
            {
              "label": "pairsStorage",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PairsStorageInterfaceV6)34227",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:21"
            },
            {
              "label": "minAnswers",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:30"
            },
            {
              "label": "nodes",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:56"
            },
            {
              "label": "jobIds",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_bytes32)2_storage",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:57"
            },
            {
              "label": "orders",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_struct(Order)18015_storage)",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:59"
            },
            {
              "label": "orderIdByRequest",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:60"
            },
            {
              "label": "ordersAnswers",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:61"
            },
            {
              "label": "lookbackOrderAnswers",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_array(t_struct(LookbackOrderAnswer)18024_storage)dyn_storage)",
              "contract": "GNSPriceAggregatorV6_4",
              "src": "contracts/contracts/GNSPriceAggregatorV6_4.sol:62"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes32)2_storage": {
              "label": "bytes32[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_struct(LookbackOrderAnswer)18024_storage)dyn_storage": {
              "label": "struct GNSPriceAggregatorV6_4.LookbackOrderAnswer[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)2074": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)21": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)2296": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)2154": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_contract(PairsStorageInterfaceV6)34227": {
              "label": "contract PairsStorageInterfaceV6",
              "numberOfBytes": "20"
            },
            "t_enum(OrderType)18003": {
              "label": "enum GNSPriceAggregatorV6_4.OrderType",
              "members": [
                "MARKET_OPEN",
                "MARKET_CLOSE",
                "LIMIT_OPEN",
                "LIMIT_CLOSE"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_struct(LookbackOrderAnswer)18024_storage)dyn_storage)": {
              "label": "mapping(uint256 => struct GNSPriceAggregatorV6_4.LookbackOrderAnswer[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(uint256 => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Order)18015_storage)": {
              "label": "mapping(uint256 => struct GNSPriceAggregatorV6_4.Order)",
              "numberOfBytes": "32"
            },
            "t_struct(LookbackOrderAnswer)18024_storage": {
              "label": "struct GNSPriceAggregatorV6_4.LookbackOrderAnswer",
              "members": [
                {
                  "label": "open",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "high",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "low",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "ts",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Order)18015_storage": {
              "label": "struct GNSPriceAggregatorV6_4.Order",
              "members": [
                {
                  "label": "pairIndex",
                  "type": "t_uint16",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "linkFeePerNode",
                  "type": "t_uint112",
                  "offset": 2,
                  "slot": "0"
                },
                {
                  "label": "orderType",
                  "type": "t_enum(OrderType)18003",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "0"
                },
                {
                  "label": "isLookback",
                  "type": "t_bool",
                  "offset": 18,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSReferralsV6_2.sol:GNSReferralsV6_2": {
        "src": "contracts/contracts/GNSReferralsV6_2.sol:6",
        "version": {
          "withMetadata": "5f6e8968758e3a9767a8b31f354efd2b327ff57669d7f0dd8ffd1fd2f76e4919",
          "withoutMetadata": "5f6e8968758e3a9767a8b31f354efd2b327ff57669d7f0dd8ffd1fd2f76e4919",
          "linkedWithoutMetadata": "5f6e8968758e3a9767a8b31f354efd2b327ff57669d7f0dd8ffd1fd2f76e4919"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,uint256,uint256,uint256,uint256)",
          "updateAllyFeeP(uint256)",
          "updateStartReferrerFeeP(uint256)",
          "updateOpenFeeP(uint256)",
          "updateTargetVolumeDai(uint256)",
          "whitelistAlly(address)",
          "unwhitelistAlly(address)",
          "whitelistReferrer(address,address)",
          "unwhitelistReferrer(address)",
          "registerPotentialReferrer(address,address)",
          "distributePotentialReward(address,uint256,uint256,uint256)",
          "claimAllyRewards()",
          "claimReferrerRewards()",
          "getReferrerFeeP(uint256,uint256)",
          "getPercentOfOpenFeeP(address)",
          "getPercentOfOpenFeeP_calc(uint256)",
          "getTraderReferrer(address)",
          "getReferrersReferred(address)",
          "getTradersReferred(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GNSReferralsV6_2",
            "src": "contracts/contracts/GNSReferralsV6_2.sol:74"
          },
          {
            "kind": "state-variable-immutable",
            "name": "storageT",
            "src": "contracts/contracts/GNSReferralsV6_2.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "allyFeeP",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:12"
            },
            {
              "label": "startReferrerFeeP",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:13"
            },
            {
              "label": "openFeeP",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:14"
            },
            {
              "label": "targetVolumeDai",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:15"
            },
            {
              "label": "allyDetails",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(AllyDetails)19704_storage)",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:38"
            },
            {
              "label": "referrerDetails",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(ReferrerDetails)19720_storage)",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:39"
            },
            {
              "label": "referrerByTrader",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_address)",
              "contract": "GNSReferralsV6_2",
              "src": "contracts/contracts/GNSReferralsV6_2.sol:41"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(AllyDetails)19704_storage)": {
              "label": "mapping(address => struct GNSReferralsV6_2.AllyDetails)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(ReferrerDetails)19720_storage)": {
              "label": "mapping(address => struct GNSReferralsV6_2.ReferrerDetails)",
              "numberOfBytes": "32"
            },
            "t_struct(AllyDetails)19704_storage": {
              "label": "struct GNSReferralsV6_2.AllyDetails",
              "members": [
                {
                  "label": "referrersReferred",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "volumeReferredDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "pendingRewardsToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "totalRewardsToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalRewardsValueDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_struct(ReferrerDetails)19720_storage": {
              "label": "struct GNSReferralsV6_2.ReferrerDetails",
              "members": [
                {
                  "label": "ally",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "tradersReferred",
                  "type": "t_array(t_address)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "volumeReferredDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "pendingRewardsToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "totalRewardsToken",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "totalRewardsValueDai",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1": {
        "src": "contracts/contracts/GNSStakingV6_4_1.sol:9",
        "version": {
          "withMetadata": "94277fa3fb0ef03045f4616f405bc210306d1d2cad79446a07a4ab709cdd3fa4",
          "withoutMetadata": "94277fa3fb0ef03045f4616f405bc210306d1d2cad79446a07a4ab709cdd3fa4",
          "linkedWithoutMetadata": "94277fa3fb0ef03045f4616f405bc210306d1d2cad79446a07a4ab709cdd3fa4"
        },
        "inherit": [
          "contracts/interfaces/GNSStakingInterfaceV6_4_1.sol:GNSStakingInterfaceV6_4_1",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address)",
          "setGovFund(address)",
          "setUnlockManager(address,bool)",
          "unlockedAmount((uint128,uint128,uint128,uint48,uint48,bool,uint8,uint16),uint48)",
          "releasable((uint128,uint128,uint128,uint48,uint48,bool,uint8,uint16),uint48)",
          "distributeRewardDai(uint256)",
          "harvest()",
          "harvestFromUnlock(uint256[])",
          "harvestAll(uint256[])",
          "stakeTokens(uint128)",
          "unstakeTokens(uint128)",
          "claimUnlockedTokens(uint256[])",
          "createUnlockSchedule((uint128,uint48,uint48,bool,uint8),address)",
          "revokeUnlockSchedule(address,uint256)",
          "pendingRewardDai(address)",
          "pendingRewardDaiFromUnlocks(address)",
          "pendingRewardDaiFromUnlocks(address,uint256[])",
          "totalTokensStaked(address)",
          "getUnlockSchedules(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "govFund",
              "offset": 2,
              "slot": "0",
              "type": "t_address",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(TokenInterfaceV5)35103",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:16"
            },
            {
              "label": "dai",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(TokenInterfaceV5)35103",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:17"
            },
            {
              "label": "accDaiPerToken",
              "offset": 0,
              "slot": "3",
              "type": "t_uint128",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:20"
            },
            {
              "label": "tokenBalance",
              "offset": 16,
              "slot": "3",
              "type": "t_uint128",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:21"
            },
            {
              "label": "users",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(User)33352_storage)",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:24"
            },
            {
              "label": "unlockSchedules",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_struct(UnlockSchedule)33370_storage)dyn_storage)",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:25"
            },
            {
              "label": "unlockManagers",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GNSStakingV6_4_1",
              "src": "contracts/contracts/GNSStakingV6_4_1.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(UnlockSchedule)33370_storage)dyn_storage": {
              "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(TokenInterfaceV5)35103": {
              "label": "contract TokenInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_enum(UnlockType)33385": {
              "label": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "members": [
                "LINEAR",
                "CLIFF"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_array(t_struct(UnlockSchedule)33370_storage)dyn_storage)": {
              "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.UnlockSchedule[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(User)33352_storage)": {
              "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.User)",
              "numberOfBytes": "32"
            },
            "t_struct(UnlockSchedule)33370_storage": {
              "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
              "members": [
                {
                  "label": "totalTokens",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "claimedTokens",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "debtDai",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "start",
                  "type": "t_uint48",
                  "offset": 16,
                  "slot": "1"
                },
                {
                  "label": "duration",
                  "type": "t_uint48",
                  "offset": 22,
                  "slot": "1"
                },
                {
                  "label": "revocable",
                  "type": "t_bool",
                  "offset": 28,
                  "slot": "1"
                },
                {
                  "label": "unlockType",
                  "type": "t_enum(UnlockType)33385",
                  "offset": 29,
                  "slot": "1"
                },
                {
                  "label": "__placeholder",
                  "type": "t_uint16",
                  "offset": 30,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(User)33352_storage": {
              "label": "struct GNSStakingInterfaceV6_4_1.User",
              "members": [
                {
                  "label": "stakedTokens",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "debtDai",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint48": {
              "label": "uint48",
              "numberOfBytes": "6"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:GNSTradingCallbacksV6_4_1": {
        "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:14",
        "version": {
          "withMetadata": "6d868a9a659c8043ce08f7ed05f22bf924ccf73fda91ec9b497de99c1844905a",
          "withoutMetadata": "6d868a9a659c8043ce08f7ed05f22bf924ccf73fda91ec9b497de99c1844905a",
          "linkedWithoutMetadata": "6d868a9a659c8043ce08f7ed05f22bf924ccf73fda91ec9b497de99c1844905a"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(address,address,address,address,address,address,uint256,uint256,uint256,uint256)",
          "initializeV2(address)",
          "initializeV4(address,address)",
          "setPairMaxLeverage(uint256,uint256)",
          "setPairMaxLeverageArray(uint256[],uint256[])",
          "setClosingFeeSharesP(uint256,uint256,uint256)",
          "pause()",
          "done()",
          "claimGovFees()",
          "openTradeMarketCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "closeTradeMarketCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "executeNftOpenOrderCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "executeNftCloseOrderCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "setTradeLastUpdated((address,uint256,uint256,uint8),(uint32,uint32,uint32,uint32))",
          "setTradeData((address,uint256,uint256,uint8),(uint40,uint216))",
          "getAllPairsMaxLeverage()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
            },
            {
              "label": "storageT",
              "offset": 2,
              "slot": "0",
              "type": "t_contract(StorageInterfaceV5)34745",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:16"
            },
            {
              "label": "nftRewards",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGNSOracleRewardsV6_4_1)33837",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:17"
            },
            {
              "label": "pairInfos",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(GNSPairInfosInterfaceV6)33308",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:18"
            },
            {
              "label": "referrals",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(GNSReferralsInterfaceV6_2)33345",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:19"
            },
            {
              "label": "staking",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(GNSStakingInterfaceV6_4_1)33433",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:20"
            },
            {
              "label": "daiVaultFeeP",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:29"
            },
            {
              "label": "lpFeeP",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:30"
            },
            {
              "label": "sssFeeP",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:31"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "8",
              "type": "t_bool",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:34"
            },
            {
              "label": "isDone",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:35"
            },
            {
              "label": "canExecuteTimeout",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:36"
            },
            {
              "label": "tradeLastUpdated",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(LastUpdated)22061_storage))))",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:39"
            },
            {
              "label": "borrowingFees",
              "offset": 0,
              "slot": "11",
              "type": "t_contract(GNSBorrowingFeesInterfaceV6_4)33163",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:43"
            },
            {
              "label": "pairMaxLeverage",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:44"
            },
            {
              "label": "tradeData",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(TradeData)22066_storage))))",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:47"
            },
            {
              "label": "govFeesDai",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "GNSTradingCallbacksV6_4_1",
              "src": "contracts/contracts/GNSTradingCallbacksV6_4_1.sol:51"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(GNSBorrowingFeesInterfaceV6_4)33163": {
              "label": "contract GNSBorrowingFeesInterfaceV6_4",
              "numberOfBytes": "20"
            },
            "t_contract(GNSPairInfosInterfaceV6)33308": {
              "label": "contract GNSPairInfosInterfaceV6",
              "numberOfBytes": "20"
            },
            "t_contract(GNSReferralsInterfaceV6_2)33345": {
              "label": "contract GNSReferralsInterfaceV6_2",
              "numberOfBytes": "20"
            },
            "t_contract(GNSStakingInterfaceV6_4_1)33433": {
              "label": "contract GNSStakingInterfaceV6_4_1",
              "numberOfBytes": "20"
            },
            "t_contract(IGNSOracleRewardsV6_4_1)33837": {
              "label": "contract IGNSOracleRewardsV6_4_1",
              "numberOfBytes": "20"
            },
            "t_contract(StorageInterfaceV5)34745": {
              "label": "contract StorageInterfaceV5",
              "numberOfBytes": "20"
            },
            "t_enum(TradeType)22092": {
              "label": "enum GNSTradingCallbacksV6_4_1.TradeType",
              "members": [
                "MARKET",
                "LIMIT"
              ],
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(LastUpdated)22061_storage))))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.LastUpdated))))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(TradeData)22066_storage))))": {
              "label": "mapping(address => mapping(uint256 => mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.TradeData))))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(TradeType)22092,t_struct(LastUpdated)22061_storage)": {
              "label": "mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.LastUpdated)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_enum(TradeType)22092,t_struct(TradeData)22066_storage)": {
              "label": "mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.TradeData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(LastUpdated)22061_storage))": {
              "label": "mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.LastUpdated))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(TradeData)22066_storage))": {
              "label": "mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.TradeData))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(LastUpdated)22061_storage)))": {
              "label": "mapping(uint256 => mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.LastUpdated)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_uint256,t_mapping(t_enum(TradeType)22092,t_struct(TradeData)22066_storage)))": {
              "label": "mapping(uint256 => mapping(uint256 => mapping(enum GNSTradingCallbacksV6_4_1.TradeType => struct GNSTradingCallbacksV6_4_1.TradeData)))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(LastUpdated)22061_storage": {
              "label": "struct GNSTradingCallbacksV6_4_1.LastUpdated",
              "members": [
                {
                  "label": "tp",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sl",
                  "type": "t_uint32",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "limit",
                  "type": "t_uint32",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "created",
                  "type": "t_uint32",
                  "offset": 12,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(TradeData)22066_storage": {
              "label": "struct GNSTradingCallbacksV6_4_1.TradeData",
              "members": [
                {
                  "label": "maxSlippageP",
                  "type": "t_uint40",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_placeholder",
                  "type": "t_uint216",
                  "offset": 5,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint216": {
              "label": "uint216",
              "numberOfBytes": "27"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint40": {
              "label": "uint40",
              "numberOfBytes": "5"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GNSTradingV6_4_1.sol:GNSTradingV6_4_1": {
        "src": "contracts/contracts/GNSTradingV6_4_1.sol:14",
        "version": {
          "withMetadata": "6211a7cce1a9587285239bcae9197a758a139a01bd313d40e5e1b2ca844d9847",
          "withoutMetadata": "6211a7cce1a9587285239bcae9197a758a139a01bd313d40e5e1b2ca844d9847",
          "linkedWithoutMetadata": "6211a7cce1a9587285239bcae9197a758a139a01bd313d40e5e1b2ca844d9847"
        },
        "inherit": [
          "contracts/v6.2/Delegatable.sol:Delegatable"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address,uint256,uint256)",
          "setMaxPosDai(uint256)",
          "setMarketOrdersTimeout(uint256)",
          "setBypassTriggerLink(address,bool)",
          "pause()",
          "done()",
          "openTrade((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256),uint8,uint256,address)",
          "closeTradeMarket(uint256,uint256)",
          "updateOpenLimitOrder(uint256,uint256,uint256,uint256,uint256,uint256)",
          "cancelOpenLimitOrder(uint256,uint256)",
          "updateTp(uint256,uint256,uint256)",
          "updateSl(uint256,uint256,uint256)",
          "executeNftOrder(uint256)",
          "openTradeMarketTimeout(uint256)",
          "closeTradeMarketTimeout(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GNSTradingV6_4_1",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:103"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:741"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/v6.2/Delegatable.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "storageT",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oracleRewards",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pairInfos",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "referrals",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "borrowingFees",
            "src": "contracts/contracts/GNSTradingV6_4_1.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "delegations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Delegatable",
              "src": "contracts/v6.2/Delegatable.sol:5"
            },
            {
              "label": "senderOverride",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Delegatable",
              "src": "contracts/v6.2/Delegatable.sol:6"
            },
            {
              "label": "maxPosDai",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "GNSTradingV6_4_1",
              "src": "contracts/contracts/GNSTradingV6_4_1.sol:30"
            },
            {
              "label": "marketOrdersTimeout",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "GNSTradingV6_4_1",
              "src": "contracts/contracts/GNSTradingV6_4_1.sol:31"
            },
            {
              "label": "isPaused",
              "offset": 0,
              "slot": "4",
              "type": "t_bool",
              "contract": "GNSTradingV6_4_1",
              "src": "contracts/contracts/GNSTradingV6_4_1.sol:34"
            },
            {
              "label": "isDone",
              "offset": 1,
              "slot": "4",
              "type": "t_bool",
              "contract": "GNSTradingV6_4_1",
              "src": "contracts/contracts/GNSTradingV6_4_1.sol:35"
            },
            {
              "label": "bypassTriggerLink",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "GNSTradingV6_4_1",
              "src": "contracts/contracts/GNSTradingV6_4_1.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GTokenLockedDepositNft.sol:GTokenLockedDepositNft": {
        "src": "contracts/contracts/GTokenLockedDepositNft.sol:10",
        "version": {
          "withMetadata": "749c66d507d0bfb1bff9ea38101ad53d333ec56fd0eaeb1a3e46122f843c75c5",
          "withoutMetadata": "749c66d507d0bfb1bff9ea38101ad53d333ec56fd0eaeb1a3e46122f843c75c5",
          "linkedWithoutMetadata": "749c66d507d0bfb1bff9ea38101ad53d333ec56fd0eaeb1a3e46122f843c75c5"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol:IERC721Enumerable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string,address,address,uint8)",
          "updateDesign(address)",
          "updateDesignDecimals(uint8)",
          "mint(address,uint256)",
          "burn(uint256)",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GTokenLockedDepositNft",
            "src": "contracts/contracts/GTokenLockedDepositNft.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "gToken",
            "src": "contracts/contracts/GTokenLockedDepositNft.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "_ownedTokens",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:16"
            },
            {
              "label": "_ownedTokensIndex",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:19"
            },
            {
              "label": "_allTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:22"
            },
            {
              "label": "_allTokensIndex",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "ERC721Enumerable",
              "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:25"
            },
            {
              "label": "design",
              "offset": 0,
              "slot": "10",
              "type": "t_contract(IGTokenLockedDepositNftDesign)33959",
              "contract": "GTokenLockedDepositNft",
              "src": "contracts/contracts/GTokenLockedDepositNft.sol:12"
            },
            {
              "label": "designDecimals",
              "offset": 20,
              "slot": "10",
              "type": "t_uint8",
              "contract": "GTokenLockedDepositNft",
              "src": "contracts/contracts/GTokenLockedDepositNft.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IGTokenLockedDepositNftDesign)33959": {
              "label": "contract IGTokenLockedDepositNftDesign",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GTokenLockedDepositNftDesign.sol:GTokenLockedDepositNftDesign": {
        "src": "contracts/contracts/GTokenLockedDepositNftDesign.sol:8",
        "version": {
          "withMetadata": "c26094232b9d37ae15523a1b989b9ebba3e18f978e55434c8e6c4a949d61a593",
          "withoutMetadata": "c26094232b9d37ae15523a1b989b9ebba3e18f978e55434c8e6c4a949d61a593",
          "linkedWithoutMetadata": "c26094232b9d37ae15523a1b989b9ebba3e18f978e55434c8e6c4a949d61a593"
        },
        "inherit": [
          "contracts/interfaces/IGTokenLockedDepositNftDesign.sol:IGTokenLockedDepositNftDesign"
        ],
        "libraries": [],
        "methods": [
          "buildTokenURI(uint256,(address,uint256,uint256,uint256,uint256,uint256),string,string,uint8,uint8)",
          "numberToRoundedString(uint256,uint8,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GTokenOpenPnlFeed.sol:GTokenOpenPnlFeed": {
        "src": "contracts/contracts/GTokenOpenPnlFeed.sol:11",
        "version": {
          "withMetadata": "ec5dd0fc6a2e90822d20faa5803e2e3fd73c4334969959986cfa2dcc0feb1cdd",
          "withoutMetadata": "ec5dd0fc6a2e90822d20faa5803e2e3fd73c4334969959986cfa2dcc0feb1cdd",
          "linkedWithoutMetadata": "ec5dd0fc6a2e90822d20faa5803e2e3fd73c4334969959986cfa2dcc0feb1cdd"
        },
        "inherit": [
          "contracts/interfaces/IOpenTradesPnlFeed.sol:IOpenTradesPnlFeed",
          "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:ChainlinkClient"
        ],
        "libraries": [],
        "methods": [
          "(uint256,address,address,address[],bytes32,uint256)",
          "updateRequestsStart(uint256)",
          "updateRequestsEvery(uint256)",
          "updateRequestsCount(uint256)",
          "updateRequestsInfoBatch(uint256,uint256,uint256)",
          "updateMinAnswers(uint256)",
          "updateOracle(uint256,address)",
          "updateOracles(address[])",
          "updateJob(bytes32)",
          "resetNextEpochValueRequests()",
          "forceNewEpoch()",
          "newOpenPnlRequestOrEpoch()",
          "fulfill(bytes32,int256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GTokenOpenPnlFeed",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:94"
          },
          {
            "kind": "state-variable-immutable",
            "name": "LINK_FEE_BALANCE_DIVIDER",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:15"
          },
          {
            "kind": "state-variable-immutable",
            "name": "gToken",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestsStart",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:27"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestsEvery",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestsCount",
            "src": "contracts/contracts/GTokenOpenPnlFeed.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_ens",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ENSInterface)2074",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:29"
            },
            {
              "label": "s_ensNode",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:30"
            },
            {
              "label": "s_link",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(LinkTokenInterface)2296",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:31"
            },
            {
              "label": "s_oracle",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(OperatorInterface)2154",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:32"
            },
            {
              "label": "s_requestCount",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:33"
            },
            {
              "label": "s_pendingRequests",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_bytes32,t_address)",
              "contract": "ChainlinkClient",
              "src": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol:34"
            },
            {
              "label": "requestsStart",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:27"
            },
            {
              "label": "requestsEvery",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:28"
            },
            {
              "label": "requestsCount",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:29"
            },
            {
              "label": "oracles",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:31"
            },
            {
              "label": "job",
              "offset": 0,
              "slot": "10",
              "type": "t_bytes32",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:32"
            },
            {
              "label": "minAnswers",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:33"
            },
            {
              "label": "nextEpochValues",
              "offset": 0,
              "slot": "12",
              "type": "t_array(t_int256)dyn_storage",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:36"
            },
            {
              "label": "nextEpochValuesRequestCount",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:37"
            },
            {
              "label": "nextEpochValuesLastRequest",
              "offset": 0,
              "slot": "14",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:38"
            },
            {
              "label": "lastRequestId",
              "offset": 0,
              "slot": "15",
              "type": "t_uint256",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:40"
            },
            {
              "label": "requestIds",
              "offset": 0,
              "slot": "16",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:41"
            },
            {
              "label": "requests",
              "offset": 0,
              "slot": "17",
              "type": "t_mapping(t_uint256,t_struct(Request)28205_storage)",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:42"
            },
            {
              "label": "requestAnswers",
              "offset": 0,
              "slot": "18",
              "type": "t_mapping(t_uint256,t_array(t_int256)dyn_storage)",
              "contract": "GTokenOpenPnlFeed",
              "src": "contracts/contracts/GTokenOpenPnlFeed.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_int256)dyn_storage": {
              "label": "int256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(ENSInterface)2074": {
              "label": "contract ENSInterface",
              "numberOfBytes": "20"
            },
            "t_contract(LinkTokenInterface)2296": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(OperatorInterface)2154": {
              "label": "contract OperatorInterface",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_address)": {
              "label": "mapping(bytes32 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_array(t_int256)dyn_storage)": {
              "label": "mapping(uint256 => int256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Request)28205_storage)": {
              "label": "mapping(uint256 => struct GTokenOpenPnlFeed.Request)",
              "numberOfBytes": "32"
            },
            "t_struct(Request)28205_storage": {
              "label": "struct GTokenOpenPnlFeed.Request",
              "members": [
                {
                  "label": "initiated",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "linkFeePerNode",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/GTokenV6_3_2.sol:GTokenV6_3_2": {
        "src": "contracts/contracts/GTokenV6_3_2.sol:16",
        "version": {
          "withMetadata": "3c0a1c64d59473f95d9a494b04f81155625290c4b20ad829e4d197e98eda08cc",
          "withoutMetadata": "3c0a1c64d59473f95d9a494b04f81155625290c4b20ad829e4d197e98eda08cc",
          "linkedWithoutMetadata": "3c0a1c64d59473f95d9a494b04f81155625290c4b20ad829e4d197e98eda08cc"
        },
        "inherit": [
          "contracts/interfaces/IGToken.sol:IGToken",
          "contracts/utils/OwnableUpgradeable.sol:OwnableUpgradeable",
          "contracts/utils/ERC4626Upgradeable.sol:ERC4626Upgradeable",
          "contracts/utils/IERC4626Upgradeable.sol:IERC4626Upgradeable",
          "contracts/utils/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/utils/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "initialize(string,string,(address,address,address,address,address,address,address,address,(address,bytes)),uint256,uint256,uint256,uint256[2],uint256,uint256,uint256,uint256,uint256)",
          "initializeV2()",
          "transferOwnership(address)",
          "updateManager(address)",
          "updateAdmin(address)",
          "updatePnlHandler(address)",
          "updateGnsPriceProvider((address,bytes))",
          "updateOpenTradesPnlFeed(address)",
          "updateMaxAccOpenPnlDelta(uint256)",
          "updateMaxDailyAccPnlDelta(uint256)",
          "updateWithdrawLockThresholdsP(uint256[2])",
          "updateMaxSupplyIncreaseDailyP(uint256)",
          "updateLossesBurnP(uint256)",
          "updateMaxGnsSupplyMintDailyP(uint256)",
          "updateMaxDiscountP(uint256)",
          "updateMaxDiscountThresholdP(uint256)",
          "maxAccPnlPerToken()",
          "collateralizationP()",
          "gnsTokenToAssetsPrice()",
          "withdrawEpochsTimelock()",
          "lockDiscountP(uint256,uint256)",
          "totalSharesBeingWithdrawn(address)",
          "getPendingAccBlockWeightedMarketCap(uint256)",
          "tryUpdateCurrentMaxSupply()",
          "tryResetDailyAccPnlDelta()",
          "tryNewOpenPnlRequestOrEpoch()",
          "storeAccBlockWeightedMarketCap()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "decimals()",
          "maxMint(address)",
          "maxDeposit(address)",
          "maxRedeem(address)",
          "maxWithdraw(address)",
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "makeWithdrawRequest(uint256,address)",
          "cancelWithdrawRequest(uint256,address,uint256)",
          "depositWithDiscountAndLock(uint256,uint256,address)",
          "mintWithDiscountAndLock(uint256,uint256,address)",
          "unlockDeposit(uint256,address)",
          "distributeReward(uint256)",
          "sendAssets(uint256,address)",
          "receiveAssets(uint256,address)",
          "deplete(uint256)",
          "refill(uint256)",
          "updateAccPnlPerTokenUsed(uint256,uint256)",
          "getLockedDeposit(uint256)",
          "tvl()",
          "availableAssets()",
          "currentBalanceDai()",
          "marketCap()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:400"
            },
            {
              "label": "_asset",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20Upgradeable)38978",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:35"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:296"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "151",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts/utils/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "152",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts/utils/OwnableUpgradeable.sol:94"
            },
            {
              "label": "gnsToken",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:26"
            },
            {
              "label": "lockedDepositNft",
              "offset": 0,
              "slot": "202",
              "type": "t_contract(INft)33994",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:27"
            },
            {
              "label": "manager",
              "offset": 0,
              "slot": "203",
              "type": "t_address",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:30"
            },
            {
              "label": "admin",
              "offset": 0,
              "slot": "204",
              "type": "t_address",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:31"
            },
            {
              "label": "pnlHandler",
              "offset": 0,
              "slot": "205",
              "type": "t_address",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:33"
            },
            {
              "label": "openTradesPnlFeed",
              "offset": 0,
              "slot": "206",
              "type": "t_contract(IOpenTradesPnlFeed)34005",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:34"
            },
            {
              "label": "gnsPriceProvider",
              "offset": 0,
              "slot": "207",
              "type": "t_struct(GnsPriceProvider)29325_storage",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:35"
            },
            {
              "label": "MIN_LOCK_DURATION",
              "offset": 0,
              "slot": "209",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:51"
            },
            {
              "label": "WITHDRAW_EPOCHS_LOCKS",
              "offset": 0,
              "slot": "210",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:53"
            },
            {
              "label": "maxAccOpenPnlDelta",
              "offset": 0,
              "slot": "211",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:56"
            },
            {
              "label": "maxDailyAccPnlDelta",
              "offset": 0,
              "slot": "212",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:57"
            },
            {
              "label": "withdrawLockThresholdsP",
              "offset": 0,
              "slot": "213",
              "type": "t_array(t_uint256)2_storage",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:58"
            },
            {
              "label": "maxSupplyIncreaseDailyP",
              "offset": 0,
              "slot": "215",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:59"
            },
            {
              "label": "lossesBurnP",
              "offset": 0,
              "slot": "216",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:60"
            },
            {
              "label": "maxGnsSupplyMintDailyP",
              "offset": 0,
              "slot": "217",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:61"
            },
            {
              "label": "maxDiscountP",
              "offset": 0,
              "slot": "218",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:62"
            },
            {
              "label": "maxDiscountThresholdP",
              "offset": 0,
              "slot": "219",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:63"
            },
            {
              "label": "shareToAssetsPrice",
              "offset": 0,
              "slot": "220",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:66"
            },
            {
              "label": "accPnlPerTokenUsed",
              "offset": 0,
              "slot": "221",
              "type": "t_int256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:67"
            },
            {
              "label": "accPnlPerToken",
              "offset": 0,
              "slot": "222",
              "type": "t_int256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:68"
            },
            {
              "label": "accRewardsPerToken",
              "offset": 0,
              "slot": "223",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:69"
            },
            {
              "label": "dailyAccPnlDelta",
              "offset": 0,
              "slot": "224",
              "type": "t_int256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:72"
            },
            {
              "label": "lastDailyAccPnlDeltaReset",
              "offset": 0,
              "slot": "225",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:73"
            },
            {
              "label": "currentEpoch",
              "offset": 0,
              "slot": "226",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:76"
            },
            {
              "label": "currentEpochStart",
              "offset": 0,
              "slot": "227",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:77"
            },
            {
              "label": "currentEpochPositiveOpenPnl",
              "offset": 0,
              "slot": "228",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:78"
            },
            {
              "label": "currentMaxSupply",
              "offset": 0,
              "slot": "229",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:81"
            },
            {
              "label": "lastMaxSupplyUpdate",
              "offset": 0,
              "slot": "230",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:82"
            },
            {
              "label": "withdrawRequests",
              "offset": 0,
              "slot": "231",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:83"
            },
            {
              "label": "lockedDepositsCount",
              "offset": 0,
              "slot": "232",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:86"
            },
            {
              "label": "lockedDeposits",
              "offset": 0,
              "slot": "233",
              "type": "t_mapping(t_uint256,t_struct(LockedDeposit)33887_storage)",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:87"
            },
            {
              "label": "assetsToDeplete",
              "offset": 0,
              "slot": "234",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:90"
            },
            {
              "label": "totalDeposited",
              "offset": 0,
              "slot": "235",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:95"
            },
            {
              "label": "totalClosedPnl",
              "offset": 0,
              "slot": "236",
              "type": "t_int256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:96"
            },
            {
              "label": "totalRewards",
              "offset": 0,
              "slot": "237",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:97"
            },
            {
              "label": "totalLiability",
              "offset": 0,
              "slot": "238",
              "type": "t_int256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:98"
            },
            {
              "label": "totalLockedDiscounts",
              "offset": 0,
              "slot": "239",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:99"
            },
            {
              "label": "totalDiscounts",
              "offset": 0,
              "slot": "240",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:100"
            },
            {
              "label": "totalDepleted",
              "offset": 0,
              "slot": "241",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:101"
            },
            {
              "label": "totalRefilled",
              "offset": 0,
              "slot": "242",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:102"
            },
            {
              "label": "accBlockWeightedMarketCap",
              "offset": 0,
              "slot": "243",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:105"
            },
            {
              "label": "accBlockWeightedMarketCapLastStored",
              "offset": 0,
              "slot": "244",
              "type": "t_uint256",
              "contract": "GTokenV6_3_2",
              "src": "contracts/contracts/GTokenV6_3_2.sol:106"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)2_storage": {
              "label": "uint256[2]",
              "numberOfBytes": "64"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)38978": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(INft)33994": {
              "label": "contract INft",
              "numberOfBytes": "20"
            },
            "t_contract(IOpenTradesPnlFeed)34005": {
              "label": "contract IOpenTradesPnlFeed",
              "numberOfBytes": "20"
            },
            "t_int256": {
              "label": "int256",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
              "label": "mapping(address => mapping(uint256 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(LockedDeposit)33887_storage)": {
              "label": "mapping(uint256 => struct IGToken.LockedDeposit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(GnsPriceProvider)29325_storage": {
              "label": "struct GTokenV6_3_2.GnsPriceProvider",
              "members": [
                {
                  "label": "addr",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "signature",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(LockedDeposit)33887_storage": {
              "label": "struct IGToken.LockedDeposit",
              "members": [
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "shares",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "assetsDeposited",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "assetsDiscount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "atTimestamp",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lockDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                }
              ],
              "numberOfBytes": "192"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/ProxyAdmin.sol:ProxyAdmin": {
        "src": "contracts/contracts/ProxyAdmin.sol:14",
        "version": {
          "withMetadata": "3d17df6a38caffcd6450e666374e0720a7667ba8cd6745a5c6a48be43feb3dee",
          "withoutMetadata": "3d17df6a38caffcd6450e666374e0720a7667ba8cd6745a5c6a48be43feb3dee",
          "linkedWithoutMetadata": "3d17df6a38caffcd6450e666374e0720a7667ba8cd6745a5c6a48be43feb3dee"
        },
        "inherit": [
          "contracts/access/Ownable.sol:Ownable",
          "contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getProxyImplementation(address)",
          "getProxyAdmin(address)",
          "changeProxyAdmin(address,address)",
          "upgrade(address,address)",
          "upgradeAndCall(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/contracts/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "contracts/contracts/TransparentUpgradeableProxy.sol:27",
        "version": {
          "withMetadata": "8a93ca672ac979cf34620f597bc4394bcdc40a1804e3ff67bb9a1667d19b0277",
          "withoutMetadata": "8a93ca672ac979cf34620f597bc4394bcdc40a1804e3ff67bb9a1667d19b0277",
          "linkedWithoutMetadata": "8a93ca672ac979cf34620f597bc4394bcdc40a1804e3ff67bb9a1667d19b0277"
        },
        "inherit": [
          "contracts/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "contracts/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)",
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/contracts/TransparentUpgradeableProxy.sol:32"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "contracts/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/import.sol:AdminUpgradeabilityProxy": {
        "src": "contracts/import.sol:11",
        "version": {
          "withMetadata": "1c1cf77b7a1467451b0499596c4966952450c9abd2c31e53524616751c10659a",
          "withoutMetadata": "1c1cf77b7a1467451b0499596c4966952450c9abd2c31e53524616751c10659a",
          "linkedWithoutMetadata": "1c1cf77b7a1467451b0499596c4966952450c9abd2c31e53524616751c10659a"
        },
        "inherit": [
          "@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "@openzeppelin/contracts/interfaces/IERC1967.sol:IERC1967",
          "@openzeppelin/contracts/proxy/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AdminUpgradeabilityProxy",
            "src": "contracts/import.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/AggregatorInterfaceV5.sol:AggregatorInterfaceV5": {
        "src": "contracts/interfaces/AggregatorInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPrice(uint256,uint8,uint256)",
          "tokenPriceDai()",
          "pairMinOpenLimitSlippageP(uint256)",
          "closeFeeP(uint256)",
          "linkFee(uint256,uint256)",
          "openFeeP(uint256)",
          "pairMinLeverage(uint256)",
          "pairMaxLeverage(uint256)",
          "pairsCount()",
          "tokenDaiReservesLp()",
          "referralP(uint256)",
          "nftLimitOrderFeeP(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/CallbacksInterfaceV6_4.sol:CallbacksInterfaceV6_4": {
        "src": "contracts/interfaces/CallbacksInterfaceV6_4.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "openTradeMarketCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "closeTradeMarketCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "executeNftOpenOrderCallback((uint256,uint256,uint256,uint256,uint256,uint256))",
          "executeNftCloseOrderCallback((uint256,uint256,uint256,uint256,uint256,uint256))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/ChainlinkFeedInterfaceV5.sol:ChainlinkFeedInterfaceV5": {
        "src": "contracts/interfaces/ChainlinkFeedInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/GNSBorrowingFeesInterfaceV6_4.sol:GNSBorrowingFeesInterfaceV6_4": {
        "src": "contracts/interfaces/GNSBorrowingFeesInterfaceV6_4.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTradeLiquidationPrice((address,uint256,uint256,uint256,bool,uint256,uint256))",
          "getTradeBorrowingFee((address,uint256,uint256,bool,uint256,uint256))",
          "handleTradeAction(address,uint256,uint256,uint256,bool,bool)",
          "withinMaxGroupOi(uint256,bool,uint256)",
          "getPairMaxOi(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/GNSPairInfosInterfaceV6.sol:GNSPairInfosInterfaceV6": {
        "src": "contracts/interfaces/GNSPairInfosInterfaceV6.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tradeInitialAccFees(address,uint256,uint256)",
          "maxNegativePnlOnOpenP()",
          "storeTradeInitialAccFees(address,uint256,uint256,bool)",
          "getTradePriceImpact(uint256,uint256,bool,uint256)",
          "getTradeRolloverFee(address,uint256,uint256,uint256)",
          "getTradeFundingFee(address,uint256,uint256,bool,uint256,uint256)",
          "getTradeLiquidationPricePure(uint256,bool,uint256,uint256,uint256,int256)",
          "getTradeLiquidationPrice(address,uint256,uint256,uint256,bool,uint256,uint256)",
          "getTradeValue(address,uint256,uint256,bool,uint256,uint256,int256,uint256)",
          "manager()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/GNSReferralsInterfaceV6_2.sol:GNSReferralsInterfaceV6_2": {
        "src": "contracts/interfaces/GNSReferralsInterfaceV6_2.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "registerPotentialReferrer(address,address)",
          "distributePotentialReward(address,uint256,uint256,uint256)",
          "getPercentOfOpenFeeP(address)",
          "getTraderReferrer(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/GNSStakingInterfaceV6_4_1.sol:GNSStakingInterfaceV6_4_1": {
        "src": "contracts/interfaces/GNSStakingInterfaceV6_4_1.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "govFund()",
          "distributeRewardDai(uint256)",
          "createUnlockSchedule((uint128,uint48,uint48,bool,uint8),address)",
          "getUnlockSchedules(address)",
          "unlockedAmount((uint128,uint128,uint128,uint48,uint48,bool,uint8,uint16),uint48)",
          "releasable((uint128,uint128,uint128,uint48,uint48,bool,uint8,uint16),uint48)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IAccessControl.sol:IAccessControl": {
        "src": "contracts/interfaces/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "contracts/interfaces/IAccessControlEnumerable.sol:11",
        "inherit": [
          "contracts/interfaces/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IArbSys.sol:IArbSys": {
        "src": "contracts/interfaces/IArbSys.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "arbOSVersion()",
          "arbChainID()",
          "arbBlockNumber()",
          "withdrawEth(address)",
          "sendTxToL1(address,bytes)",
          "getTransactionCount(address)",
          "getStorageAt(address,uint256)",
          "isTopLevelCall()",
          "wasMyCallersAddressAliased()",
          "myCallersAddressWithoutAliasing()",
          "mapL1SenderContractAddressToL2Alias(address,address)",
          "getStorageGasAvailable()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IERC1967.sol:IERC1967": {
        "src": "contracts/interfaces/IERC1967.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IERC20.sol:IERC20": {
        "src": "contracts/interfaces/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IGNSOracle.sol:IGNSOracle": {
        "src": "contracts/interfaces/IGNSOracle.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAuthorizationStatus(address)",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IGNSOracleRewardsV6_4_1.sol:IGNSOracleRewardsV6_4_1": {
        "src": "contracts/interfaces/IGNSOracleRewardsV6_4_1.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storeTrigger((address,uint256,uint256,uint8))",
          "unregisterTrigger((address,uint256,uint256,uint8))",
          "distributeOracleReward((address,uint256,uint256,uint8),uint256)",
          "openLimitOrderTypes(address,uint256,uint256)",
          "setOpenLimitOrderType(address,uint256,uint256,uint8)",
          "triggered((address,uint256,uint256,uint8))",
          "timedOut((address,uint256,uint256,uint8))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IGToken.sol:IGToken": {
        "src": "contracts/interfaces/IGToken.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "manager()",
          "admin()",
          "currentEpoch()",
          "currentEpochStart()",
          "currentEpochPositiveOpenPnl()",
          "updateAccPnlPerTokenUsed(uint256,uint256)",
          "getLockedDeposit(uint256)",
          "sendAssets(uint256,address)",
          "receiveAssets(uint256,address)",
          "distributeReward(uint256)",
          "currentBalanceDai()",
          "tvl()",
          "marketCap()",
          "getPendingAccBlockWeightedMarketCap(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IGTokenLockedDepositNftDesign.sol:IGTokenLockedDepositNftDesign": {
        "src": "contracts/interfaces/IGTokenLockedDepositNftDesign.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "buildTokenURI(uint256,(address,uint256,uint256,uint256,uint256,uint256),string,string,uint8,uint8)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IGnsToken.sol:IGnsToken": {
        "src": "contracts/interfaces/IGnsToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(address,uint256)",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/INft.sol:INft": {
        "src": "contracts/interfaces/INft.sol:6",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IOpenTradesPnlFeed.sol:IOpenTradesPnlFeed": {
        "src": "contracts/interfaces/IOpenTradesPnlFeed.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "nextEpochValuesRequestCount()",
          "newOpenPnlRequestOrEpoch()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/IOwnable.sol:IOwnable": {
        "src": "contracts/interfaces/IOwnable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/ITransparentUpgradeableProxy.sol:ITransparentUpgradeableProxy": {
        "src": "contracts/interfaces/ITransparentUpgradeableProxy.sol:12",
        "inherit": [
          "contracts/interfaces/IERC1967.sol:IERC1967"
        ],
        "libraries": [],
        "methods": [
          "admin()",
          "implementation()",
          "changeAdmin(address)",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/NftInterfaceV5.sol:NftInterfaceV5": {
        "src": "contracts/interfaces/NftInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "transferFrom(address,address,uint256)",
          "tokenOfOwnerByIndex(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/PairsStorageInterfaceV6.sol:PairsStorageInterfaceV6": {
        "src": "contracts/interfaces/PairsStorageInterfaceV6.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "incrementCurrentOrderId()",
          "updateGroupCollateral(uint256,uint256,bool,bool)",
          "pairJob(uint256)",
          "pairFeed(uint256)",
          "pairSpreadP(uint256)",
          "pairMinLeverage(uint256)",
          "pairMaxLeverage(uint256)",
          "groupMaxCollateral(uint256)",
          "groupCollateral(uint256,bool)",
          "guaranteedSlEnabled(uint256)",
          "pairOpenFeeP(uint256)",
          "pairCloseFeeP(uint256)",
          "pairOracleFeeP(uint256)",
          "pairNftLimitOrderFeeP(uint256)",
          "pairReferralFeeP(uint256)",
          "pairMinLevPosDai(uint256)",
          "pairsCount()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/PausableInterfaceV5.sol:PausableInterfaceV5": {
        "src": "contracts/interfaces/PausableInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isPaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/PoolInterfaceV5.sol:PoolInterfaceV5": {
        "src": "contracts/interfaces/PoolInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "increaseAccTokensPerLp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:AggregatorInterfaceV6_4": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:282",
        "inherit": [],
        "libraries": [],
        "methods": [
          "pairsStorage()",
          "getPrice(uint256,uint8,uint256,uint256)",
          "tokenPriceDai()",
          "linkFee(uint256,uint256)",
          "openFeeP(uint256)",
          "linkPriceFeed()",
          "nodes(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:IStateCopyUtils": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:209",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getOpenLimitOrders()",
          "nftRewards()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:NftRewardsInterfaceV6_3_1": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:218",
        "inherit": [],
        "libraries": [],
        "methods": [
          "storeFirstToTrigger((address,uint256,uint256,uint8),address,uint256)",
          "storeTriggerSameBlock((address,uint256,uint256,uint8),address)",
          "unregisterTrigger((address,uint256,uint256,uint8))",
          "distributeNftReward((address,uint256,uint256,uint8),uint256,uint256)",
          "openLimitOrderTypes(address,uint256,uint256)",
          "setOpenLimitOrderType(address,uint256,uint256,uint8)",
          "triggered((address,uint256,uint256,uint8))",
          "timedOut((address,uint256,uint256,uint8))",
          "botInUse(bytes32)",
          "getNftBotHashes(uint256,address,uint256,address,uint256,uint256)",
          "setNftBotInUse(bytes32,bytes32)",
          "nftBotInUse(bytes32,bytes32)",
          "linkToTokenRewards(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:PausableInterfaceV5": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isPaused()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:PoolInterfaceV5": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "increaseAccTokensPerLp(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:StorageInterfaceV5": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "PRECISION()",
          "gov()",
          "dev()",
          "dai()",
          "token()",
          "linkErc677()",
          "priceAggregator()",
          "vault()",
          "trading()",
          "callbacks()",
          "handleTokens(address,uint256,bool)",
          "transferDai(address,address,uint256)",
          "transferLinkToAggregator(address,uint256,uint256)",
          "unregisterTrade(address,uint256,uint256)",
          "unregisterPendingMarketOrder(uint256,bool)",
          "unregisterOpenLimitOrder(address,uint256,uint256)",
          "hasOpenLimitOrder(address,uint256,uint256)",
          "storePendingMarketOrder(((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256),uint256,uint256,uint256,uint256,uint256),uint256,bool)",
          "openTrades(address,uint256,uint256)",
          "openTradesInfo(address,uint256,uint256)",
          "updateSl(address,uint256,uint256,uint256)",
          "updateTp(address,uint256,uint256,uint256)",
          "getOpenLimitOrder(address,uint256,uint256)",
          "spreadReductionsP(uint256)",
          "storeOpenLimitOrder((address,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "reqID_pendingMarketOrder(uint256)",
          "storePendingNftOrder((address,uint256,address,uint256,uint256,uint8),uint256)",
          "updateOpenLimitOrder((address,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
          "firstEmptyTradeIndex(address,uint256)",
          "firstEmptyOpenLimitIndex(address,uint256)",
          "increaseNftRewards(uint256,uint256)",
          "nftSuccessTimelock()",
          "reqID_pendingNftOrder(uint256)",
          "updateTrade((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256))",
          "nftLastSuccess(uint256)",
          "unregisterPendingNftOrder(uint256)",
          "handleDevGovFees(uint256,uint256,bool,bool)",
          "distributeLpRewards(uint256)",
          "storeTrade((address,uint256,uint256,uint256,uint256,uint256,bool,uint256,uint256,uint256),(uint256,uint256,uint256,uint256,uint256,bool))",
          "openLimitOrdersCount(address,uint256)",
          "openTradesCount(address,uint256)",
          "pendingMarketOpenCount(address,uint256)",
          "pendingMarketCloseCount(address,uint256)",
          "maxTradesPerPair()",
          "pendingOrderIdsCount(address)",
          "maxPendingMarketOrders()",
          "openInterestDai(uint256,uint256)",
          "getPendingOrderIds(address)",
          "nfts(uint256)",
          "fakeBlockNumber()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/StorageInterfaceV5.sol:TradingCallbacksV6_4": {
        "src": "contracts/interfaces/StorageInterfaceV5.sol:305",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tradeLastUpdated(address,uint256,uint256,uint8)",
          "setTradeLastUpdated((address,uint256,uint256,uint8),(uint32,uint32,uint32,uint32))",
          "setTradeData((address,uint256,uint256,uint8),(uint40,uint216))",
          "canExecuteTimeout()",
          "pairMaxLeverage(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/TokenInterfaceV5.sol:TokenInterfaceV5": {
        "src": "contracts/interfaces/TokenInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "burn(address,uint256)",
          "mint(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "hasRole(bytes32,address)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/TransparentUpgradeableProxy.sol:TransparentUpgradeableProxy": {
        "src": "contracts/interfaces/TransparentUpgradeableProxy.sol:40",
        "version": {
          "withMetadata": "a58c1ac16b70d686bf848e81afbeb33b3f78650258134f9c9bd20392346983b3",
          "withoutMetadata": "a58c1ac16b70d686bf848e81afbeb33b3f78650258134f9c9bd20392346983b3",
          "linkedWithoutMetadata": "a58c1ac16b70d686bf848e81afbeb33b3f78650258134f9c9bd20392346983b3"
        },
        "inherit": [
          "contracts/ERC1967/ERC1967Proxy.sol:ERC1967Proxy",
          "contracts/ERC1967/ERC1967Upgrade.sol:ERC1967Upgrade",
          "contracts/Proxy.sol:Proxy"
        ],
        "libraries": [],
        "methods": [
          "(address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TransparentUpgradeableProxy",
            "src": "contracts/interfaces/TransparentUpgradeableProxy.sol:45"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/UniswapRouterInterfaceV5.sol:UniswapRouterInterfaceV5": {
        "src": "contracts/interfaces/UniswapRouterInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/VaultInterfaceV5.sol:VaultInterfaceV5": {
        "src": "contracts/interfaces/VaultInterfaceV5.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "sendDaiToTrader(address,uint256)",
          "receiveDaiFromTrader(address,uint256,uint256)",
          "currentBalanceDai()",
          "distributeRewardDai(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/interfaces/draft-IERC1822.sol:IERC1822Proxiable": {
        "src": "contracts/interfaces/draft-IERC1822.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/libraries/ChainUtils.sol:ChainUtils": {
        "src": "contracts/libraries/ChainUtils.sol:6",
        "version": {
          "withMetadata": "270559010996321a37c93f8f0c1f6bd8fdc910ae0d39295fda4f09f687f5341d",
          "withoutMetadata": "270559010996321a37c93f8f0c1f6bd8fdc910ae0d39295fda4f09f687f5341d",
          "linkedWithoutMetadata": "270559010996321a37c93f8f0c1f6bd8fdc910ae0d39295fda4f09f687f5341d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/libraries/Initializable.sol:Initializable": {
        "src": "contracts/libraries/Initializable.sol:57",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/libraries/PackingUtils.sol:PackingUtils": {
        "src": "contracts/libraries/PackingUtils.sol:4",
        "version": {
          "withMetadata": "e108e91e9a7745ba87300472393432399cb58853015e9cd2b8e69d467d3d5724",
          "withoutMetadata": "e108e91e9a7745ba87300472393432399cb58853015e9cd2b8e69d467d3d5724",
          "linkedWithoutMetadata": "e108e91e9a7745ba87300472393432399cb58853015e9cd2b8e69d467d3d5724"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "pack(uint256[],uint256[])",
          "unpack(uint256,uint256[])",
          "unpack256To64(uint256)",
          "unpackExecuteNftOrder(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/libraries/TradeUtils.sol:TradeUtils": {
        "src": "contracts/libraries/TradeUtils.sol:6",
        "version": {
          "withMetadata": "123c49ca9b9eca610c6ca175a9fd4a850971ffb70bd75fc7e4e570e56d3bc681",
          "withoutMetadata": "123c49ca9b9eca610c6ca175a9fd4a850971ffb70bd75fc7e4e570e56d3bc681",
          "linkedWithoutMetadata": "123c49ca9b9eca610c6ca175a9fd4a850971ffb70bd75fc7e4e570e56d3bc681"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setTradeLastUpdated(address,address,uint256,uint256,uint8,uint256)",
          "setSlLastUpdated(address,address,uint256,uint256,uint8,uint256)",
          "setTpLastUpdated(address,address,uint256,uint256,uint8,uint256)",
          "setTradeData(address,address,uint256,uint256,uint8,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/Address.sol:Address": {
        "src": "contracts/utils/Address.sol:7",
        "version": {
          "withMetadata": "afbad076afdc9ee711a9b0f7ceaf2ae677497cc5798faf2d4de39c758f91d85d",
          "withoutMetadata": "afbad076afdc9ee711a9b0f7ceaf2ae677497cc5798faf2d4de39c758f91d85d",
          "linkedWithoutMetadata": "afbad076afdc9ee711a9b0f7ceaf2ae677497cc5798faf2d4de39c758f91d85d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "contracts/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "98da2fab2e2622ad96b8099eddbba232db163320e6b36acc40521c8833e1c7dd",
          "withoutMetadata": "98da2fab2e2622ad96b8099eddbba232db163320e6b36acc40521c8833e1c7dd",
          "linkedWithoutMetadata": "98da2fab2e2622ad96b8099eddbba232db163320e6b36acc40521c8833e1c7dd"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/Context.sol:Context": {
        "src": "contracts/utils/Context.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "contracts/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/ERC165.sol:ERC165": {
        "src": "contracts/utils/ERC165.sol:22",
        "inherit": [
          "contracts/utils/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/ERC20Upgradeable.sol:ERC20Upgradeable": {
        "src": "contracts/utils/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "4ae366f1b7cf28fc40e1bcef1ccb1cee7d191af573fa2bdde6dd2c4ea9021773",
          "withoutMetadata": "4ae366f1b7cf28fc40e1bcef1ccb1cee7d191af573fa2bdde6dd2c4ea9021773",
          "linkedWithoutMetadata": "4ae366f1b7cf28fc40e1bcef1ccb1cee7d191af573fa2bdde6dd2c4ea9021773"
        },
        "inherit": [
          "contracts/utils/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:400"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/ERC4626Upgradeable.sol:ERC4626Upgradeable": {
        "src": "contracts/utils/ERC4626Upgradeable.sol:32",
        "inherit": [
          "contracts/utils/IERC4626Upgradeable.sol:IERC4626Upgradeable",
          "contracts/utils/ERC20Upgradeable.sol:ERC20Upgradeable",
          "contracts/utils/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable",
          "contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "decimals()",
          "asset()",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "contracts/utils/ERC20Upgradeable.sol:400"
            },
            {
              "label": "_asset",
              "offset": 0,
              "slot": "101",
              "type": "t_contract(IERC20Upgradeable)38978",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:35"
            },
            {
              "label": "_decimals",
              "offset": 20,
              "slot": "101",
              "type": "t_uint8",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:36"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "102",
              "type": "t_array(t_uint256)49_storage",
              "contract": "ERC4626Upgradeable",
              "src": "contracts/utils/ERC4626Upgradeable.sol:296"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20Upgradeable)38978": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts/utils/EnumerableSet.sol:41",
        "version": {
          "withMetadata": "1e287f542211463ad74d4143c7d4bcdd774c1b55339800ecfbc8c870a6fa2967",
          "withoutMetadata": "1e287f542211463ad74d4143c7d4bcdd774c1b55339800ecfbc8c870a6fa2967",
          "linkedWithoutMetadata": "1e287f542211463ad74d4143c7d4bcdd774c1b55339800ecfbc8c870a6fa2967"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/IERC165.sol:IERC165": {
        "src": "contracts/utils/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable": {
        "src": "contracts/utils/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable": {
        "src": "contracts/utils/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/IERC4626Upgradeable.sol:IERC4626Upgradeable": {
        "src": "contracts/utils/IERC4626Upgradeable.sol:15",
        "inherit": [
          "contracts/utils/IERC20MetadataUpgradeable.sol:IERC20MetadataUpgradeable",
          "contracts/utils/IERC20Upgradeable.sol:IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "asset()",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "maxDeposit(address)",
          "previewDeposit(uint256)",
          "deposit(uint256,address)",
          "maxMint(address)",
          "previewMint(uint256)",
          "mint(uint256,address)",
          "maxWithdraw(address)",
          "previewWithdraw(uint256)",
          "withdraw(uint256,address,address)",
          "maxRedeem(address)",
          "previewRedeem(uint256)",
          "redeem(uint256,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/MathUpgradeable.sol:MathUpgradeable": {
        "src": "contracts/utils/MathUpgradeable.sol:9",
        "version": {
          "withMetadata": "b2f1bc3846af2f11e400102a79a7c2f32093f839c60778ecb644f78153a8d0c1",
          "withoutMetadata": "b2f1bc3846af2f11e400102a79a7c2f32093f839c60778ecb644f78153a8d0c1",
          "linkedWithoutMetadata": "b2f1bc3846af2f11e400102a79a7c2f32093f839c60778ecb644f78153a8d0c1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "contracts/utils/OwnableUpgradeable.sol:21",
        "inherit": [
          "contracts/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "contracts/libraries/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "contracts/libraries/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "contracts/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "contracts/utils/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "contracts/utils/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/SafeERC20Upgradeable.sol:SafeERC20Upgradeable": {
        "src": "contracts/utils/SafeERC20Upgradeable.sol:19",
        "version": {
          "withMetadata": "78373ff86d9ed1eb87b20412c472a0cbb1050f489147346e2bc95e8e51cfc8b0",
          "withoutMetadata": "78373ff86d9ed1eb87b20412c472a0cbb1050f489147346e2bc95e8e51cfc8b0",
          "linkedWithoutMetadata": "78373ff86d9ed1eb87b20412c472a0cbb1050f489147346e2bc95e8e51cfc8b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/StorageSlot.sol:StorageSlot": {
        "src": "contracts/utils/StorageSlot.sol:30",
        "version": {
          "withMetadata": "b8dfeea4ac5a86079b2e07095392da1404a1525c213a425508e70297334458d8",
          "withoutMetadata": "b8dfeea4ac5a86079b2e07095392da1404a1525c213a425508e70297334458d8",
          "linkedWithoutMetadata": "b8dfeea4ac5a86079b2e07095392da1404a1525c213a425508e70297334458d8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/Strings.sol:Strings": {
        "src": "contracts/utils/Strings.sol:11",
        "version": {
          "withMetadata": "d4aecac74ccd2d50d3d1e499588f7b7acbec2f8f6473915c8f1384d20387971d",
          "withoutMetadata": "d4aecac74ccd2d50d3d1e499588f7b7acbec2f8f6473915c8f1384d20387971d",
          "linkedWithoutMetadata": "d4aecac74ccd2d50d3d1e499588f7b7acbec2f8f6473915c8f1384d20387971d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/draft-IERC20PermitUpgradeable.sol:IERC20PermitUpgradeable": {
        "src": "contracts/utils/draft-IERC20PermitUpgradeable.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "nonces(address)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/utils/math/Math.sol:Math": {
        "src": "contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "098661ebdfb642753cd290ebbb2f38d899481b96b0b5ccca11400ff563300da4",
          "withoutMetadata": "098661ebdfb642753cd290ebbb2f38d899481b96b0b5ccca11400ff563300da4",
          "linkedWithoutMetadata": "098661ebdfb642753cd290ebbb2f38d899481b96b0b5ccca11400ff563300da4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/v6.2/Delegatable.sol:Delegatable": {
        "src": "contracts/v6.2/Delegatable.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setDelegate(address)",
          "removeDelegate()",
          "delegatedAction(address,bytes)",
          "_msgSender()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/v6.2/Delegatable.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "delegations",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "Delegatable",
              "src": "contracts/v6.2/Delegatable.sol:5"
            },
            {
              "label": "senderOverride",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Delegatable",
              "src": "contracts/v6.2/Delegatable.sol:6"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      },
      "contracts/v6.3/TWAPPriceGetter.sol:TWAPPriceGetter": {
        "src": "contracts/v6.3/TWAPPriceGetter.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenPriceDai()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TWAPPriceGetter",
            "src": "contracts/v6.3/TWAPPriceGetter.sol:28"
          },
          {
            "kind": "state-variable-immutable",
            "name": "precision",
            "src": "contracts/v6.3/TWAPPriceGetter.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/v6.3/TWAPPriceGetter.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "uniV3Pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IUniswapV3Pool)21",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:18"
            },
            {
              "label": "twapInterval",
              "offset": 20,
              "slot": "0",
              "type": "t_uint32",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:19"
            },
            {
              "label": "isGnsToken0InLp",
              "offset": 24,
              "slot": "0",
              "type": "t_bool",
              "contract": "TWAPPriceGetter",
              "src": "contracts/v6.3/TWAPPriceGetter.sol:22"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IUniswapV3Pool)21": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.17"
      }
    }
  ]
}