{
  "address": "0x99eb0229f985caDE74Cf1af41C43A6Cf57E88253",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DaiDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "DaiHarvested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "DaiHarvestedFromUnlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "GovFundUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "UnlockManagerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "UnlockScheduleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "schedule",
          "type": "tuple"
        }
      ],
      "name": "UnlockScheduled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_UNLOCK_DURATION",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_UNLOCK_TOKEN_AMOUNT",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accDaiPerToken",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "claimUnlockedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockScheduleInput",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "createUnlockSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeRewardDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUnlockSchedules",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "harvestAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "harvestFromUnlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govFund",
          "type": "address"
        },
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "_dai",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pendingRewardDai",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "pendingRewardDaiFromUnlocks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pendingRewardDaiFromUnlocks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "v",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "timestamp",
          "type": "uint48"
        }
      ],
      "name": "releasable",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "revokeUnlockSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setGovFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setUnlockManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalance",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "totalTokensStaked",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unlockManagers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unlockSchedules",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "totalTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "claimedTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "debtDai",
          "type": "uint128"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "duration",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        },
        {
          "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
          "name": "unlockType",
          "type": "uint8"
        },
        {
          "internalType": "uint16",
          "name": "__placeholder",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "v",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "timestamp",
          "type": "uint48"
        }
      ],
      "name": "unlockedAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "stakedTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "debtDai",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0e4c5565c62143f4a880e4b5402609c52175933de356a102da589ce05377e317",
  "receipt": {
    "to": null,
    "from": "0xd7D1dCba2c678ee7e049BD55176354E7C5bBdcCA",
    "contractAddress": "0x99eb0229f985caDE74Cf1af41C43A6Cf57E88253",
    "transactionIndex": 0,
    "gasUsed": "2373913",
    "logsBloom": "0x
    "blockHash": "0xb7b4369b1f1cb6cb5771ef770d7ba73d16604f356c484b4274508043f9801135",
    "transactionHash": "0x0e4c5565c62143f4a880e4b5402609c52175933de356a102da589ce05377e317",
    "logs": [],
    "blockNumber": 28,
    "cumulativeGasUsed": "2373913",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "7b2b4c0d65516b524667a4840d5fe435",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DaiDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DaiHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DaiHarvestedFromUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"GovFundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"UnlockManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UnlockScheduleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"schedule\",\"type\":\"tuple\"}],\"name\":\"UnlockScheduled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_UNLOCK_DURATION\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_UNLOCK_TOKEN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accDaiPerToken\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"claimUnlockedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockScheduleInput\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"createUnlockSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeRewardDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUnlockSchedules\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"harvestAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"harvestFromUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govFund\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"_dai\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"pendingRewardDai\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"pendingRewardDaiFromUnlocks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"pendingRewardDaiFromUnlocks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"v\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"revokeUnlockSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setGovFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setUnlockManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"totalTokensStaked\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unlockManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockSchedules\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"v\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"name\":\"unlockedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"stakedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GNSStakingV6_4_1.sol\":\"GNSStakingV6_4_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/contracts/GNSStakingV6_4_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"../interfaces/GNSStakingInterfaceV6_4_1.sol\\\";\\nimport \\\"../interfaces/TokenInterfaceV5.sol\\\";\\n\\npragma solidity 0.8.7;\\n\\ncontract GNSStakingV6_4_1 is Initializable, GNSStakingInterfaceV6_4_1 {\\n    // Constants\\n    uint128 public constant MAX_UNLOCK_DURATION = 730 days; // 2 years in seconds\\n    uint128 public constant MIN_UNLOCK_TOKEN_AMOUNT = 1e18;\\n\\n    // Contracts & Addresses\\n    address public override govFund;\\n    TokenInterfaceV5 public token; // GNS\\n    TokenInterfaceV5 public dai;\\n\\n    // Pool state\\n    uint128 public accDaiPerToken;\\n    uint128 public tokenBalance;\\n\\n    // Mappings\\n    mapping(address => User) public users;\\n    mapping(address => UnlockSchedule[]) public unlockSchedules;\\n    mapping(address => bool) public unlockManagers; // addresses allowed to create unlock schedules for others\\n\\n    // Events\\n    event GovFundUpdated(address value);\\n    event UnlockManagerUpdated(address indexed manager, bool authorized);\\n\\n    event DaiDistributed(uint amount);\\n    event DaiHarvested(address indexed user, uint128 amount);\\n    event DaiHarvestedFromUnlock(address indexed user, uint128 amount);\\n\\n    event TokensStaked(address indexed user, uint128 amount);\\n    event TokensUnstaked(address indexed user, uint128 amount);\\n    event TokensClaimed(address indexed user, uint[] ids, uint128 amount);\\n\\n    event UnlockScheduled(address indexed user, uint indexed index, UnlockSchedule schedule);\\n    event UnlockScheduleRevoked(address indexed user, uint indexed index);\\n\\n    function initialize(address _govFund, TokenInterfaceV5 _token, TokenInterfaceV5 _dai) external initializer {\\n        require(_govFund != address(0) && address(_token) != address(0) && address(_dai) != address(0), \\\"WRONG_PARAMS\\\");\\n\\n        govFund = _govFund;\\n        token = _token;\\n        dai = _dai;\\n    }\\n\\n    //\\n    // Modifiers\\n    //\\n\\n    modifier onlyGov() {\\n        require(msg.sender == govFund, \\\"GOV_ONLY\\\");\\n        _;\\n    }\\n\\n    modifier onlyAuthorizedUnlockManager(address user) {\\n        require(user == msg.sender || msg.sender == govFund || unlockManagers[msg.sender], \\\"NO_AUTH\\\");\\n        _;\\n    }\\n\\n    //\\n    // Management functions\\n    //\\n\\n    function setGovFund(address value) external onlyGov {\\n        require(value != address(0), \\\"ADDRESS_0\\\");\\n\\n        govFund = value;\\n\\n        emit GovFundUpdated(value);\\n    }\\n\\n    function setUnlockManager(address manager, bool authorized) external onlyGov {\\n        unlockManagers[manager] = authorized;\\n\\n        emit UnlockManagerUpdated(manager, authorized);\\n    }\\n\\n    //\\n    // Internal view functions\\n    //\\n\\n    function _currentDebtDai(uint128 staked) internal view returns (uint128) {\\n        return uint128((uint(staked) * accDaiPerToken) / 1e18);\\n    }\\n\\n    function _pendingDai(uint128 staked, uint128 debtDai) internal view returns (uint128) {\\n        return _currentDebtDai(staked) - debtDai;\\n    }\\n\\n    function _pendingDai(UnlockSchedule memory v) internal view returns (uint128) {\\n        return _currentDebtDai(v.totalTokens - v.claimedTokens) - v.debtDai;\\n    }\\n\\n    //\\n    // Public view functions\\n    //\\n\\n    function unlockedAmount(UnlockSchedule memory v, uint48 timestamp) public pure override returns (uint128) {\\n        // if unlock schedule has ended return totalTokens\\n        if (timestamp >= v.start + v.duration) return v.totalTokens;\\n\\n        // if unlock hasn't started or it's a cliff unlock return 0\\n        if (timestamp < v.start || v.unlockType == UnlockType.CLIFF) return 0;\\n\\n        return uint128((uint(v.totalTokens) * (timestamp - v.start)) / v.duration);\\n    }\\n\\n    function releasable(UnlockSchedule memory v, uint48 timestamp) public override pure returns (uint128) {\\n        return unlockedAmount(v, timestamp) - v.claimedTokens;\\n    }\\n\\n    //\\n    // Internal state-modifying functions\\n    //\\n\\n    function _harvestFromUnlock(address user, uint[] memory ids) internal {\\n        require(user != address(0), \\\"USER_EMPTY\\\");\\n        require(ids.length > 0, \\\"IDS_EMPTY\\\");\\n\\n        uint128 pendingDai;\\n\\n        for (uint i; i < ids.length; ) {\\n            UnlockSchedule storage v = unlockSchedules[user][ids[i]];\\n\\n            uint128 newDebtDai = _currentDebtDai(v.totalTokens - v.claimedTokens);\\n            uint128 newRewardsDai = newDebtDai - v.debtDai;\\n\\n            pendingDai += newRewardsDai;\\n            v.debtDai = newDebtDai;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        dai.transfer(user, uint(pendingDai));\\n\\n        emit DaiHarvestedFromUnlock(user, pendingDai);\\n    }\\n\\n    function _claimUnlockedTokens(address user, uint48 timestamp, uint[] memory ids) internal {\\n        uint128 claimed;\\n\\n        _harvestFromUnlock(user, ids);\\n\\n        for (uint i; i < ids.length; ) {\\n            UnlockSchedule storage v = unlockSchedules[user][ids[i]];\\n            uint128 amount = releasable(v, timestamp);\\n\\n            v.claimedTokens += amount;\\n            v.debtDai = _currentDebtDai(v.totalTokens - v.claimedTokens);\\n\\n            claimed += amount;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        tokenBalance -= claimed;\\n        token.transfer(user, uint(claimed));\\n\\n        emit TokensClaimed(user, ids, claimed);\\n    }\\n\\n    //\\n    // Public/External interaction functions\\n    //\\n\\n    function distributeRewardDai(uint amount) override external {\\n        dai.transferFrom(msg.sender, address(this), amount);\\n\\n        if (tokenBalance > 0) {\\n            accDaiPerToken += uint128((amount * 1e18) / uint(tokenBalance));\\n        }\\n\\n        emit DaiDistributed(amount);\\n    }\\n\\n    function harvest() public {\\n        User storage u = users[msg.sender];\\n\\n        uint128 newDebtDai = _currentDebtDai(u.stakedTokens);\\n        uint128 pendingDai = uint128(newDebtDai - u.debtDai);\\n\\n        u.debtDai = newDebtDai;\\n        dai.transfer(msg.sender, uint(pendingDai));\\n\\n        emit DaiHarvested(msg.sender, pendingDai);\\n    }\\n\\n    function harvestFromUnlock(uint[] calldata ids) external {\\n        _harvestFromUnlock(msg.sender, ids);\\n    }\\n\\n    function harvestAll(uint[] calldata ids) external {\\n        harvest();\\n        _harvestFromUnlock(msg.sender, ids);\\n    }\\n\\n    function stakeTokens(uint128 amount) external {\\n        User storage u = users[msg.sender];\\n\\n        token.transferFrom(msg.sender, address(this), uint(amount));\\n\\n        harvest();\\n\\n        u.stakedTokens += amount;\\n        u.debtDai = _currentDebtDai(u.stakedTokens);\\n\\n        tokenBalance += amount;\\n\\n        emit TokensStaked(msg.sender, amount);\\n    }\\n\\n    function unstakeTokens(uint128 amount) external {\\n        User storage u = users[msg.sender];\\n\\n        harvest();\\n\\n        u.stakedTokens -= amount;\\n        u.debtDai = _currentDebtDai(u.stakedTokens);\\n\\n        tokenBalance -= amount;\\n\\n        token.transfer(msg.sender, uint(amount));\\n\\n        emit TokensUnstaked(msg.sender, amount);\\n    }\\n\\n    function claimUnlockedTokens(uint[] memory ids) external {\\n        _claimUnlockedTokens(msg.sender, uint48(block.timestamp), ids);\\n    }\\n\\n    function createUnlockSchedule(\\n        UnlockScheduleInput memory input,\\n        address user\\n    ) external override onlyAuthorizedUnlockManager(user) {\\n        require(input.duration > 0 && input.duration <= MAX_UNLOCK_DURATION, \\\"INCORRECT_DURATION\\\");\\n        require(input.totalTokens >= MIN_UNLOCK_TOKEN_AMOUNT, \\\"INCORRECT_AMOUNT\\\");\\n        require(user != address(0), \\\"ADDRESS_0\\\");\\n\\n        uint128 totalTokens = input.totalTokens;\\n\\n        // Requester has to pay the token amount\\n        token.transferFrom(msg.sender, address(this), uint(totalTokens));\\n\\n        uint48 timestamp = uint48(block.timestamp);\\n\\n        UnlockSchedule memory vs = UnlockSchedule({\\n            totalTokens: totalTokens,\\n            claimedTokens: 0,\\n            debtDai: _currentDebtDai(totalTokens),\\n            start: input.start >= timestamp ? input.start : timestamp, // accept time in the future\\n            duration: input.duration,\\n            unlockType: input.unlockType,\\n            revocable: input.revocable,\\n            __placeholder: 0\\n        });\\n\\n        tokenBalance += totalTokens;\\n        unlockSchedules[user].push(vs);\\n\\n        emit UnlockScheduled(user, unlockSchedules[user].length - 1, vs);\\n    }\\n\\n    function revokeUnlockSchedule(address user, uint id) external onlyGov {\\n        UnlockSchedule storage v = unlockSchedules[user][id];\\n        require(v.revocable, \\\"NOT_REVOCABLE\\\");\\n\\n        uint48 timestamp = uint48(block.timestamp);\\n\\n        uint[] memory ids;\\n        ids[0] = id;\\n\\n        // claim unlocked tokens and harvests pending rewards\\n        _claimUnlockedTokens(user, timestamp, ids);\\n\\n        uint128 lockedAmount = v.totalTokens - v.claimedTokens;\\n\\n        // reset unlockSchedule so no more claims are possible.\\n        // set start to timestamp if start is in the future. prevents div by 0 in releasable calculations\\n        v.totalTokens = v.claimedTokens;\\n        v.duration = 0;\\n        v.start = v.start > timestamp ? v.start : timestamp;\\n        v.debtDai = _currentDebtDai(v.totalTokens);\\n\\n        tokenBalance -= lockedAmount;\\n\\n        token.transfer(govFund, uint(lockedAmount));\\n\\n        emit UnlockScheduleRevoked(user, id);\\n    }\\n\\n    //\\n    // External view functions\\n    //\\n\\n    function pendingRewardDai(address user) external view returns (uint128) {\\n        User memory u = users[user];\\n\\n        return _pendingDai(u.stakedTokens, u.debtDai);\\n    }\\n\\n    function pendingRewardDaiFromUnlocks(address user) external view returns (uint128) {\\n        uint128 pending;\\n        UnlockSchedule[] memory userUnlocks = unlockSchedules[user];\\n\\n        for (uint i; i < userUnlocks.length; ) {\\n            pending += _pendingDai(userUnlocks[i]);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return pending;\\n    }\\n\\n    function pendingRewardDaiFromUnlocks(address user, uint[] memory ids) external view returns (uint128) {\\n        uint128 pending;\\n\\n        for (uint i; i < ids.length; ) {\\n            pending += _pendingDai(unlockSchedules[user][ids[i]]);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return pending;\\n    }\\n\\n    function totalTokensStaked(address user) external view returns (uint128) {\\n        uint128 totalGns = users[user].stakedTokens;\\n        UnlockSchedule[] memory userUnlocks = unlockSchedules[user];\\n\\n        for (uint i; i < userUnlocks.length; ) {\\n            UnlockSchedule memory v = userUnlocks[i];\\n            totalGns += v.totalTokens - v.claimedTokens;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return totalGns;\\n    }\\n\\n    function getUnlockSchedules(address user) external override view returns (UnlockSchedule[] memory) {\\n        return unlockSchedules[user];\\n    }\\n}\",\"keccak256\":\"0x82e3389f9ff8fb8219cd973c28840fad85d9f70e9426653f7644c279753c6273\",\"license\":\"MIT\"},\"contracts/interfaces/GNSStakingInterfaceV6_4_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface GNSStakingInterfaceV6_4_1 {\\n    // Structs\\n    struct User {\\n        uint128 stakedTokens; // 1e18\\n        uint128 debtDai; // 1e18\\n    }\\n\\n    struct UnlockSchedule {\\n        uint128 totalTokens;\\n        uint128 claimedTokens;\\n        uint128 debtDai;\\n        uint48 start; // block.timestamp (seconds)\\n        uint48 duration; // in seconds\\n        bool revocable;\\n        UnlockType unlockType;\\n        uint16 __placeholder;\\n    }\\n\\n    struct UnlockScheduleInput {\\n        uint128 totalTokens;\\n        uint48 start; // block.timestamp (seconds)\\n        uint48 duration; // in seconds\\n        bool revocable;\\n        UnlockType unlockType;\\n    }\\n\\n    enum UnlockType {\\n        LINEAR,\\n        CLIFF\\n    }\\n\\n    function govFund() external returns (address);\\n\\n    function distributeRewardDai(uint amount) external;\\n\\n    function createUnlockSchedule(UnlockScheduleInput memory schedule, address user) external;\\n\\n    function getUnlockSchedules(address user) external view returns (UnlockSchedule[] memory schedules);\\n\\n    function unlockedAmount(UnlockSchedule memory v, uint48 timestamp) external view returns (uint128 amount);\\n\\n    function releasable(UnlockSchedule memory v, uint48 timestamp) external view returns (uint128 amount);\\n}\",\"keccak256\":\"0x28ec94c92ad62566bd65dead4758a46579aa54f09f83209a15fa99d8741989e2\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\ninterface TokenInterfaceV5{\\n    function burn(address, uint256) external;\\n    function mint(address, uint256) external;\\n    function transfer(address, uint256) external returns (bool);\\n    function transferFrom(address, address, uint256) external returns(bool);\\n    function balanceOf(address) external view returns(uint256);\\n    function hasRole(bytes32, address) external view returns (bool);\\n    function approve(address, uint256) external returns (bool);\\n    function allowance(address, address) external view returns (uint256);\\n}\",\"keccak256\":\"0x0b1aef35747e180443d65683c29cebff6cc9eaaac364f29f1a619f68b8df9b82\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506129f7806100206000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637c74f1af11610104578063b23b329f116100a2578063e860930a11610071578063e860930a1461043e578063f4b9fa7514610471578063fc0c546a14610484578063fc7d01481461049757600080fd5b8063b23b329f146103fa578063b243fb011461040d578063c0c53b8b14610420578063dd01590a1461043357600080fd5b806393e45737116100de57806393e457371461035957806396c95c1a1461036c5780639e1a4d191461038c578063a87430ba146103a657600080fd5b80637c74f1af146103025780638102329214610315578063865f12e81461032857600080fd5b80634641257d11610171578063538677741161014b57806353867774146102b6578063635e0ba6146102c9578063731baf63146102dc57806378ce3d89146102ef57600080fd5b80634641257d146102745780634689e8d21461027c57806351f6cf2f1461028f57600080fd5b80633620151b116101ad5780633620151b1461022c57806337f2225e1461023f578063393a37dc146102525780633a6901a21461026557600080fd5b80631eddd5ca146101d45780632185c5a8146101e95780632aabff1514610219575b600080fd5b6101e76101e2366004612626565b6104aa565b005b6101fc6101f73660046122c4565b61064e565b6040516001600160801b0390911681526020015b60405180910390f35b6101e76102273660046123e1565b6107d9565b6003546101fc906001600160801b031681565b6101fc61024d3660046122c4565b610822565b6101e7610260366004612626565b610876565b6101fc670de0b6b3a764000081565b6101e76109eb565b6101e761028a366004612331565b610b19565b6102a261029d3660046123b5565b610baa565b6040516102109897969594939291906127d2565b6101e76102c4366004612456565b610c39565b6101fc6102d736600461255a565b610c47565b6101fc6102ea36600461255a565b610c6b565b6101e76102fd3660046124b0565b610d27565b6101e76103103660046122c4565b6111c7565b6101fc6103233660046122e1565b611298565b600054610341906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610210565b6101fc6103673660046122c4565b6113dd565b61037f61037a3660046122c4565b61153d565b60405161021091906126fe565b6003546101fc90600160801b90046001600160801b031681565b6103da6103b43660046122c4565b6004602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610210565b6101e76104083660046123e1565b6107e1565b6101e761041b366004612641565b611660565b6101e761042e36600461236a565b6117a2565b6101fc6303c2670081565b61046161044c3660046122c4565b60066020526000908152604090205460ff1681565b6040519015158152602001610210565b600254610341906001600160a01b031681565b600154610341906001600160a01b031681565b6101e76104a53660046123b5565b61196e565b3360008181526004602081905260409182902060015492516323b872dd60e01b8152918201939093523060248201526001600160801b03841660448201526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190612493565b506105586109eb565b8054829082906000906105759084906001600160801b031661285f565b82546101009290920a6001600160801b0381810219909316918316021790915582546105a2925016611c4e565b81546001600160801b03908116600160801b928216830217835560038054859391926010926105d69286929190041661285f565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550336001600160a01b03167f603ec8111e4b299ce77433420e77ede7dff7aaf20a360583ed003ac868e59afe8360405161064291906001600160801b0391909116815260200190565b60405180910390a25050565b6001600160a01b0381166000908152600460209081526040808320546005835281842080548351818602810186019094528084526001600160801b039092169385939290849084015b8282101561077757600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b909204169081111561073f5761073f61295c565b60018111156107505761075061295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101610697565b50505050905060005b81518110156107d057600082828151811061079d5761079d612972565b60200260200101519050806020015181600001516107bb91906128ec565b6107c5908561285f565b935050600101610780565b50909392505050565b6107e16109eb565b61081e33838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611c7f92505050565b5050565b6001600160a01b03811660009081526004602090815260408083208151808301909252546001600160801b03808216808452600160801b90920416928201839052909161086f9190611eb4565b9392505050565b33600090815260046020526040902061088d6109eb565b8054829082906000906108aa9084906001600160801b03166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915582546108d7925016611c4e565b81546001600160801b03908116600160801b9282168302178355600380548593919260109261090b928692919004166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460405163a9059cbb60e01b815233600482015291851660248301526001600160a01b0316915063a9059cbb90604401602060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190612493565b506040516001600160801b038316815233907fee66b9189612f29967ec6ab5c02a4015623d4b820313b0411ad1ce6c4c0d5c2a90602001610642565b3360009081526004602052604081208054909190610a11906001600160801b0316611c4e565b8254909150600090610a3390600160801b90046001600160801b0316836128ec565b83546001600160801b03908116600160801b8583160217855560025460405163a9059cbb60e01b815233600482015291831660248301529192506001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a9c57600080fd5b505af1158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190612493565b506040516001600160801b038216815233907ff5c4762b09bad9ee274417cb38a318d436e5840ab30be2c2900f8f0e69b317fc906020015b60405180910390a2505050565b6000546201000090046001600160a01b03163314610b525760405162461bcd60e51b8152600401610b49906127a1565b60405180910390fd5b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915591519182527f37d059510662ed4f7c846b2b307b12cae9efc251486cb247fba0b9d7021e5b3f9101610642565b60056020528160005260406000208181548110610bc657600080fd5b6000918252602090912060029091020180546001909101546001600160801b038083169450600160801b928390048116935081169165ffffffffffff908204811691600160b01b81049091169060ff600160e01b8204811691600160e81b81049091169061ffff600160f01b9091041688565b610c44334283611ec0565b50565b60008260200151610c588484610c6b565b610c6291906128ec565b90505b92915050565b600082608001518360600151610c81919061288a565b65ffffffffffff168265ffffffffffff1610610c9f57508151610c65565b826060015165ffffffffffff168265ffffffffffff161080610cd6575060018360c001516001811115610cd457610cd461295c565b145b15610ce357506000610c65565b826080015165ffffffffffff16836060015183610d00919061292b565b8451610d1d9165ffffffffffff16906001600160801b03166128cd565b610c6291906128ab565b806001600160a01b038116331480610d4f57506000546201000090046001600160a01b031633145b80610d6957503360009081526006602052604090205460ff165b610d9f5760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606401610b49565b6000836040015165ffffffffffff16118015610dd457506303c267006001600160801b0316836040015165ffffffffffff1611155b610e155760405162461bcd60e51b815260206004820152601260248201527124a721a7a92922a1aa2fa22aa920aa24a7a760711b6044820152606401610b49565b8251670de0b6b3a76400006001600160801b039091161015610e6c5760405162461bcd60e51b815260206004820152601060248201526f125390d3d4949150d517d05353d5539560821b6044820152606401610b49565b6001600160a01b038216610eae5760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610b49565b82516001546040516323b872dd60e01b81523360048201523060248201526001600160801b03831660448201526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612493565b5060004290506000604051806101000160405280846001600160801b0316815260200160006001600160801b03168152602001610f7e85611c4e565b6001600160801b031681526020018365ffffffffffff16886020015165ffffffffffff161015610fae5783610fb4565b87602001515b65ffffffffffff168152602001876040015165ffffffffffff16815260200187606001511515815260200187608001516001811115610ff557610ff561295c565b81526000602090910152600380549192508491601090611026908490600160801b90046001600160801b031661285f565b82546001600160801b039182166101009390930a9283029282021916919091179091556001600160a01b0387166000908152600560209081526040808320805460018181018355918552938390208751938801518616600160801b90810294871694909417600290950201938455908601518382018054606089015160808a015160a08b01511515600160e01b0260ff60e01b1965ffffffffffff928316600160b01b021666ffffffffffffff60b01b19929093169097026001600160b01b031990931694909816939093171795909516179190911780845560c086015186955092939160ff60e81b1990911690600160e81b90849081111561112b5761112b61295c565b021790555060e091909101516001918201805461ffff909216600160f01b026001600160f01b039092169190911790556001600160a01b03861660009081526005602052604090205461117e9190612914565b856001600160a01b03167fd858b6b4541385008baaa764f65f7ca9b7e0cdcf25fa214b9c3b1c8de97f3faa836040516111b791906127c3565b60405180910390a3505050505050565b6000546201000090046001600160a01b031633146111f75760405162461bcd60e51b8152600401610b49906127a1565b6001600160a01b0381166112395760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610b49565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040519081527f82ed90f787d49d0a2409d828dce36f3138f9c04e46a59446f7564352cc9dd526906020015b60405180910390a150565b60008060005b83518110156113d5576001600160a01b038516600090815260056020526040902084516113c191908690849081106112d8576112d8612972565b6020026020010151815481106112f0576112f0612972565b60009182526020918290206040805161010081018252600290930290910180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b90920416908111156113915761139161295c565b60018111156113a2576113a261295c565b815260019190910154600160f01b900461ffff166020909101526121a8565b6113cb908361285f565b915060010161129e565b509392505050565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835284938493929190849084015b828210156114f557600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b90920416908111156114bd576114bd61295c565b60018111156114ce576114ce61295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101611415565b50505050905060005b81518110156107d05761152982828151811061151c5761151c612972565b60200260200101516121a8565b611533908461285f565b92506001016114fe565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561165557600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b909204169081111561161d5761161d61295c565b600181111561162e5761162e61295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101611575565b505050509050919050565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ea9190612493565b50600354600160801b90046001600160801b03161561177257600354600160801b90046001600160801b031661172882670de0b6b3a76400006128cd565b61173291906128ab565b6003805460009061174d9084906001600160801b031661285f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6040518181527f3d3a5dc6f49d04618f423dcbc7425d8eb9449f43a3f35243a05d11f5f6a78dfe9060200161128d565b600054610100900460ff16158080156117c25750600054600160ff909116105b806117dc5750303b1580156117dc575060005460ff166001145b61183f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b49565b6000805460ff191660011790558015611862576000805461ff0019166101001790555b6001600160a01b0384161580159061188257506001600160a01b03831615155b801561189657506001600160a01b03821615155b6118d15760405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f504152414d5360a01b6044820152606401610b49565b600080546001600160a01b03808716620100000262010000600160b01b031990921691909117909155600180548583166001600160a01b03199182161790915560028054928516929091169190911790558015611968576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000546201000090046001600160a01b0316331461199e5760405162461bcd60e51b8152600401610b49906127a1565b6001600160a01b03821660009081526005602052604081208054839081106119c8576119c8612972565b9060005260206000209060020201905080600101601c9054906101000a900460ff16611a265760405162461bcd60e51b815260206004820152600d60248201526c4e4f545f5245564f4341424c4560981b6044820152606401610b49565b600042905060608381600081518110611a4157611a41612972565b602002602001018181525050611a58858383611ec0565b8254600090611a79906001600160801b03600160801b8204811691166128ec565b84546001600160801b031981166001600160801b03600160801b928390041617865560018601805465ffffffffffff60b01b19169081905591925065ffffffffffff8581169190920490911611611ad05782611ae5565b6001840154600160801b900465ffffffffffff165b60018501805465ffffffffffff92909216600160801b0265ffffffffffff60801b199092169190911790558354611b24906001600160801b0316611c4e565b6001850180546001600160801b0319166001600160801b03928316179055600380548392601091611b5e918591600160801b9004166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460005460405163a9059cbb60e01b8152620100009091046001600160a01b03908116600483015292851660248201529116915063a9059cbb90604401602060405180830381600087803b158015611bd757600080fd5b505af1158015611beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0f9190612493565b5060405185906001600160a01b038816907fec3458853f0bb76e34bb0ac49646241e29b9d541e9b111c74803383b1878f4db90600090a3505050505050565b600354600090670de0b6b3a764000090611c75906001600160801b039081169085166128cd565b610c6591906128ab565b6001600160a01b038216611cc25760405162461bcd60e51b815260206004820152600a602482015269555345525f454d50545960b01b6044820152606401610b49565b6000815111611cff5760405162461bcd60e51b81526020600482015260096024820152684944535f454d50545960b81b6044820152606401610b49565b6000805b8251811015611de0576001600160a01b03841660009081526005602052604081208451859084908110611d3857611d38612972565b602002602001015181548110611d5057611d50612972565b6000918252602082206002909102018054909250611d8990611d84906001600160801b03600160801b8204811691166128ec565b611c4e565b6001830154909150600090611da7906001600160801b0316836128ec565b9050611db3818661285f565b600193840180546001600160801b0319166001600160801b03949094169390931790925550925001611d03565b5060025460405163a9059cbb60e01b81526001600160a01b0385811660048301526001600160801b03841660248301529091169063a9059cbb90604401602060405180830381600087803b158015611e3757600080fd5b505af1158015611e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6f9190612493565b506040516001600160801b03821681526001600160a01b038416907f572be9934ed68fdab8bb0ce42f16ca23368a9081261ff0757dc7d17923fc25d190602001610b0c565b600081610c5884611c4e565b6000611ecc8483611c7f565b60005b8251811015612092576001600160a01b03851660009081526005602052604081208451859084908110611f0457611f04612972565b602002602001015181548110611f1c57611f1c612972565b600091825260208083206040805161010081018252600290940290910180546001600160801b038082168652600160801b918290048116948601949094526001808301549485169386019390935265ffffffffffff90840481166060860152600160b01b840416608085015260ff600160e01b84048116151560a0860152909550611ff59392869260c0850192600160e81b90920490911690811115611fc457611fc461295c565b6001811115611fd557611fd561295c565b815260019190910154600160f01b900461ffff1660209091015287610c47565b82549091508190839060109061201c908490600160801b90046001600160801b031661285f565b82546101009290920a6001600160801b0381810219909316918316021790915583546120579250611d8491600160801b8204811691166128ec565b6001830180546001600160801b0319166001600160801b0392909216919091179055612083818561285f565b93508260010192505050611ecf565b5080600360108282829054906101000a90046001600160801b03166120b791906128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460405163a9059cbb60e01b81526001600160a01b03888116600483015292851660248201529116915063a9059cbb90604401602060405180830381600087803b15801561212657600080fd5b505af115801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e9190612493565b50836001600160a01b03167f1b11859773b8218821d15e67ec2127a3cdc452e22e610e0a45e1085b5bb9955b838360405161219a92919061274d565b60405180910390a250505050565b600081604001516121c683602001518460000151611d8491906128ec565b610c6591906128ec565b600082601f8301126121e157600080fd5b8135602067ffffffffffffffff808311156121fe576121fe612988565b8260051b604051601f19603f8301168101818110848211171561222357612223612988565b6040528481528381019250868401828801850189101561224257600080fd5b600092505b85831015612265578035845292840192600192909201918401612247565b50979650505050505050565b80356002811061228057600080fd5b919050565b80356001600160801b038116811461228057600080fd5b803561ffff8116811461228057600080fd5b803565ffffffffffff8116811461228057600080fd5b6000602082840312156122d657600080fd5b813561086f8161299e565b600080604083850312156122f457600080fd5b82356122ff8161299e565b9150602083013567ffffffffffffffff81111561231b57600080fd5b612327858286016121d0565b9150509250929050565b6000806040838503121561234457600080fd5b823561234f8161299e565b9150602083013561235f816129b3565b809150509250929050565b60008060006060848603121561237f57600080fd5b833561238a8161299e565b9250602084013561239a8161299e565b915060408401356123aa8161299e565b809150509250925092565b600080604083850312156123c857600080fd5b82356123d38161299e565b946020939093013593505050565b600080602083850312156123f457600080fd5b823567ffffffffffffffff8082111561240c57600080fd5b818501915085601f83011261242057600080fd5b81358181111561242f57600080fd5b8660208260051b850101111561244457600080fd5b60209290920196919550909350505050565b60006020828403121561246857600080fd5b813567ffffffffffffffff81111561247f57600080fd5b61248b848285016121d0565b949350505050565b6000602082840312156124a557600080fd5b815161086f816129b3565b60008082840360c08112156124c457600080fd5b60a08112156124d257600080fd5b5060405160a0810181811067ffffffffffffffff821117156124f6576124f6612988565b60405261250284612285565b8152612510602085016122ae565b6020820152612521604085016122ae565b60408201526060840135612534816129b3565b606082015261254560808501612271565b6080820152915060a083013561235f8161299e565b60008082840361012081121561256f57600080fd5b6101008082121561257f57600080fd5b612587612835565b915061259285612285565b82526125a060208601612285565b60208301526125b160408601612285565b60408301526125c2606086016122ae565b60608301526125d3608086016122ae565b608083015260a08501356125e6816129b3565b60a08301526125f760c08601612271565b60c083015261260860e0860161229c565b60e083015281935061261b8186016122ae565b925050509250929050565b60006020828403121561263857600080fd5b610c6282612285565b60006020828403121561265357600080fd5b5035919050565b6002811061267857634e487b7160e01b600052602160045260246000fd5b9052565b6001600160801b0380825116835280602083015116602084015280604083015116604084015250606081015165ffffffffffff8082166060850152806080840151166080850152505060a0810151151560a083015260c08101516126e360c084018261265a565b5060e08101516126f960e084018261ffff169052565b505050565b6020808252825182820181905260009190848201906040850190845b818110156127415761272d83855161267c565b92840192610100929092019160010161271a565b50909695505050505050565b604080825283519082018190526000906020906060840190828701845b828110156127865781518452928401929084019060010161276a565b5050506001600160801b039490941692019190915250919050565b602080825260089082015267474f565f4f4e4c5960c01b604082015260600190565b6101008101610c65828461267c565b6001600160801b03898116825288811660208301528716604082015265ffffffffffff86811660608301528516608082015283151560a0820152610100810161281e60c083018561265a565b61ffff831660e08301529998505050505050505050565b604051610100810167ffffffffffffffff8111828210171561285957612859612988565b60405290565b60006001600160801b0380831681851680830382111561288157612881612946565b01949350505050565b600065ffffffffffff80831681851680830382111561288157612881612946565b6000826128c857634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156128e7576128e7612946565b500290565b60006001600160801b038381169083168181101561290c5761290c612946565b039392505050565b60008282101561292657612926612946565b500390565b600065ffffffffffff8381169083168181101561290c5761290c5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c4457600080fd5b8015158114610c4457600080fdfea26469706673582212203555fa44648c8d2c93eac00011d5a20aec139b0b0a84b289ebc2c385e77285e764736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101cf5760003560e01c80637c74f1af11610104578063b23b329f116100a2578063e860930a11610071578063e860930a1461043e578063f4b9fa7514610471578063fc0c546a14610484578063fc7d01481461049757600080fd5b8063b23b329f146103fa578063b243fb011461040d578063c0c53b8b14610420578063dd01590a1461043357600080fd5b806393e45737116100de57806393e457371461035957806396c95c1a1461036c5780639e1a4d191461038c578063a87430ba146103a657600080fd5b80637c74f1af146103025780638102329214610315578063865f12e81461032857600080fd5b80634641257d11610171578063538677741161014b57806353867774146102b6578063635e0ba6146102c9578063731baf63146102dc57806378ce3d89146102ef57600080fd5b80634641257d146102745780634689e8d21461027c57806351f6cf2f1461028f57600080fd5b80633620151b116101ad5780633620151b1461022c57806337f2225e1461023f578063393a37dc146102525780633a6901a21461026557600080fd5b80631eddd5ca146101d45780632185c5a8146101e95780632aabff1514610219575b600080fd5b6101e76101e2366004612626565b6104aa565b005b6101fc6101f73660046122c4565b61064e565b6040516001600160801b0390911681526020015b60405180910390f35b6101e76102273660046123e1565b6107d9565b6003546101fc906001600160801b031681565b6101fc61024d3660046122c4565b610822565b6101e7610260366004612626565b610876565b6101fc670de0b6b3a764000081565b6101e76109eb565b6101e761028a366004612331565b610b19565b6102a261029d3660046123b5565b610baa565b6040516102109897969594939291906127d2565b6101e76102c4366004612456565b610c39565b6101fc6102d736600461255a565b610c47565b6101fc6102ea36600461255a565b610c6b565b6101e76102fd3660046124b0565b610d27565b6101e76103103660046122c4565b6111c7565b6101fc6103233660046122e1565b611298565b600054610341906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610210565b6101fc6103673660046122c4565b6113dd565b61037f61037a3660046122c4565b61153d565b60405161021091906126fe565b6003546101fc90600160801b90046001600160801b031681565b6103da6103b43660046122c4565b6004602052600090815260409020546001600160801b0380821691600160801b90041682565b604080516001600160801b03938416815292909116602083015201610210565b6101e76104083660046123e1565b6107e1565b6101e761041b366004612641565b611660565b6101e761042e36600461236a565b6117a2565b6101fc6303c2670081565b61046161044c3660046122c4565b60066020526000908152604090205460ff1681565b6040519015158152602001610210565b600254610341906001600160a01b031681565b600154610341906001600160a01b031681565b6101e76104a53660046123b5565b61196e565b3360008181526004602081905260409182902060015492516323b872dd60e01b8152918201939093523060248201526001600160801b03841660448201526001600160a01b03909116906323b872dd90606401602060405180830381600087803b15801561051757600080fd5b505af115801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190612493565b506105586109eb565b8054829082906000906105759084906001600160801b031661285f565b82546101009290920a6001600160801b0381810219909316918316021790915582546105a2925016611c4e565b81546001600160801b03908116600160801b928216830217835560038054859391926010926105d69286929190041661285f565b92506101000a8154816001600160801b0302191690836001600160801b03160217905550336001600160a01b03167f603ec8111e4b299ce77433420e77ede7dff7aaf20a360583ed003ac868e59afe8360405161064291906001600160801b0391909116815260200190565b60405180910390a25050565b6001600160a01b0381166000908152600460209081526040808320546005835281842080548351818602810186019094528084526001600160801b039092169385939290849084015b8282101561077757600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b909204169081111561073f5761073f61295c565b60018111156107505761075061295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101610697565b50505050905060005b81518110156107d057600082828151811061079d5761079d612972565b60200260200101519050806020015181600001516107bb91906128ec565b6107c5908561285f565b935050600101610780565b50909392505050565b6107e16109eb565b61081e33838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250611c7f92505050565b5050565b6001600160a01b03811660009081526004602090815260408083208151808301909252546001600160801b03808216808452600160801b90920416928201839052909161086f9190611eb4565b9392505050565b33600090815260046020526040902061088d6109eb565b8054829082906000906108aa9084906001600160801b03166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915582546108d7925016611c4e565b81546001600160801b03908116600160801b9282168302178355600380548593919260109261090b928692919004166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460405163a9059cbb60e01b815233600482015291851660248301526001600160a01b0316915063a9059cbb90604401602060405180830381600087803b15801561097757600080fd5b505af115801561098b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109af9190612493565b506040516001600160801b038316815233907fee66b9189612f29967ec6ab5c02a4015623d4b820313b0411ad1ce6c4c0d5c2a90602001610642565b3360009081526004602052604081208054909190610a11906001600160801b0316611c4e565b8254909150600090610a3390600160801b90046001600160801b0316836128ec565b83546001600160801b03908116600160801b8583160217855560025460405163a9059cbb60e01b815233600482015291831660248301529192506001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610a9c57600080fd5b505af1158015610ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad49190612493565b506040516001600160801b038216815233907ff5c4762b09bad9ee274417cb38a318d436e5840ab30be2c2900f8f0e69b317fc906020015b60405180910390a2505050565b6000546201000090046001600160a01b03163314610b525760405162461bcd60e51b8152600401610b49906127a1565b60405180910390fd5b6001600160a01b038216600081815260066020908152604091829020805460ff191685151590811790915591519182527f37d059510662ed4f7c846b2b307b12cae9efc251486cb247fba0b9d7021e5b3f9101610642565b60056020528160005260406000208181548110610bc657600080fd5b6000918252602090912060029091020180546001909101546001600160801b038083169450600160801b928390048116935081169165ffffffffffff908204811691600160b01b81049091169060ff600160e01b8204811691600160e81b81049091169061ffff600160f01b9091041688565b610c44334283611ec0565b50565b60008260200151610c588484610c6b565b610c6291906128ec565b90505b92915050565b600082608001518360600151610c81919061288a565b65ffffffffffff168265ffffffffffff1610610c9f57508151610c65565b826060015165ffffffffffff168265ffffffffffff161080610cd6575060018360c001516001811115610cd457610cd461295c565b145b15610ce357506000610c65565b826080015165ffffffffffff16836060015183610d00919061292b565b8451610d1d9165ffffffffffff16906001600160801b03166128cd565b610c6291906128ab565b806001600160a01b038116331480610d4f57506000546201000090046001600160a01b031633145b80610d6957503360009081526006602052604090205460ff165b610d9f5760405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606401610b49565b6000836040015165ffffffffffff16118015610dd457506303c267006001600160801b0316836040015165ffffffffffff1611155b610e155760405162461bcd60e51b815260206004820152601260248201527124a721a7a92922a1aa2fa22aa920aa24a7a760711b6044820152606401610b49565b8251670de0b6b3a76400006001600160801b039091161015610e6c5760405162461bcd60e51b815260206004820152601060248201526f125390d3d4949150d517d05353d5539560821b6044820152606401610b49565b6001600160a01b038216610eae5760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610b49565b82516001546040516323b872dd60e01b81523360048201523060248201526001600160801b03831660448201526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015610f0a57600080fd5b505af1158015610f1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f429190612493565b5060004290506000604051806101000160405280846001600160801b0316815260200160006001600160801b03168152602001610f7e85611c4e565b6001600160801b031681526020018365ffffffffffff16886020015165ffffffffffff161015610fae5783610fb4565b87602001515b65ffffffffffff168152602001876040015165ffffffffffff16815260200187606001511515815260200187608001516001811115610ff557610ff561295c565b81526000602090910152600380549192508491601090611026908490600160801b90046001600160801b031661285f565b82546001600160801b039182166101009390930a9283029282021916919091179091556001600160a01b0387166000908152600560209081526040808320805460018181018355918552938390208751938801518616600160801b90810294871694909417600290950201938455908601518382018054606089015160808a015160a08b01511515600160e01b0260ff60e01b1965ffffffffffff928316600160b01b021666ffffffffffffff60b01b19929093169097026001600160b01b031990931694909816939093171795909516179190911780845560c086015186955092939160ff60e81b1990911690600160e81b90849081111561112b5761112b61295c565b021790555060e091909101516001918201805461ffff909216600160f01b026001600160f01b039092169190911790556001600160a01b03861660009081526005602052604090205461117e9190612914565b856001600160a01b03167fd858b6b4541385008baaa764f65f7ca9b7e0cdcf25fa214b9c3b1c8de97f3faa836040516111b791906127c3565b60405180910390a3505050505050565b6000546201000090046001600160a01b031633146111f75760405162461bcd60e51b8152600401610b49906127a1565b6001600160a01b0381166112395760405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606401610b49565b6000805462010000600160b01b031916620100006001600160a01b038416908102919091179091556040519081527f82ed90f787d49d0a2409d828dce36f3138f9c04e46a59446f7564352cc9dd526906020015b60405180910390a150565b60008060005b83518110156113d5576001600160a01b038516600090815260056020526040902084516113c191908690849081106112d8576112d8612972565b6020026020010151815481106112f0576112f0612972565b60009182526020918290206040805161010081018252600290930290910180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b90920416908111156113915761139161295c565b60018111156113a2576113a261295c565b815260019190910154600160f01b900461ffff166020909101526121a8565b6113cb908361285f565b915060010161129e565b509392505050565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835284938493929190849084015b828210156114f557600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b90920416908111156114bd576114bd61295c565b60018111156114ce576114ce61295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101611415565b50505050905060005b81518110156107d05761152982828151811061151c5761151c612972565b60200260200101516121a8565b611533908461285f565b92506001016114fe565b6001600160a01b0381166000908152600560209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561165557600084815260209081902060408051610100810182526002860290920180546001600160801b038082168552600160801b918290048116958501959095526001808301549586169385019390935265ffffffffffff90850481166060850152600160b01b850416608084015260ff600160e01b85048116151560a08501529293909260c0850192600160e81b909204169081111561161d5761161d61295c565b600181111561162e5761162e61295c565b8152600191820154600160f01b900461ffff16602091820152918352929092019101611575565b505050509050919050565b6002546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd90606401602060405180830381600087803b1580156116b257600080fd5b505af11580156116c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ea9190612493565b50600354600160801b90046001600160801b03161561177257600354600160801b90046001600160801b031661172882670de0b6b3a76400006128cd565b61173291906128ab565b6003805460009061174d9084906001600160801b031661285f565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6040518181527f3d3a5dc6f49d04618f423dcbc7425d8eb9449f43a3f35243a05d11f5f6a78dfe9060200161128d565b600054610100900460ff16158080156117c25750600054600160ff909116105b806117dc5750303b1580156117dc575060005460ff166001145b61183f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610b49565b6000805460ff191660011790558015611862576000805461ff0019166101001790555b6001600160a01b0384161580159061188257506001600160a01b03831615155b801561189657506001600160a01b03821615155b6118d15760405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f504152414d5360a01b6044820152606401610b49565b600080546001600160a01b03808716620100000262010000600160b01b031990921691909117909155600180548583166001600160a01b03199182161790915560028054928516929091169190911790558015611968576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6000546201000090046001600160a01b0316331461199e5760405162461bcd60e51b8152600401610b49906127a1565b6001600160a01b03821660009081526005602052604081208054839081106119c8576119c8612972565b9060005260206000209060020201905080600101601c9054906101000a900460ff16611a265760405162461bcd60e51b815260206004820152600d60248201526c4e4f545f5245564f4341424c4560981b6044820152606401610b49565b600042905060608381600081518110611a4157611a41612972565b602002602001018181525050611a58858383611ec0565b8254600090611a79906001600160801b03600160801b8204811691166128ec565b84546001600160801b031981166001600160801b03600160801b928390041617865560018601805465ffffffffffff60b01b19169081905591925065ffffffffffff8581169190920490911611611ad05782611ae5565b6001840154600160801b900465ffffffffffff165b60018501805465ffffffffffff92909216600160801b0265ffffffffffff60801b199092169190911790558354611b24906001600160801b0316611c4e565b6001850180546001600160801b0319166001600160801b03928316179055600380548392601091611b5e918591600160801b9004166128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460005460405163a9059cbb60e01b8152620100009091046001600160a01b03908116600483015292851660248201529116915063a9059cbb90604401602060405180830381600087803b158015611bd757600080fd5b505af1158015611beb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0f9190612493565b5060405185906001600160a01b038816907fec3458853f0bb76e34bb0ac49646241e29b9d541e9b111c74803383b1878f4db90600090a3505050505050565b600354600090670de0b6b3a764000090611c75906001600160801b039081169085166128cd565b610c6591906128ab565b6001600160a01b038216611cc25760405162461bcd60e51b815260206004820152600a602482015269555345525f454d50545960b01b6044820152606401610b49565b6000815111611cff5760405162461bcd60e51b81526020600482015260096024820152684944535f454d50545960b81b6044820152606401610b49565b6000805b8251811015611de0576001600160a01b03841660009081526005602052604081208451859084908110611d3857611d38612972565b602002602001015181548110611d5057611d50612972565b6000918252602082206002909102018054909250611d8990611d84906001600160801b03600160801b8204811691166128ec565b611c4e565b6001830154909150600090611da7906001600160801b0316836128ec565b9050611db3818661285f565b600193840180546001600160801b0319166001600160801b03949094169390931790925550925001611d03565b5060025460405163a9059cbb60e01b81526001600160a01b0385811660048301526001600160801b03841660248301529091169063a9059cbb90604401602060405180830381600087803b158015611e3757600080fd5b505af1158015611e4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e6f9190612493565b506040516001600160801b03821681526001600160a01b038416907f572be9934ed68fdab8bb0ce42f16ca23368a9081261ff0757dc7d17923fc25d190602001610b0c565b600081610c5884611c4e565b6000611ecc8483611c7f565b60005b8251811015612092576001600160a01b03851660009081526005602052604081208451859084908110611f0457611f04612972565b602002602001015181548110611f1c57611f1c612972565b600091825260208083206040805161010081018252600290940290910180546001600160801b038082168652600160801b918290048116948601949094526001808301549485169386019390935265ffffffffffff90840481166060860152600160b01b840416608085015260ff600160e01b84048116151560a0860152909550611ff59392869260c0850192600160e81b90920490911690811115611fc457611fc461295c565b6001811115611fd557611fd561295c565b815260019190910154600160f01b900461ffff1660209091015287610c47565b82549091508190839060109061201c908490600160801b90046001600160801b031661285f565b82546101009290920a6001600160801b0381810219909316918316021790915583546120579250611d8491600160801b8204811691166128ec565b6001830180546001600160801b0319166001600160801b0392909216919091179055612083818561285f565b93508260010192505050611ecf565b5080600360108282829054906101000a90046001600160801b03166120b791906128ec565b82546101009290920a6001600160801b0381810219909316918316021790915560015460405163a9059cbb60e01b81526001600160a01b03888116600483015292851660248201529116915063a9059cbb90604401602060405180830381600087803b15801561212657600080fd5b505af115801561213a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061215e9190612493565b50836001600160a01b03167f1b11859773b8218821d15e67ec2127a3cdc452e22e610e0a45e1085b5bb9955b838360405161219a92919061274d565b60405180910390a250505050565b600081604001516121c683602001518460000151611d8491906128ec565b610c6591906128ec565b600082601f8301126121e157600080fd5b8135602067ffffffffffffffff808311156121fe576121fe612988565b8260051b604051601f19603f8301168101818110848211171561222357612223612988565b6040528481528381019250868401828801850189101561224257600080fd5b600092505b85831015612265578035845292840192600192909201918401612247565b50979650505050505050565b80356002811061228057600080fd5b919050565b80356001600160801b038116811461228057600080fd5b803561ffff8116811461228057600080fd5b803565ffffffffffff8116811461228057600080fd5b6000602082840312156122d657600080fd5b813561086f8161299e565b600080604083850312156122f457600080fd5b82356122ff8161299e565b9150602083013567ffffffffffffffff81111561231b57600080fd5b612327858286016121d0565b9150509250929050565b6000806040838503121561234457600080fd5b823561234f8161299e565b9150602083013561235f816129b3565b809150509250929050565b60008060006060848603121561237f57600080fd5b833561238a8161299e565b9250602084013561239a8161299e565b915060408401356123aa8161299e565b809150509250925092565b600080604083850312156123c857600080fd5b82356123d38161299e565b946020939093013593505050565b600080602083850312156123f457600080fd5b823567ffffffffffffffff8082111561240c57600080fd5b818501915085601f83011261242057600080fd5b81358181111561242f57600080fd5b8660208260051b850101111561244457600080fd5b60209290920196919550909350505050565b60006020828403121561246857600080fd5b813567ffffffffffffffff81111561247f57600080fd5b61248b848285016121d0565b949350505050565b6000602082840312156124a557600080fd5b815161086f816129b3565b60008082840360c08112156124c457600080fd5b60a08112156124d257600080fd5b5060405160a0810181811067ffffffffffffffff821117156124f6576124f6612988565b60405261250284612285565b8152612510602085016122ae565b6020820152612521604085016122ae565b60408201526060840135612534816129b3565b606082015261254560808501612271565b6080820152915060a083013561235f8161299e565b60008082840361012081121561256f57600080fd5b6101008082121561257f57600080fd5b612587612835565b915061259285612285565b82526125a060208601612285565b60208301526125b160408601612285565b60408301526125c2606086016122ae565b60608301526125d3608086016122ae565b608083015260a08501356125e6816129b3565b60a08301526125f760c08601612271565b60c083015261260860e0860161229c565b60e083015281935061261b8186016122ae565b925050509250929050565b60006020828403121561263857600080fd5b610c6282612285565b60006020828403121561265357600080fd5b5035919050565b6002811061267857634e487b7160e01b600052602160045260246000fd5b9052565b6001600160801b0380825116835280602083015116602084015280604083015116604084015250606081015165ffffffffffff8082166060850152806080840151166080850152505060a0810151151560a083015260c08101516126e360c084018261265a565b5060e08101516126f960e084018261ffff169052565b505050565b6020808252825182820181905260009190848201906040850190845b818110156127415761272d83855161267c565b92840192610100929092019160010161271a565b50909695505050505050565b604080825283519082018190526000906020906060840190828701845b828110156127865781518452928401929084019060010161276a565b5050506001600160801b039490941692019190915250919050565b602080825260089082015267474f565f4f4e4c5960c01b604082015260600190565b6101008101610c65828461267c565b6001600160801b03898116825288811660208301528716604082015265ffffffffffff86811660608301528516608082015283151560a0820152610100810161281e60c083018561265a565b61ffff831660e08301529998505050505050505050565b604051610100810167ffffffffffffffff8111828210171561285957612859612988565b60405290565b60006001600160801b0380831681851680830382111561288157612881612946565b01949350505050565b600065ffffffffffff80831681851680830382111561288157612881612946565b6000826128c857634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156128e7576128e7612946565b500290565b60006001600160801b038381169083168181101561290c5761290c612946565b039392505050565b60008282101561292657612926612946565b500390565b600065ffffffffffff8381169083168181101561290c5761290c5b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610c4457600080fd5b8015158114610c4457600080fdfea26469706673582212203555fa44648c8d2c93eac00011d5a20aec139b0b0a84b289ebc2c385e77285e764736f6c63430008070033",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3282,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 3285,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 14162,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "govFund",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14165,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(TokenInterfaceV5)26260"
      },
      {
        "astId": 14168,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "dai",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(TokenInterfaceV5)26260"
      },
      {
        "astId": 14170,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "accDaiPerToken",
        "offset": 0,
        "slot": "3",
        "type": "t_uint128"
      },
      {
        "astId": 14172,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "tokenBalance",
        "offset": 16,
        "slot": "3",
        "type": "t_uint128"
      },
      {
        "astId": 14177,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "users",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(User)24770_storage)"
      },
      {
        "astId": 14183,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "unlockSchedules",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(UnlockSchedule)24788_storage)dyn_storage)"
      },
      {
        "astId": 14187,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "unlockManagers",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UnlockSchedule)24788_storage)dyn_storage": {
        "base": "t_struct(UnlockSchedule)24788_storage",
        "encoding": "dynamic_array",
        "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(TokenInterfaceV5)26260": {
        "encoding": "inplace",
        "label": "contract TokenInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_enum(UnlockType)24803": {
        "encoding": "inplace",
        "label": "enum GNSStakingInterfaceV6_4_1.UnlockType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(UnlockSchedule)24788_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.UnlockSchedule[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(UnlockSchedule)24788_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(User)24770_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)24770_storage"
      },
      "t_struct(UnlockSchedule)24788_storage": {
        "encoding": "inplace",
        "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
        "members": [
          {
            "astId": 24772,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "totalTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 24774,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "claimedTokens",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 24776,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "debtDai",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 24778,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "start",
            "offset": 16,
            "slot": "1",
            "type": "t_uint48"
          },
          {
            "astId": 24780,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "duration",
            "offset": 22,
            "slot": "1",
            "type": "t_uint48"
          },
          {
            "astId": 24782,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "revocable",
            "offset": 28,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 24785,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "unlockType",
            "offset": 29,
            "slot": "1",
            "type": "t_enum(UnlockType)24803"
          },
          {
            "astId": 24787,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "__placeholder",
            "offset": 30,
            "slot": "1",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(User)24770_storage": {
        "encoding": "inplace",
        "label": "struct GNSStakingInterfaceV6_4_1.User",
        "members": [
          {
            "astId": 24767,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "stakedTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 24769,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "debtDai",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint48": {
        "encoding": "inplace",
        "label": "uint48",
        "numberOfBytes": "6"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}