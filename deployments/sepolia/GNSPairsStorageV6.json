{
  "address": "0x4b36EEc0584506C8508b7Ad188d6fA34C369d3F5",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_currentOrderId",
          "type": "uint256"
        },
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "_storageT",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "FeeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "FeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "GroupAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "GroupUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "to",
          "type": "string"
        }
      ],
      "name": "PairAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "PairUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "_fee",
          "type": "tuple"
        }
      ],
      "name": "addFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "_group",
          "type": "tuple"
        }
      ],
      "name": "addGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "_pair",
          "type": "tuple"
        }
      ],
      "name": "addPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair[]",
          "name": "_pairs",
          "type": "tuple[]"
        }
      ],
      "name": "addPairs",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentOrderId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fees",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "openFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "closeFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "oracleFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftLimitOrderFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "referralFeeP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minLevPosDai",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_long",
          "type": "bool"
        }
      ],
      "name": "groupCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "groupMaxCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "groups",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "job",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "minLeverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxLeverage",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxCollateralP",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "groupsCollaterals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "groupsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "guaranteedSlEnabled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "isPairListed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairCloseFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairFeed",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "feed1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feed2",
              "type": "address"
            },
            {
              "internalType": "enum GNSPairsStorageV6.FeedCalculation",
              "name": "feedCalculation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxDeviationP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Feed",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairJob",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMaxLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMinLevPosDai",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairMinLeverage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairNftLimitOrderFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairOpenFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairOracleFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairReferralFeeP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        }
      ],
      "name": "pairSpreadP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "pairs",
      "outputs": [
        {
          "internalType": "string",
          "name": "from",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "to",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "feed1",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "feed2",
              "type": "address"
            },
            {
              "internalType": "enum GNSPairsStorageV6.FeedCalculation",
              "name": "feedCalculation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "maxDeviationP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Feed",
          "name": "feed",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "spreadP",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "groupIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "pairsBackend",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pairsCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "storageT",
      "outputs": [
        {
          "internalType": "contract StorageInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "openFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "closeFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "oracleFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nftLimitOrderFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "referralFeeP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minLevPosDai",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Fee",
          "name": "_fee",
          "type": "tuple"
        }
      ],
      "name": "updateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bytes32",
              "name": "job",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "minLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLeverage",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxCollateralP",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Group",
          "name": "_group",
          "type": "tuple"
        }
      ],
      "name": "updateGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_long",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_increase",
          "type": "bool"
        }
      ],
      "name": "updateGroupCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pairIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "from",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "to",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "feed1",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "feed2",
                  "type": "address"
                },
                {
                  "internalType": "enum GNSPairsStorageV6.FeedCalculation",
                  "name": "feedCalculation",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "maxDeviationP",
                  "type": "uint256"
                }
              ],
              "internalType": "struct GNSPairsStorageV6.Feed",
              "name": "feed",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "spreadP",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "groupIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeIndex",
              "type": "uint256"
            }
          ],
          "internalType": "struct GNSPairsStorageV6.Pair",
          "name": "_pair",
          "type": "tuple"
        }
      ],
      "name": "updatePair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x406d04ec7ea28b16d67543a578bd06754c3877206735ec7cdcdb476f6cca52b0",
  "receipt": {
    "to": null,
    "from": "0xd7D1dCba2c678ee7e049BD55176354E7C5bBdcCA",
    "contractAddress": "0x4b36EEc0584506C8508b7Ad188d6fA34C369d3F5",
    "transactionIndex": 21,
    "gasUsed": "2649090",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x68b305e2fa4c67c79735f8ef1c0aa15faef37452142a735f1ddb67c6945460f6",
    "transactionHash": "0x406d04ec7ea28b16d67543a578bd06754c3877206735ec7cdcdb476f6cca52b0",
    "logs": [],
    "blockNumber": 6071111,
    "cumulativeGasUsed": "6282357",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1,
    "0x688e6c96e1b49829111A45fDE13ED9cD6793e0d6"
  ],
  "numDeployments": 1,
  "solcInputHash": "cbafc231575a9f48842aa4603e9ae40d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_currentOrderId\",\"type\":\"uint256\"},{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"_storageT\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"FeeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"GroupAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"GroupUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"PairAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"PairUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"_fee\",\"type\":\"tuple\"}],\"name\":\"addFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"_group\",\"type\":\"tuple\"}],\"name\":\"addGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"_pair\",\"type\":\"tuple\"}],\"name\":\"addPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair[]\",\"name\":\"_pairs\",\"type\":\"tuple[]\"}],\"name\":\"addPairs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentOrderId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fees\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feesCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_long\",\"type\":\"bool\"}],\"name\":\"groupCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"groupMaxCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groups\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"groupsCollaterals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"groupsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"guaranteedSlEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"isPairListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairCloseFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairFeed\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairJob\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMaxLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMinLevPosDai\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairMinLeverage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairNftLimitOrderFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairOpenFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairOracleFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairReferralFeeP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"}],\"name\":\"pairSpreadP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pairs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"pairsBackend\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pairsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"storageT\",\"outputs\":[{\"internalType\":\"contract StorageInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"openFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"closeFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"oracleFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftLimitOrderFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"referralFeeP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minLevPosDai\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Fee\",\"name\":\"_fee\",\"type\":\"tuple\"}],\"name\":\"updateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"job\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"minLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLeverage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxCollateralP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Group\",\"name\":\"_group\",\"type\":\"tuple\"}],\"name\":\"updateGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_long\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_increase\",\"type\":\"bool\"}],\"name\":\"updateGroupCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pairIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"feed1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feed2\",\"type\":\"address\"},{\"internalType\":\"enum GNSPairsStorageV6.FeedCalculation\",\"name\":\"feedCalculation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"maxDeviationP\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Feed\",\"name\":\"feed\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"spreadP\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeIndex\",\"type\":\"uint256\"}],\"internalType\":\"struct GNSPairsStorageV6.Pair\",\"name\":\"_pair\",\"type\":\"tuple\"}],\"name\":\"updatePair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GNSPairStorageV6.sol\":\"GNSPairsStorageV6\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/contracts/GNSPairStorageV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"../interfaces/StorageInterfaceV5.sol\\\";\\n\\ncontract GNSPairsStorageV6 {\\n    // Params (constant)\\n    uint constant MIN_LEVERAGE = 2;\\n    uint constant MAX_LEVERAGE = 1000;\\n\\n    // Custom data types\\n    enum FeedCalculation {\\n        DEFAULT,\\n        INVERT,\\n        COMBINE\\n    }\\n    struct Feed {\\n        address feed1;\\n        address feed2;\\n        FeedCalculation feedCalculation;\\n        uint maxDeviationP;\\n    } // PRECISION (%)\\n\\n    struct Pair {\\n        string from;\\n        string to;\\n        Feed feed;\\n        uint spreadP; // PRECISION\\n        uint groupIndex;\\n        uint feeIndex;\\n    }\\n    struct Group {\\n        string name;\\n        bytes32 job;\\n        uint minLeverage;\\n        uint maxLeverage;\\n        uint maxCollateralP; // % (of DAI vault current balance)\\n    }\\n    struct Fee {\\n        string name;\\n        uint openFeeP; // PRECISION (% of leveraged pos)\\n        uint closeFeeP; // PRECISION (% of leveraged pos)\\n        uint oracleFeeP; // PRECISION (% of leveraged pos)\\n        uint nftLimitOrderFeeP; // PRECISION (% of leveraged pos)\\n        uint referralFeeP; // PRECISION (% of leveraged pos)\\n        uint minLevPosDai; // 1e18 (collateral x leverage, useful for min fee)\\n    }\\n\\n    // State\\n    uint public currentOrderId;\\n    uint public pairsCount;\\n    uint public groupsCount;\\n    uint public feesCount;\\n\\n    StorageInterfaceV5 public storageT;\\n\\n    mapping(uint => Pair) public pairs;\\n    mapping(uint => Group) public groups;\\n    mapping(uint => Fee) public fees;\\n\\n    mapping(string => mapping(string => bool)) public isPairListed;\\n    mapping(uint => uint[2]) public groupsCollaterals; // (long, short)\\n\\n    // Events\\n    event PairAdded(uint index, string from, string to);\\n    event PairUpdated(uint index);\\n\\n    event GroupAdded(uint index, string name);\\n    event GroupUpdated(uint index);\\n\\n    event FeeAdded(uint index, string name);\\n    event FeeUpdated(uint index);\\n\\n    constructor(uint _currentOrderId, StorageInterfaceV5 _storageT) {\\n        require(_currentOrderId > 0, \\\"ORDER_ID_0\\\");\\n        currentOrderId = _currentOrderId;\\n        storageT = _storageT;\\n    }\\n\\n    // Modifiers\\n    modifier onlyGov() {\\n        require(msg.sender == storageT.gov(), \\\"GOV_ONLY\\\");\\n        _;\\n    }\\n\\n    modifier groupListed(uint _groupIndex) {\\n        require(groups[_groupIndex].minLeverage > 0, \\\"GROUP_NOT_LISTED\\\");\\n        _;\\n    }\\n    modifier feeListed(uint _feeIndex) {\\n        require(fees[_feeIndex].openFeeP > 0, \\\"FEE_NOT_LISTED\\\");\\n        _;\\n    }\\n\\n    modifier feedOk(Feed calldata _feed) {\\n        require(\\n            _feed.maxDeviationP > 0 && _feed.feed1 != address(0),\\n            \\\"WRONG_FEED\\\"\\n        );\\n        require(\\n            _feed.feedCalculation != FeedCalculation.COMBINE ||\\n                _feed.feed2 != address(0),\\n            \\\"FEED_2_MISSING\\\"\\n        );\\n        _;\\n    }\\n    modifier groupOk(Group calldata _group) {\\n        require(_group.job != bytes32(0), \\\"JOB_EMPTY\\\");\\n        require(\\n            _group.minLeverage >= MIN_LEVERAGE &&\\n                _group.maxLeverage <= MAX_LEVERAGE &&\\n                _group.minLeverage < _group.maxLeverage,\\n            \\\"WRONG_LEVERAGES\\\"\\n        );\\n        _;\\n    }\\n    modifier feeOk(Fee calldata _fee) {\\n        require(\\n            _fee.openFeeP > 0 &&\\n                _fee.closeFeeP > 0 &&\\n                _fee.oracleFeeP > 0 &&\\n                _fee.nftLimitOrderFeeP > 0 &&\\n                _fee.referralFeeP > 0 &&\\n                _fee.minLevPosDai > 0,\\n            \\\"WRONG_FEES\\\"\\n        );\\n        _;\\n    }\\n\\n    // Manage pairs\\n    function addPair(\\n        Pair calldata _pair\\n    )\\n        public\\n        onlyGov\\n        feedOk(_pair.feed)\\n        groupListed(_pair.groupIndex)\\n        feeListed(_pair.feeIndex)\\n    {\\n        require(!isPairListed[_pair.from][_pair.to], \\\"PAIR_ALREADY_LISTED\\\");\\n\\n        pairs[pairsCount] = _pair;\\n        isPairListed[_pair.from][_pair.to] = true;\\n\\n        emit PairAdded(pairsCount++, _pair.from, _pair.to);\\n    }\\n\\n    function addPairs(Pair[] calldata _pairs) external {\\n        for (uint i = 0; i < _pairs.length; i++) {\\n            addPair(_pairs[i]);\\n        }\\n    }\\n\\n    function updatePair(\\n        uint _pairIndex,\\n        Pair calldata _pair\\n    ) external onlyGov feedOk(_pair.feed) feeListed(_pair.feeIndex) {\\n        Pair storage p = pairs[_pairIndex];\\n        require(isPairListed[p.from][p.to], \\\"PAIR_NOT_LISTED\\\");\\n\\n        p.feed = _pair.feed;\\n        p.spreadP = _pair.spreadP;\\n        p.feeIndex = _pair.feeIndex;\\n\\n        emit PairUpdated(_pairIndex);\\n    }\\n\\n    // Manage groups\\n    function addGroup(Group calldata _group) external onlyGov groupOk(_group) {\\n        groups[groupsCount] = _group;\\n        emit GroupAdded(groupsCount++, _group.name);\\n    }\\n\\n    function updateGroup(\\n        uint _id,\\n        Group calldata _group\\n    ) external onlyGov groupListed(_id) groupOk(_group) {\\n        groups[_id] = _group;\\n        emit GroupUpdated(_id);\\n    }\\n\\n    // Manage fees\\n    function addFee(Fee calldata _fee) external onlyGov feeOk(_fee) {\\n        fees[feesCount] = _fee;\\n        emit FeeAdded(feesCount++, _fee.name);\\n    }\\n\\n    function updateFee(\\n        uint _id,\\n        Fee calldata _fee\\n    ) external onlyGov feeListed(_id) feeOk(_fee) {\\n        fees[_id] = _fee;\\n        emit FeeUpdated(_id);\\n    }\\n\\n    // Update collateral open exposure for a group (callbacks)\\n    function updateGroupCollateral(\\n        uint _pairIndex,\\n        uint _amount,\\n        bool _long,\\n        bool _increase\\n    ) external {\\n        require(msg.sender == storageT.callbacks(), \\\"CALLBACKS_ONLY\\\");\\n\\n        uint[2] storage collateralOpen = groupsCollaterals[\\n            pairs[_pairIndex].groupIndex\\n        ];\\n        uint index = _long ? 0 : 1;\\n\\n        if (_increase) {\\n            collateralOpen[index] += _amount;\\n        } else {\\n            collateralOpen[index] = collateralOpen[index] > _amount\\n                ? collateralOpen[index] - _amount\\n                : 0;\\n        }\\n    }\\n\\n    // Fetch relevant info for order (aggregator)\\n    function pairJob(\\n        uint _pairIndex\\n    ) external returns (string memory, string memory, bytes32, uint) {\\n        require(\\n            msg.sender == address(storageT.priceAggregator()),\\n            \\\"AGGREGATOR_ONLY\\\"\\n        );\\n\\n        Pair memory p = pairs[_pairIndex];\\n        require(isPairListed[p.from][p.to], \\\"PAIR_NOT_LISTED\\\");\\n\\n        return (p.from, p.to, groups[p.groupIndex].job, currentOrderId++);\\n    }\\n\\n    // Getters (pairs & groups)\\n    function pairFeed(uint _pairIndex) external view returns (Feed memory) {\\n        return pairs[_pairIndex].feed;\\n    }\\n\\n    function pairSpreadP(uint _pairIndex) external view returns (uint) {\\n        return pairs[_pairIndex].spreadP;\\n    }\\n\\n    function pairMinLeverage(uint _pairIndex) external view returns (uint) {\\n        return groups[pairs[_pairIndex].groupIndex].minLeverage;\\n    }\\n\\n    function pairMaxLeverage(uint _pairIndex) external view returns (uint) {\\n        return groups[pairs[_pairIndex].groupIndex].maxLeverage;\\n    }\\n\\n    function groupMaxCollateral(uint _pairIndex) external view returns (uint) {\\n        return\\n            (groups[pairs[_pairIndex].groupIndex].maxCollateralP *\\n                storageT.vault().currentBalanceDai()) / 100;\\n    }\\n\\n    function groupCollateral(\\n        uint _pairIndex,\\n        bool _long\\n    ) external view returns (uint) {\\n        return groupsCollaterals[pairs[_pairIndex].groupIndex][_long ? 0 : 1];\\n    }\\n\\n    function guaranteedSlEnabled(uint _pairIndex) external view returns (bool) {\\n        return pairs[_pairIndex].groupIndex == 0; // crypto only\\n    }\\n\\n    // Getters (fees)\\n    function pairOpenFeeP(uint _pairIndex) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].openFeeP;\\n    }\\n\\n    function pairCloseFeeP(uint _pairIndex) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].closeFeeP;\\n    }\\n\\n    function pairOracleFeeP(uint _pairIndex) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].oracleFeeP;\\n    }\\n\\n    function pairNftLimitOrderFeeP(\\n        uint _pairIndex\\n    ) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].nftLimitOrderFeeP;\\n    }\\n\\n    function pairReferralFeeP(uint _pairIndex) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].referralFeeP;\\n    }\\n\\n    function pairMinLevPosDai(uint _pairIndex) external view returns (uint) {\\n        return fees[pairs[_pairIndex].feeIndex].minLevPosDai;\\n    }\\n\\n    // Getters (backend)\\n    function pairsBackend(\\n        uint _index\\n    ) external view returns (Pair memory, Group memory, Fee memory) {\\n        Pair memory p = pairs[_index];\\n        return (p, groups[p.groupIndex], fees[p.feeIndex]);\\n    }\\n}\\n\",\"keccak256\":\"0x63161d189edda356afcb3c7c004fa5fd5109cbe0eb9b88f0c069ad6b716cc67d\",\"license\":\"MIT\"},\"contracts/interfaces/ChainlinkFeedInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface ChainlinkFeedInterfaceV5 {\\n    function latestRoundData()\\n        external\\n        view\\n        returns (uint80, int, uint, uint, uint80);\\n}\\n\",\"keccak256\":\"0xd13756cf435ea7e26ec8dbceed69f93553b142029e3c1753367769dde6d9cfd7\",\"license\":\"MIT\"},\"contracts/interfaces/IGToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\npragma abicoder v2;\\n\\ninterface IGToken {\\n    function manager() external view returns (address);\\n\\n    function admin() external view returns (address);\\n\\n    function currentEpoch() external view returns (uint);\\n\\n    function currentEpochStart() external view returns (uint);\\n\\n    function currentEpochPositiveOpenPnl() external view returns (uint);\\n\\n    function updateAccPnlPerTokenUsed(\\n        uint prevPositiveOpenPnl,\\n        uint newPositiveOpenPnl\\n    ) external returns (uint);\\n\\n    struct LockedDeposit {\\n        address owner;\\n        uint shares; // 1e18\\n        uint assetsDeposited; // 1e18\\n        uint assetsDiscount; // 1e18\\n        uint atTimestamp; // timestamp\\n        uint lockDuration; // timestamp\\n    }\\n\\n    function getLockedDeposit(\\n        uint depositId\\n    ) external view returns (LockedDeposit memory);\\n\\n    function sendAssets(uint assets, address receiver) external;\\n\\n    function receiveAssets(uint assets, address user) external;\\n\\n    function distributeReward(uint assets) external;\\n\\n    function currentBalanceDai() external view returns (uint);\\n\\n    function tvl() external view returns (uint);\\n\\n    function marketCap() external view returns (uint);\\n\\n    function getPendingAccBlockWeightedMarketCap(\\n        uint currentBlock\\n    ) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x1fd411df874a31e89b8a26375446f6bf9d14279a1e02ee1e6541f0f2a1bec9da\",\"license\":\"MIT\"},\"contracts/interfaces/NftInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface NftInterfaceV5 {\\n    function balanceOf(address) external view returns (uint);\\n\\n    function ownerOf(uint) external view returns (address);\\n\\n    function transferFrom(address, address, uint) external;\\n\\n    function tokenOfOwnerByIndex(address, uint) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x17570efd5c6708b7adc07cd3fdb11a5983bc5db9f7b3d0bf0f50b34f95ea6358\",\"license\":\"MIT\"},\"contracts/interfaces/PairsStorageInterfaceV6.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface PairsStorageInterfaceV6 {\\n    enum FeedCalculation {\\n        DEFAULT,\\n        INVERT,\\n        COMBINE\\n    } // FEED 1, 1 / (FEED 1), (FEED 1)/(FEED 2)\\n    struct Feed {\\n        address feed1;\\n        address feed2;\\n        FeedCalculation feedCalculation;\\n        uint maxDeviationP;\\n    } // PRECISION (%)\\n\\n    function incrementCurrentOrderId() external returns (uint);\\n\\n    function updateGroupCollateral(uint, uint, bool, bool) external;\\n\\n    function pairJob(\\n        uint\\n    ) external returns (string memory, string memory, bytes32, uint);\\n\\n    function pairFeed(uint) external view returns (Feed memory);\\n\\n    function pairSpreadP(uint) external view returns (uint);\\n\\n    function pairMinLeverage(uint) external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n\\n    function groupMaxCollateral(uint) external view returns (uint);\\n\\n    function groupCollateral(uint, bool) external view returns (uint);\\n\\n    function guaranteedSlEnabled(uint) external view returns (bool);\\n\\n    function pairOpenFeeP(uint) external view returns (uint);\\n\\n    function pairCloseFeeP(uint) external view returns (uint);\\n\\n    function pairOracleFeeP(uint) external view returns (uint);\\n\\n    function pairNftLimitOrderFeeP(uint) external view returns (uint);\\n\\n    function pairReferralFeeP(uint) external view returns (uint);\\n\\n    function pairMinLevPosDai(uint) external view returns (uint);\\n\\n    function pairsCount() external view returns (uint);\\n}\\n\",\"keccak256\":\"0xd274cbab16c2f7a08cd33c1c59921fae308aef6dea851621c5f1540e8c7733f6\",\"license\":\"MIT\"},\"contracts/interfaces/StorageInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"./TokenInterfaceV5.sol\\\";\\nimport \\\"./NftInterfaceV5.sol\\\";\\nimport \\\"./IGToken.sol\\\";\\nimport \\\"./PairsStorageInterfaceV6.sol\\\";\\nimport \\\"./ChainlinkFeedInterfaceV5.sol\\\";\\n\\npragma solidity ^0.8.7;\\npragma abicoder v2;\\n\\ninterface PoolInterfaceV5 {\\n    function increaseAccTokensPerLp(uint) external;\\n}\\n\\ninterface PausableInterfaceV5 {\\n    function isPaused() external view returns (bool);\\n}\\n\\ninterface StorageInterfaceV5 {\\n    enum LimitOrder {\\n        TP,\\n        SL,\\n        LIQ,\\n        OPEN\\n    }\\n    struct Trade {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        // uint initialPosToken; // 1e18\\n        uint positionSizeDai; // 1e18\\n        uint openPrice; // PRECISION\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION\\n        uint sl; // PRECISION\\n    }\\n    struct TradeInfo {\\n        uint tokenId;\\n        // uint tokenPriceDai; // PRECISION\\n        uint openInterestDai; // 1e18\\n        uint tpLastUpdated;\\n        uint slLastUpdated;\\n        bool beingMarketClosed;\\n    }\\n    struct OpenLimitOrder {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        uint positionSize; // 1e18 (DAI or GFARM2)\\n        uint spreadReductionP;\\n        bool buy;\\n        uint leverage;\\n        uint tp; // PRECISION (%)\\n        uint sl; // PRECISION (%)\\n        uint minPrice; // PRECISION\\n        uint maxPrice; // PRECISION\\n        uint block;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingMarketOrder {\\n        Trade trade;\\n        uint block;\\n        uint wantedPrice; // PRECISION\\n        uint slippageP; // PRECISION (%)\\n        uint spreadReductionP;\\n        uint tokenId; // index in supportedTokens\\n    }\\n    struct PendingNftOrder {\\n        address nftHolder;\\n        uint nftId;\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        LimitOrder orderType;\\n    }\\n\\n    function PRECISION() external pure returns (uint);\\n\\n    function gov() external view returns (address);\\n\\n    function dev() external view returns (address);\\n\\n    function dai() external view returns (TokenInterfaceV5);\\n\\n    function token() external view returns (TokenInterfaceV5);\\n\\n    function linkErc677() external view returns (TokenInterfaceV5);\\n\\n    function priceAggregator() external view returns (AggregatorInterfaceV6_4);\\n\\n    function vault() external view returns (IGToken);\\n\\n    function trading() external view returns (address);\\n\\n    function callbacks() external view returns (address);\\n\\n    function handleTokens(address, uint, bool) external;\\n\\n    function transferDai(address, address, uint) external;\\n\\n    function transferLinkToAggregator(address, uint, uint) external;\\n\\n    function unregisterTrade(address, uint, uint) external;\\n\\n    function unregisterPendingMarketOrder(uint, bool) external;\\n\\n    function unregisterOpenLimitOrder(address, uint, uint) external;\\n\\n    function hasOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (bool);\\n\\n    function storePendingMarketOrder(\\n        PendingMarketOrder memory,\\n        uint,\\n        bool\\n    ) external;\\n\\n    function openTrades(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (Trade memory);\\n\\n    function openTradesInfo(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (TradeInfo memory);\\n\\n    function updateSl(address, uint, uint, uint) external;\\n\\n    function updateTp(address, uint, uint, uint) external;\\n\\n    function getOpenLimitOrder(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (OpenLimitOrder memory);\\n\\n    function spreadReductionsP(uint) external view returns (uint);\\n\\n    function storeOpenLimitOrder(OpenLimitOrder memory) external;\\n\\n    function reqID_pendingMarketOrder(\\n        uint\\n    ) external view returns (PendingMarketOrder memory);\\n\\n    function storePendingNftOrder(PendingNftOrder memory, uint) external;\\n\\n    function updateOpenLimitOrder(OpenLimitOrder calldata) external;\\n\\n    function firstEmptyTradeIndex(address, uint) external view returns (uint);\\n\\n    function firstEmptyOpenLimitIndex(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function increaseNftRewards(uint, uint) external;\\n\\n    function nftSuccessTimelock() external view returns (uint);\\n\\n    function reqID_pendingNftOrder(\\n        uint\\n    ) external view returns (PendingNftOrder memory);\\n\\n    function updateTrade(Trade memory) external;\\n\\n    function nftLastSuccess(uint) external view returns (uint);\\n\\n    function unregisterPendingNftOrder(uint) external;\\n\\n    function handleDevGovFees(uint, uint, bool, bool) external returns (uint);\\n\\n    function distributeLpRewards(uint) external;\\n\\n    function storeTrade(Trade memory, TradeInfo memory) external;\\n\\n    function openLimitOrdersCount(address, uint) external view returns (uint);\\n\\n    function openTradesCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketOpenCount(address, uint) external view returns (uint);\\n\\n    function pendingMarketCloseCount(\\n        address,\\n        uint\\n    ) external view returns (uint);\\n\\n    function maxTradesPerPair() external view returns (uint);\\n\\n    function pendingOrderIdsCount(address) external view returns (uint);\\n\\n    function maxPendingMarketOrders() external view returns (uint);\\n\\n    function openInterestDai(uint, uint) external view returns (uint);\\n\\n    function getPendingOrderIds(address) external view returns (uint[] memory);\\n\\n    function nfts(uint) external view returns (NftInterfaceV5);\\n\\n    function fakeBlockNumber() external view returns (uint); // Testing\\n}\\n\\ninterface IStateCopyUtils {\\n    function getOpenLimitOrders()\\n        external\\n        view\\n        returns (StorageInterfaceV5.OpenLimitOrder[] memory);\\n\\n    function nftRewards() external view returns (NftRewardsInterfaceV6_3_1);\\n}\\n\\ninterface NftRewardsInterfaceV6_3_1 {\\n    struct TriggeredLimitId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        StorageInterfaceV5.LimitOrder order;\\n    }\\n    enum OpenLimitOrderType {\\n        LEGACY,\\n        REVERSAL,\\n        MOMENTUM\\n    }\\n\\n    function storeFirstToTrigger(\\n        TriggeredLimitId calldata,\\n        address,\\n        uint\\n    ) external;\\n\\n    function storeTriggerSameBlock(TriggeredLimitId calldata, address) external;\\n\\n    function unregisterTrigger(TriggeredLimitId calldata) external;\\n\\n    function distributeNftReward(\\n        TriggeredLimitId calldata,\\n        uint,\\n        uint\\n    ) external;\\n\\n    function openLimitOrderTypes(\\n        address,\\n        uint,\\n        uint\\n    ) external view returns (OpenLimitOrderType);\\n\\n    function setOpenLimitOrderType(\\n        address,\\n        uint,\\n        uint,\\n        OpenLimitOrderType\\n    ) external;\\n\\n    function triggered(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function timedOut(TriggeredLimitId calldata) external view returns (bool);\\n\\n    function botInUse(bytes32) external view returns (bool);\\n\\n    function getNftBotHashes(\\n        uint,\\n        address,\\n        uint,\\n        address,\\n        uint,\\n        uint\\n    ) external pure returns (bytes32, bytes32);\\n\\n    function setNftBotInUse(bytes32, bytes32) external;\\n\\n    function nftBotInUse(bytes32, bytes32) external view returns (bool);\\n\\n    function linkToTokenRewards(uint, uint) external view returns (uint);\\n}\\n\\ninterface AggregatorInterfaceV6_4 {\\n    enum OrderType {\\n        MARKET_OPEN,\\n        MARKET_CLOSE,\\n        LIMIT_OPEN,\\n        LIMIT_CLOSE\\n    }\\n\\n    function pairsStorage() external view returns (PairsStorageInterfaceV6);\\n\\n    function getPrice(uint, OrderType, uint, uint) external returns (uint);\\n\\n    // function tokenPriceDai() external returns (uint);\\n\\n    function linkFee(uint, uint) external view returns (uint);\\n\\n    function openFeeP(uint) external view returns (uint);\\n\\n    function linkPriceFeed() external view returns (ChainlinkFeedInterfaceV5);\\n\\n    function nodes(uint index) external view returns (address);\\n}\\n\\ninterface TradingCallbacksV6_4 {\\n    enum TradeType {\\n        MARKET,\\n        LIMIT\\n    }\\n    struct SimplifiedTradeId {\\n        address trader;\\n        uint pairIndex;\\n        uint index;\\n        TradeType tradeType;\\n    }\\n    struct LastUpdated {\\n        uint32 tp;\\n        uint32 sl;\\n        uint32 limit;\\n        uint32 created;\\n    }\\n    struct TradeData {\\n        uint40 maxSlippageP; // 1e10 (%)\\n        uint216 _placeholder; // for potential future data\\n    }\\n\\n    function tradeLastUpdated(\\n        address,\\n        uint,\\n        uint,\\n        TradeType\\n    ) external view returns (LastUpdated memory);\\n\\n    function setTradeLastUpdated(\\n        SimplifiedTradeId calldata,\\n        LastUpdated memory\\n    ) external;\\n\\n    function setTradeData(\\n        SimplifiedTradeId calldata,\\n        TradeData memory\\n    ) external;\\n\\n    function canExecuteTimeout() external view returns (uint);\\n\\n    function pairMaxLeverage(uint) external view returns (uint);\\n}\\n\",\"keccak256\":\"0x822f477e8cd542d4524b943f98576e915cae1efd6008fbe0834d7cc98f586e94\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface TokenInterfaceV5 {\\n    function burn(address, uint256) external;\\n\\n    function mint(address, uint256) external;\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function hasRole(bytes32, address) external view returns (bool);\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function allowance(address, address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc1ad2a4fa990051fb693928d91a6c3192cfd68604d12436e7459c4d9f96cccd5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608034620000bd57601f62002eec38819003918201601f19168301916001600160401b03831184841017620000c2578084926040948552833981010312620000bd5780516020909101516001600160a01b0381169190829003620000bd5780156200008b57600055600480546001600160a01b031916919091179055604051612e139081620000d98239f35b60405162461bcd60e51b815260206004820152600a60248201526904f524445525f49445f360b41b6044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081630cd8b022146127355750806315406fe5146126fc5780631628bfeb1461267757806316fff0741461264e5780631eaa005c1461260857806320f0fc5e1461248d57806324abd3fb1461245d578063281b693c1461241d578063302f81fc14612260578063472ff8bb1461202257806349dde63f14611d9a5780634acc79ed14611d13578063527b47c014611a0d57806359a992d0146119cd57806362614661146118a7578063658de48a146118895780637981aa831461161f5780638251135b146115df578063836a341a1461159f578063885e2750146115815780638c23f81c146112cd578063925931fc146112af5780639521753e146112475780639567dccf14610f7f57806396324bd414610f0d5780639848a68d14610ecd5780639c8dd2fa14610e8d578063a1d54e9b14610e5e578063b71ade2f14610900578063b81b2b71146108e2578063b91ac78814610844578063db7c3f9d146101cf5763f7acbabd1461018a57600080fd5b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600360406000200154604051908152f35b600080fd5b346101ca5760203660031901126101ca576001600160401b03600435116101ca573660236004350112156101ca576001600160401b03600480350135116101ca573660246004356004013560051b6004350101116101ca5760005b60043560040135811061023957005b60248160051b60043501013590610142196004353603018212156101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa80156108385761029f91600091610809575b506001600160a01b03163314612a82565b60c4826004350101351515806107e3575b6102b990612acd565b600360a48360043501013510156101ca57600260a483600435010135148015906107bd575b6102e790612b06565b61010482600435010135600052600660205261030c6002604060002001541515612b43565b6101248260043501013560005260076020526103316001604060002001541515612b82565b6020610344600435840160240180612bbf565b91908260405193849283378101600881520301902060ff61037e604492610378848760043501016024886004350101612bbf565b90612bf1565b54166107835760015460009081526005602052604090206103a6600435850160240180612bbf565b906001600160401b0382116106b6576103bf8354612935565b601f811161073f575b5090600091601f82116001146106d7579181926000926106cc575b50508160011b916000199060031b1c19161781555b61040c600435850180840190602401612bbf565b906001600160401b0382116106b6576104286001840154612935565b601f811161066f575b50600090601f83116001146105e55793602493836105d598946105cd94600080516020612dc7833981519152986000926105da575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b0361049a6004358701606401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b036104c76004358701608401612ab9565b82546001600160a81b03191691161760048035870160a481013560a01b60ff60a01b169290921790925560c48101359183019190915560e48101356005830155610104810135600683015561012481013560079092019190915561055f9060209061053490870180612bbf565b9190826040519384928337810160088152030190206103788386600435010187876004350101612bbf565b600160ff198254161790556105bf6105a46001549461057d86612c24565b6001556105906004358201880180612bbf565b979094826004350101916004350101612bbf565b91909260405196879687526060806020890152870191612c33565b918483036040860152612c33565b0390a1612c24565b61022a565b013590508a80610466565b6001840160005260206000209160005b601f19851681106106575750936001846105cd94600080516020612dc783398151915298946024986105d59c98601f1981161061063d575b505050811b01600182015561047e565b0135600019600384901b60f8161c191690558a808061062d565b909260206001819286860135815501940191016105f5565b600184016000526020600020601f840160051c8101602085106106af575b601f830160051c820181106106a3575050610431565b6000815560010161068d565b508061068d565b634e487b7160e01b600052604160045260246000fd5b0135905086806103e3565b836000526020600020906000935b601f1984168510610727576001945083601f1981161061070d575b505050811b0181556103f8565b0135600019600384901b60f8161c19169055868080610700565b818101358355602094850194600190930192016106e5565b836000526020600020601f840160051c81016020851061077c575b601f830160051c820181106107705750506103c8565b6000815560010161075a565b508061075a565b606490721410525497d053149150511657d31254d51151606a1b6040519162461bcd60e51b83526020600484015260136024840152820152fd5b506102e76001600160a01b036107d96004358501608401612ab9565b16151590506102de565b506102b96001600160a01b036107ff6004358501606401612ab9565b16151590506102b0565b61082b915060203d602011610831575b6108238183612802565b810190612a63565b8461028e565b503d610819565b6040513d6000823e3d90fd5b346101ca5760203660031901126101ca5760043560005260056020526108b560406000206108718161296f565b9061087e6001820161296f565b61088a60028301612a15565b9160058101546108ce6108c36007600685015494015494604051988998610120808b528a0190612910565b9088820360208a0152612910565b9460408701906128c4565b60c085015260e08401526101008301520390f35b346101ca5760003660031901126101ca576020600154604051908152f35b346101ca576003196020368201126101ca576001600160401b03600435116101ca5761012090600435360301126101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa80156108385761097891600091610e3f57506001600160a01b03163314612a82565b60a46004350135151580610e1b575b61099090612acd565b60036084600435013510156101ca5760026084600435013514801590610df7575b6109ba90612b06565b60e4600435013560005260066020526109dc6002604060002001541515612b43565b610104600435013560005260076020526109ff6001604060002001541515612b82565b60ff610a3d6020610a14600480350180612bbf565b919082604051938492833781016008815203019020610378602460043501600435600401612bbf565b5416610dbc576001546000908152600560205260409020610a62600480350180612bbf565b9091906001600160401b0381116106b657610a7d8254612935565b601f8111610d78575b50600092601f8211600114610d0f5792819293600092610d04575b50508160011b916000199060031b1c19161781555b610aca602460043501600435600401612bbf565b9091906001600160401b0381116106b657610ae86001830154612935565b601f8111610cbd575b50600092601f8211600114610c4e5792819293600092610c43575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b03610b3e600435604401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b03610b69600435606401612ab9565b82546001600160a81b03191691161760048035608481013560a01b60ff60a01b169290921790925560a48101358383015560c4810135600584015560e48101356006840155610104810135600790930192909255610bcf91602091610a14910180612bbf565b600160ff19825416179055600080516020612dc7833981519152610c3e600154610bf881612c24565b600155610c09600480350180612bbf565b92906105bf610c22602460043501600435600401612bbf565b9190926040519687968752606060208801526060870191612c33565b0390a1005b013590508380610b0c565b600183016000526020600020906000945b601f1984168610610ca557600194955083601f19811610610c8b575b505050811b016001820155610b24565b0135600019600384901b60f8161c19169055838080610c7b565b91602060018192858501358155019301950194610c5f565b600183016000526020600020601f830160051c810160208410610cfd575b601f830160051c82018110610cf1575050610af1565b60008155600101610cdb565b5080610cdb565b013590508380610aa1565b826000526020600020906000945b601f1984168610610d6057600194955083601f19811610610d46575b505050811b018155610ab6565b0135600019600384901b60f8161c19169055838080610d39565b91602060018192858501358155019301950194610d1d565b826000526020600020601f830160051c810160208410610db5575b601f830160051c82018110610da9575050610a86565b60008155600101610d93565b5080610d93565b60405162461bcd60e51b81526020600482015260136024820152721410525497d053149150511657d31254d51151606a1b6044820152606490fd5b506109ba6001600160a01b03610e11600435606401612ab9565b16151590506109b1565b506109906001600160a01b03610e35600435604401612ab9565b1615159050610987565b610e58915060203d602011610831576108238183612802565b8261028e565b346101ca5760203660031901126101ca5760043560005260056020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600460406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526006602052610f666040600020610f3a8161296f565b90600181015490600281015490600460038201549101549160405195869560a0875260a0870190612910565b9360208601526040850152606084015260808301520390f35b346101ca5760203660031901126101ca57600060a0604051610fa081612796565b6060815260606020820152610fb3612d41565b6040820152826060820152826080820152015260006080604051610fd6816127b1565b606081528260208201528260408201528260608201520152600060c0604051610ffe816127cc565b606081528260208201528260408201528260608201528260808201528260a08201520152600435600052600560205260406000206040519061103f82612796565b6110488161296f565b82526110566001820161296f565b602083015261106760028201612a15565b6040830152600581015460608301526007600682015491826080850152015460a0830152600052600660205260406000209060a0810151600052600760205260406000206004604051936110ba856127b1565b6110c38161296f565b8552600181015460208601526002810154604086015260038101546060860152015460808401526006604051916110f9836127cc565b6111028161296f565b835260018101546020840152600281015460408401526003810154606084015260048101546080840152600581015460a0840152015460c08201526040519283926060845260a081519161117d611167610120948560608a0152610180890190612910565b6020830151888203605f190160808a0152612910565b9261118f6040830151848901906128c4565b6060820151908701526080810151610140870152015161016085015283810360208501526080806111c9845160a0855260a0850190612910565b936020810151602085015260408101516040850152606081015160608501520151910152828103604084015260c08061120b845160e0855260e0850190612910565b936020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201519101520390f35b346101ca5760403660031901126101ca5760243580151581036101ca5761129960209160043560005260058352600660406000200154600052600983526040600020906000146112a757600090612770565b90546040519160031b1c8152f35b600190612770565b346101ca5760003660031901126101ca576020600054604051908152f35b346101ca57600319602036820181136101ca576001600160401b0391600435908382116101ca5760e0826004019183360301126101ca57600480546040516312d43a5160e01b8152916001600160a01b039186918491829085165afa80156108385761134492600091611564575b50163314612a82565b60248201359182151580611557575b8061154a575b8061153d575b80611530575b80611523575b61137490612d08565b6003928354600052600785526040600020956113908480612bbf565b9182116106b6576113a18854612935565b601f81116114dd575b50600090601f831160011461145c5761143b94610c3e969484600080516020612d878339815191529b9560069560c495600092611451575b50508160011b91600019908c1b1c19161785555b6001850155604481013560028501556064810135888501556084810135600485015560a48101356005850155013591015583549361143385612c24565b905580612bbf565b6040805195869586528501526040840191612c33565b013590508d806113e2565b601f1983169189600052886000209260005b8181106114c657509460018560069560c49561143b9a95600080516020612d878339815191529f99610c3e9d9b106114ae575b505050811b0185556113f6565b0135600019838e1b60f8161c191690558d80806114a1565b91938a60018192878701358155019501920161146e565b8860005287600020601f840160051c810191898510611519575b601f0160051c01905b81811061150d57506113aa565b60008155600101611500565b90915081906114f7565b5060c4810135151561136b565b5060a48101351515611365565b506084810135151561135f565b5060648101351515611359565b5060448101351515611353565b61157b9150863d8811610831576108238183612802565b8761133b565b346101ca5760003660031901126101ca576020600254604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600260406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600160406000200154604051908152f35b346101ca576003196040368201126101ca57602435906001600160401b0390600435908284116101ca5760a0846004019185360301126101ca57600480546040516312d43a5160e01b81526020959290916001600160a01b03918791849190829085165afa80156108385761169e9260009161186c5750163314612a82565b82600052600684526116b96002604060002001541515612b43565b60248501356116c9811515612c92565b60448601359160028310158061185c575b8061184f575b6116e990612cca565b846000526006865261170060406000209480612bbf565b9182116106b6576117118554612935565b601f8111611809575b50600090601f831160011461178d579282600080516020612da7833981519152999360049693608496600092611782575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155604051908152a1005b013590508b8061174b565b601f1983169186600052886000209260005b8181106117f2575093600496936084969360019383600080516020612da78339815191529e98106117d8575b505050811b018655611760565b0135600019600384901b60f8161c191690558b80806117cb565b91938a60018192878701358155019501920161179f565b8560005287600020601f840160051c810191898510611845575b601f0160051c01905b818110611839575061171a565b6000815560010161182c565b9091508190611823565b50606487013583106116e0565b506103e8606488013511156116da565b6118839150873d8911610831576108238183612802565b8861133b565b346101ca5760003660031901126101ca576020600354604051908152f35b346101ca576020806003193601126101ca57600435600052600581526006604060002001546000526006815260046040600020015460018060a01b0390600483838254166040519283809263fbfa77cf60e01b82525afa8015610838578491600091611995575b50600460405180958193630428d10160e11b8352165afa91821561083857600092611966575b5081810291818304149015171561195057606460405191048152f35b634e487b7160e01b600052601160045260246000fd5b9091508281813d831161198e575b61197e8183612802565b810103126101ca57519083611934565b503d611974565b82819392503d83116119c6575b6119ac8183612802565b810103126101ca575182811681036101ca5783908561190e565b503d6119a2565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600260406000200154604051908152f35b346101ca576003196040368201126101ca576001600160401b03602435116101ca5761012090602435360301126101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa801561083857611a8591600091610e3f57506001600160a01b03163314612a82565b60a46024350135151580611cef575b611a9d90612acd565b60036084602435013510156101ca5760026084602435013514801590611ccb575b611ac790612b06565b61010460243501356000526007602052611aea6001604060002001541515612b82565b60043560005260056020526040600020604051600081835491611b0c83612935565b9260018116908115611cb45750600114611c79575b602092506008815203019020604051906000906001840154611b4281612935565b9060018116908115611c635750600114611c29575b508152819003602001902054611b6f9060ff16612c54565b600281016001600160a01b03611b89602435604401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b03611bb4602435606401612ab9565b1681549060ff60a01b6084602435013560a01b169160018060a81b0319161717905560a46024350135600482015560c460243501356005820155600761010460243501359101557f123a1b961ae93e7acda9790b318237b175b45ac09277cd3614305d8baa3f195360206040516004358152a1005b9091506001840160005260206000206000905b828210611c4f5750508201906020611b57565b600181602092548488015201910190611c3c565b60ff191685525080151502830191506020611b57565b5050826000528160206000206000905b838210611c9c5750506020918101611b21565b60209192508060019154848701520191018391611c89565b60ff19168352506020928015150282019050611b21565b50611ac76001600160a01b03611ce5602435606401612ab9565b1615159050611abe565b50611a9d6001600160a01b03611d09602435604401612ab9565b1615159050611a94565b346101ca5760203660031901126101ca576004356000526007602052611d776040600020611d408161296f565b906001810154906002810154906003810154600482015490600660058401549301549360405197889760e0895260e0890190612910565b95602088015260408701526060860152608085015260a084015260c08301520390f35b346101ca576003196040368201126101ca57602435906001600160401b0390600435908284116101ca5760e0846004019185360301126101ca57600480546040516312d43a5160e01b81526020959290916001600160a01b03918791849190829085165afa801561083857611e199260009161186c5750163314612a82565b82600052600784526001611e3581604060002001541515612b82565b60248601359182151580612015575b80612008575b80611ffb575b80611fee575b80611fe1575b611e6590612d08565b8460005260078652611e7c60406000209480612bbf565b9182116106b657611e8d8554612935565b601f8111611f98575b50600090601f8311600114611f1f579282600080516020612de783398151915299936006969360c496600092611f14575b5050600019600383901b1c191690821b1786555b85015560448101356002850155606481013560038501556084810135600485015560a481013560058501550135910155604051908152a1005b013590508b80611ec7565b601f1983169186600052886000209260005b818110611f8357509360069693869360c4979383600080516020612de78339815191529e9810611f69575b505050811b018655611edb565b0135600019600384901b60f8161c191690558b8080611f5c565b83830135855593860193918a01918a01611f31565b8560005287600020601f840160051c810191898510611fd7575b601f0160051c019084905b828110611fcb575050611e96565b60008155018490611fbd565b9091508190611fb2565b5060c48701351515611e5c565b5060a48701351515611e56565b5060848701351515611e50565b5060648701351515611e4a565b5060448701351515611e44565b346101ca57600319602036820181136101ca57600435916001600160401b038084116101ca5760a0846004019285360301126101ca57600480546040516312d43a5160e01b8152916001600160a01b039186918491829085165afa801561083857612097926000916115645750163314612a82565b60248401356120a7811515612c92565b604485013590600282101580612250575b80612243575b6120c790612cca565b600254600052600685526040600020926120e18580612bbf565b9182116106b6576120f28554612935565b601f81116121fd575b50600090601f8311600114612181579282600080516020612d67833981519152999360049693608496600092612176575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155610c3e61143b6002549261216d84612c24565b60025580612bbf565b013590508b8061212c565b601f1983169186600052886000209260005b8181106121e6575093600496936084969360019383600080516020612d678339815191529e98106121cc575b505050811b018655612141565b0135600019600384901b60f8161c191690558b80806121bf565b91938a600181928787013581550195019201612193565b8560005287600020601f840160051c810191898510612239575b601f0160051c01905b81811061222d57506120fb565b60008155600101612220565b9091508190612217565b50606486013582106120be565b506103e8606487013511156120b8565b346101ca576020806003193601126101ca5760048054604051633078fff560e01b81526001600160a01b0392909184918391829086165afa908115610838576000916123e7575b501633036123b1576123959060043560005260058152604060002090604051916122d083612796565b6122d98161296f565b83526122e76001820161296f565b928281019384526122fa60028301612a15565b604082015260058201546060820152600760068301549260808301938452015460a082015261235860ff612351612340868551816040519382858094519384920161287b565b81016008815203019020875161289e565b5416612c54565b5192519051600052600682526123a2600160406000200154926000549261237e84612c24565b600055604051968796608088526080880190612910565b9186830390870152612910565b91604084015260608301520390f35b6064906040519062461bcd60e51b82526004820152600f60248201526e41474752454741544f525f4f4e4c5960881b6044820152fd5b90508281813d8311612416575b6123fe8183612802565b810103126101ca575181811681036101ca57836122a7565b503d6123f4565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600360406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526005602052602060066040600020015415604051908152f35b346101ca5760803660031901126101ca5760243560443580151581036101ca576064359081151582036101ca576004805460405162b1278360e01b81526020926001600160a01b039284918391829086165afa908115610838576000916125eb575b501633036125b65760099060043560005260058152600660406000200154600052526040600020906000146125ad5760ff60005b169115612552579061253491612770565b819291548160031b1c9182018092116119505761255092612c0a565b005b90918061255f8484612770565b90549060031b1c1160001461259d576125788383612770565b90549060031b1c90810390811161195057612550926125979192612770565b90612c0a565b5061259761255092600092612770565b60ff6001612523565b6064906040519062461bcd60e51b82526004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152fd5b6126029150833d8511610831576108238183612802565b866124ef565b346101ca5760203660031901126101ca57612621612d41565b506004356000526005602052608061263f6002604060002001612a15565b61264c60405180926128c4565bf35b346101ca5760003660031901126101ca576004546040516001600160a01b039091168152602090f35b346101ca5760403660031901126101ca576001600160401b036004358181116101ca576126a8903690600401612825565b6024359182116101ca576126f060ff916126e060206126cc81963690600401612825565b92816040519382858094519384920161287b565b810160088152030190209061289e565b54166040519015158152f35b346101ca5760403660031901126101ca576024356004356000526009602052604060002060028210156101ca5760209161129991612770565b346101ca5760203660031901126101ca5760209060043560005260058252600760406000200154600052600782526006604060002001548152f35b6002821015612780570190600090565b634e487b7160e01b600052603260045260246000fd5b60c081019081106001600160401b038211176106b657604052565b60a081019081106001600160401b038211176106b657604052565b60e081019081106001600160401b038211176106b657604052565b608081019081106001600160401b038211176106b657604052565b601f909101601f19168101906001600160401b038211908210176106b657604052565b81601f820112156101ca578035906001600160401b0382116106b65760405192612859601f8401601f191660200185612802565b828452602083830101116101ca57816000926020809301838601378301015290565b60005b83811061288e5750506000910152565b818101518382015260200161287e565b6020906128b892826040519483868095519384920161287b565b82019081520301902090565b60018060a01b038082511683526020820151166020830152604081015160038110156128fa576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b906020916129298151809281855285808601910161287b565b601f01601f1916010190565b90600182811c92168015612965575b602083101461294f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612944565b906040519182600082549261298384612935565b9081845260019485811690816000146129f257506001146129af575b50506129ad92500383612802565b565b9093915060005260209081600020936000915b8183106129da5750506129ad9350820101388061299f565b855488840185015294850194879450918301916129c2565b9150506129ad94506020925060ff191682840152151560051b820101388061299f565b90604051612a22816127e7565b82546001600160a01b039081168252600184015490811660208301529092839160a01c60ff1660038110156128fa5760609160029160408501520154910152565b908160209103126101ca57516001600160a01b03811681036101ca5790565b15612a8957565b60405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b6044820152606490fd5b356001600160a01b03811681036101ca5790565b15612ad457565b60405162461bcd60e51b815260206004820152600a60248201526915d493d391d7d191515160b21b6044820152606490fd5b15612b0d57565b60405162461bcd60e51b815260206004820152600e60248201526d464545445f325f4d495353494e4760901b6044820152606490fd5b15612b4a57565b60405162461bcd60e51b815260206004820152601060248201526f11d493d55417d393d517d31254d5115160821b6044820152606490fd5b15612b8957565b60405162461bcd60e51b815260206004820152600e60248201526d11915157d393d517d31254d5115160921b6044820152606490fd5b903590601e19813603018212156101ca57018035906001600160401b0382116101ca576020019181360383136101ca57565b6020919283604051948593843782019081520301902090565b919082549060031b600019811b9283911b16911916179055565b60001981146119505760010190565b908060209392818452848401376000828201840152601f01601f1916010190565b15612c5b57565b60405162461bcd60e51b815260206004820152600f60248201526e1410525497d393d517d31254d51151608a1b6044820152606490fd5b15612c9957565b60405162461bcd60e51b81526020600482015260096024820152684a4f425f454d50545960b81b6044820152606490fd5b15612cd157565b60405162461bcd60e51b815260206004820152600f60248201526e57524f4e475f4c455645524147455360881b6044820152606490fd5b15612d0f57565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f4645455360b01b6044820152606490fd5b60405190612d4e826127e7565b6000606083828152826020820152826040820152015256feaf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca4482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f6cfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e098c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76a164736f6c6343000811000a",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c9081630cd8b022146127355750806315406fe5146126fc5780631628bfeb1461267757806316fff0741461264e5780631eaa005c1461260857806320f0fc5e1461248d57806324abd3fb1461245d578063281b693c1461241d578063302f81fc14612260578063472ff8bb1461202257806349dde63f14611d9a5780634acc79ed14611d13578063527b47c014611a0d57806359a992d0146119cd57806362614661146118a7578063658de48a146118895780637981aa831461161f5780638251135b146115df578063836a341a1461159f578063885e2750146115815780638c23f81c146112cd578063925931fc146112af5780639521753e146112475780639567dccf14610f7f57806396324bd414610f0d5780639848a68d14610ecd5780639c8dd2fa14610e8d578063a1d54e9b14610e5e578063b71ade2f14610900578063b81b2b71146108e2578063b91ac78814610844578063db7c3f9d146101cf5763f7acbabd1461018a57600080fd5b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600360406000200154604051908152f35b600080fd5b346101ca5760203660031901126101ca576001600160401b03600435116101ca573660236004350112156101ca576001600160401b03600480350135116101ca573660246004356004013560051b6004350101116101ca5760005b60043560040135811061023957005b60248160051b60043501013590610142196004353603018212156101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa80156108385761029f91600091610809575b506001600160a01b03163314612a82565b60c4826004350101351515806107e3575b6102b990612acd565b600360a48360043501013510156101ca57600260a483600435010135148015906107bd575b6102e790612b06565b61010482600435010135600052600660205261030c6002604060002001541515612b43565b6101248260043501013560005260076020526103316001604060002001541515612b82565b6020610344600435840160240180612bbf565b91908260405193849283378101600881520301902060ff61037e604492610378848760043501016024886004350101612bbf565b90612bf1565b54166107835760015460009081526005602052604090206103a6600435850160240180612bbf565b906001600160401b0382116106b6576103bf8354612935565b601f811161073f575b5090600091601f82116001146106d7579181926000926106cc575b50508160011b916000199060031b1c19161781555b61040c600435850180840190602401612bbf565b906001600160401b0382116106b6576104286001840154612935565b601f811161066f575b50600090601f83116001146105e55793602493836105d598946105cd94600080516020612dc7833981519152986000926105da575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b0361049a6004358701606401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b036104c76004358701608401612ab9565b82546001600160a81b03191691161760048035870160a481013560a01b60ff60a01b169290921790925560c48101359183019190915560e48101356005830155610104810135600683015561012481013560079092019190915561055f9060209061053490870180612bbf565b9190826040519384928337810160088152030190206103788386600435010187876004350101612bbf565b600160ff198254161790556105bf6105a46001549461057d86612c24565b6001556105906004358201880180612bbf565b979094826004350101916004350101612bbf565b91909260405196879687526060806020890152870191612c33565b918483036040860152612c33565b0390a1612c24565b61022a565b013590508a80610466565b6001840160005260206000209160005b601f19851681106106575750936001846105cd94600080516020612dc783398151915298946024986105d59c98601f1981161061063d575b505050811b01600182015561047e565b0135600019600384901b60f8161c191690558a808061062d565b909260206001819286860135815501940191016105f5565b600184016000526020600020601f840160051c8101602085106106af575b601f830160051c820181106106a3575050610431565b6000815560010161068d565b508061068d565b634e487b7160e01b600052604160045260246000fd5b0135905086806103e3565b836000526020600020906000935b601f1984168510610727576001945083601f1981161061070d575b505050811b0181556103f8565b0135600019600384901b60f8161c19169055868080610700565b818101358355602094850194600190930192016106e5565b836000526020600020601f840160051c81016020851061077c575b601f830160051c820181106107705750506103c8565b6000815560010161075a565b508061075a565b606490721410525497d053149150511657d31254d51151606a1b6040519162461bcd60e51b83526020600484015260136024840152820152fd5b506102e76001600160a01b036107d96004358501608401612ab9565b16151590506102de565b506102b96001600160a01b036107ff6004358501606401612ab9565b16151590506102b0565b61082b915060203d602011610831575b6108238183612802565b810190612a63565b8461028e565b503d610819565b6040513d6000823e3d90fd5b346101ca5760203660031901126101ca5760043560005260056020526108b560406000206108718161296f565b9061087e6001820161296f565b61088a60028301612a15565b9160058101546108ce6108c36007600685015494015494604051988998610120808b528a0190612910565b9088820360208a0152612910565b9460408701906128c4565b60c085015260e08401526101008301520390f35b346101ca5760003660031901126101ca576020600154604051908152f35b346101ca576003196020368201126101ca576001600160401b03600435116101ca5761012090600435360301126101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa80156108385761097891600091610e3f57506001600160a01b03163314612a82565b60a46004350135151580610e1b575b61099090612acd565b60036084600435013510156101ca5760026084600435013514801590610df7575b6109ba90612b06565b60e4600435013560005260066020526109dc6002604060002001541515612b43565b610104600435013560005260076020526109ff6001604060002001541515612b82565b60ff610a3d6020610a14600480350180612bbf565b919082604051938492833781016008815203019020610378602460043501600435600401612bbf565b5416610dbc576001546000908152600560205260409020610a62600480350180612bbf565b9091906001600160401b0381116106b657610a7d8254612935565b601f8111610d78575b50600092601f8211600114610d0f5792819293600092610d04575b50508160011b916000199060031b1c19161781555b610aca602460043501600435600401612bbf565b9091906001600160401b0381116106b657610ae86001830154612935565b601f8111610cbd575b50600092601f8211600114610c4e5792819293600092610c43575b50508160011b916000199060031b1c19161760018201555b600281016001600160a01b03610b3e600435604401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b03610b69600435606401612ab9565b82546001600160a81b03191691161760048035608481013560a01b60ff60a01b169290921790925560a48101358383015560c4810135600584015560e48101356006840155610104810135600790930192909255610bcf91602091610a14910180612bbf565b600160ff19825416179055600080516020612dc7833981519152610c3e600154610bf881612c24565b600155610c09600480350180612bbf565b92906105bf610c22602460043501600435600401612bbf565b9190926040519687968752606060208801526060870191612c33565b0390a1005b013590508380610b0c565b600183016000526020600020906000945b601f1984168610610ca557600194955083601f19811610610c8b575b505050811b016001820155610b24565b0135600019600384901b60f8161c19169055838080610c7b565b91602060018192858501358155019301950194610c5f565b600183016000526020600020601f830160051c810160208410610cfd575b601f830160051c82018110610cf1575050610af1565b60008155600101610cdb565b5080610cdb565b013590508380610aa1565b826000526020600020906000945b601f1984168610610d6057600194955083601f19811610610d46575b505050811b018155610ab6565b0135600019600384901b60f8161c19169055838080610d39565b91602060018192858501358155019301950194610d1d565b826000526020600020601f830160051c810160208410610db5575b601f830160051c82018110610da9575050610a86565b60008155600101610d93565b5080610d93565b60405162461bcd60e51b81526020600482015260136024820152721410525497d053149150511657d31254d51151606a1b6044820152606490fd5b506109ba6001600160a01b03610e11600435606401612ab9565b16151590506109b1565b506109906001600160a01b03610e35600435604401612ab9565b1615159050610987565b610e58915060203d602011610831576108238183612802565b8261028e565b346101ca5760203660031901126101ca5760043560005260056020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600460406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600560406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526006602052610f666040600020610f3a8161296f565b90600181015490600281015490600460038201549101549160405195869560a0875260a0870190612910565b9360208601526040850152606084015260808301520390f35b346101ca5760203660031901126101ca57600060a0604051610fa081612796565b6060815260606020820152610fb3612d41565b6040820152826060820152826080820152015260006080604051610fd6816127b1565b606081528260208201528260408201528260608201520152600060c0604051610ffe816127cc565b606081528260208201528260408201528260608201528260808201528260a08201520152600435600052600560205260406000206040519061103f82612796565b6110488161296f565b82526110566001820161296f565b602083015261106760028201612a15565b6040830152600581015460608301526007600682015491826080850152015460a0830152600052600660205260406000209060a0810151600052600760205260406000206004604051936110ba856127b1565b6110c38161296f565b8552600181015460208601526002810154604086015260038101546060860152015460808401526006604051916110f9836127cc565b6111028161296f565b835260018101546020840152600281015460408401526003810154606084015260048101546080840152600581015460a0840152015460c08201526040519283926060845260a081519161117d611167610120948560608a0152610180890190612910565b6020830151888203605f190160808a0152612910565b9261118f6040830151848901906128c4565b6060820151908701526080810151610140870152015161016085015283810360208501526080806111c9845160a0855260a0850190612910565b936020810151602085015260408101516040850152606081015160608501520151910152828103604084015260c08061120b845160e0855260e0850190612910565b936020810151602085015260408101516040850152606081015160608501526080810151608085015260a081015160a085015201519101520390f35b346101ca5760403660031901126101ca5760243580151581036101ca5761129960209160043560005260058352600660406000200154600052600983526040600020906000146112a757600090612770565b90546040519160031b1c8152f35b600190612770565b346101ca5760003660031901126101ca576020600054604051908152f35b346101ca57600319602036820181136101ca576001600160401b0391600435908382116101ca5760e0826004019183360301126101ca57600480546040516312d43a5160e01b8152916001600160a01b039186918491829085165afa80156108385761134492600091611564575b50163314612a82565b60248201359182151580611557575b8061154a575b8061153d575b80611530575b80611523575b61137490612d08565b6003928354600052600785526040600020956113908480612bbf565b9182116106b6576113a18854612935565b601f81116114dd575b50600090601f831160011461145c5761143b94610c3e969484600080516020612d878339815191529b9560069560c495600092611451575b50508160011b91600019908c1b1c19161785555b6001850155604481013560028501556064810135888501556084810135600485015560a48101356005850155013591015583549361143385612c24565b905580612bbf565b6040805195869586528501526040840191612c33565b013590508d806113e2565b601f1983169189600052886000209260005b8181106114c657509460018560069560c49561143b9a95600080516020612d878339815191529f99610c3e9d9b106114ae575b505050811b0185556113f6565b0135600019838e1b60f8161c191690558d80806114a1565b91938a60018192878701358155019501920161146e565b8860005287600020601f840160051c810191898510611519575b601f0160051c01905b81811061150d57506113aa565b60008155600101611500565b90915081906114f7565b5060c4810135151561136b565b5060a48101351515611365565b506084810135151561135f565b5060648101351515611359565b5060448101351515611353565b61157b9150863d8811610831576108238183612802565b8761133b565b346101ca5760003660031901126101ca576020600254604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600260406000200154604051908152f35b346101ca5760203660031901126101ca57600435600052600560205260076040600020015460005260076020526020600160406000200154604051908152f35b346101ca576003196040368201126101ca57602435906001600160401b0390600435908284116101ca5760a0846004019185360301126101ca57600480546040516312d43a5160e01b81526020959290916001600160a01b03918791849190829085165afa80156108385761169e9260009161186c5750163314612a82565b82600052600684526116b96002604060002001541515612b43565b60248501356116c9811515612c92565b60448601359160028310158061185c575b8061184f575b6116e990612cca565b846000526006865261170060406000209480612bbf565b9182116106b6576117118554612935565b601f8111611809575b50600090601f831160011461178d579282600080516020612da7833981519152999360049693608496600092611782575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155604051908152a1005b013590508b8061174b565b601f1983169186600052886000209260005b8181106117f2575093600496936084969360019383600080516020612da78339815191529e98106117d8575b505050811b018655611760565b0135600019600384901b60f8161c191690558b80806117cb565b91938a60018192878701358155019501920161179f565b8560005287600020601f840160051c810191898510611845575b601f0160051c01905b818110611839575061171a565b6000815560010161182c565b9091508190611823565b50606487013583106116e0565b506103e8606488013511156116da565b6118839150873d8911610831576108238183612802565b8861133b565b346101ca5760003660031901126101ca576020600354604051908152f35b346101ca576020806003193601126101ca57600435600052600581526006604060002001546000526006815260046040600020015460018060a01b0390600483838254166040519283809263fbfa77cf60e01b82525afa8015610838578491600091611995575b50600460405180958193630428d10160e11b8352165afa91821561083857600092611966575b5081810291818304149015171561195057606460405191048152f35b634e487b7160e01b600052601160045260246000fd5b9091508281813d831161198e575b61197e8183612802565b810103126101ca57519083611934565b503d611974565b82819392503d83116119c6575b6119ac8183612802565b810103126101ca575182811681036101ca5783908561190e565b503d6119a2565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600260406000200154604051908152f35b346101ca576003196040368201126101ca576001600160401b03602435116101ca5761012090602435360301126101ca57600480546040516312d43a5160e01b81529160209183919082906001600160a01b03165afa801561083857611a8591600091610e3f57506001600160a01b03163314612a82565b60a46024350135151580611cef575b611a9d90612acd565b60036084602435013510156101ca5760026084602435013514801590611ccb575b611ac790612b06565b61010460243501356000526007602052611aea6001604060002001541515612b82565b60043560005260056020526040600020604051600081835491611b0c83612935565b9260018116908115611cb45750600114611c79575b602092506008815203019020604051906000906001840154611b4281612935565b9060018116908115611c635750600114611c29575b508152819003602001902054611b6f9060ff16612c54565b600281016001600160a01b03611b89602435604401612ab9565b82546001600160a01b0319169116179055600381016001600160a01b03611bb4602435606401612ab9565b1681549060ff60a01b6084602435013560a01b169160018060a81b0319161717905560a46024350135600482015560c460243501356005820155600761010460243501359101557f123a1b961ae93e7acda9790b318237b175b45ac09277cd3614305d8baa3f195360206040516004358152a1005b9091506001840160005260206000206000905b828210611c4f5750508201906020611b57565b600181602092548488015201910190611c3c565b60ff191685525080151502830191506020611b57565b5050826000528160206000206000905b838210611c9c5750506020918101611b21565b60209192508060019154848701520191018391611c89565b60ff19168352506020928015150282019050611b21565b50611ac76001600160a01b03611ce5602435606401612ab9565b1615159050611abe565b50611a9d6001600160a01b03611d09602435604401612ab9565b1615159050611a94565b346101ca5760203660031901126101ca576004356000526007602052611d776040600020611d408161296f565b906001810154906002810154906003810154600482015490600660058401549301549360405197889760e0895260e0890190612910565b95602088015260408701526060860152608085015260a084015260c08301520390f35b346101ca576003196040368201126101ca57602435906001600160401b0390600435908284116101ca5760e0846004019185360301126101ca57600480546040516312d43a5160e01b81526020959290916001600160a01b03918791849190829085165afa801561083857611e199260009161186c5750163314612a82565b82600052600784526001611e3581604060002001541515612b82565b60248601359182151580612015575b80612008575b80611ffb575b80611fee575b80611fe1575b611e6590612d08565b8460005260078652611e7c60406000209480612bbf565b9182116106b657611e8d8554612935565b601f8111611f98575b50600090601f8311600114611f1f579282600080516020612de783398151915299936006969360c496600092611f14575b5050600019600383901b1c191690821b1786555b85015560448101356002850155606481013560038501556084810135600485015560a481013560058501550135910155604051908152a1005b013590508b80611ec7565b601f1983169186600052886000209260005b818110611f8357509360069693869360c4979383600080516020612de78339815191529e9810611f69575b505050811b018655611edb565b0135600019600384901b60f8161c191690558b8080611f5c565b83830135855593860193918a01918a01611f31565b8560005287600020601f840160051c810191898510611fd7575b601f0160051c019084905b828110611fcb575050611e96565b60008155018490611fbd565b9091508190611fb2565b5060c48701351515611e5c565b5060a48701351515611e56565b5060848701351515611e50565b5060648701351515611e4a565b5060448701351515611e44565b346101ca57600319602036820181136101ca57600435916001600160401b038084116101ca5760a0846004019285360301126101ca57600480546040516312d43a5160e01b8152916001600160a01b039186918491829085165afa801561083857612097926000916115645750163314612a82565b60248401356120a7811515612c92565b604485013590600282101580612250575b80612243575b6120c790612cca565b600254600052600685526040600020926120e18580612bbf565b9182116106b6576120f28554612935565b601f81116121fd575b50600090601f8311600114612181579282600080516020612d67833981519152999360049693608496600092612176575b50508160011b916000199060031b1c19161786555b60018601556002850155606481013560038501550135910155610c3e61143b6002549261216d84612c24565b60025580612bbf565b013590508b8061212c565b601f1983169186600052886000209260005b8181106121e6575093600496936084969360019383600080516020612d678339815191529e98106121cc575b505050811b018655612141565b0135600019600384901b60f8161c191690558b80806121bf565b91938a600181928787013581550195019201612193565b8560005287600020601f840160051c810191898510612239575b601f0160051c01905b81811061222d57506120fb565b60008155600101612220565b9091508190612217565b50606486013582106120be565b506103e8606487013511156120b8565b346101ca576020806003193601126101ca5760048054604051633078fff560e01b81526001600160a01b0392909184918391829086165afa908115610838576000916123e7575b501633036123b1576123959060043560005260058152604060002090604051916122d083612796565b6122d98161296f565b83526122e76001820161296f565b928281019384526122fa60028301612a15565b604082015260058201546060820152600760068301549260808301938452015460a082015261235860ff612351612340868551816040519382858094519384920161287b565b81016008815203019020875161289e565b5416612c54565b5192519051600052600682526123a2600160406000200154926000549261237e84612c24565b600055604051968796608088526080880190612910565b9186830390870152612910565b91604084015260608301520390f35b6064906040519062461bcd60e51b82526004820152600f60248201526e41474752454741544f525f4f4e4c5960881b6044820152fd5b90508281813d8311612416575b6123fe8183612802565b810103126101ca575181811681036101ca57836122a7565b503d6123f4565b346101ca5760203660031901126101ca57600435600052600560205260066040600020015460005260066020526020600360406000200154604051908152f35b346101ca5760203660031901126101ca576004356000526005602052602060066040600020015415604051908152f35b346101ca5760803660031901126101ca5760243560443580151581036101ca576064359081151582036101ca576004805460405162b1278360e01b81526020926001600160a01b039284918391829086165afa908115610838576000916125eb575b501633036125b65760099060043560005260058152600660406000200154600052526040600020906000146125ad5760ff60005b169115612552579061253491612770565b819291548160031b1c9182018092116119505761255092612c0a565b005b90918061255f8484612770565b90549060031b1c1160001461259d576125788383612770565b90549060031b1c90810390811161195057612550926125979192612770565b90612c0a565b5061259761255092600092612770565b60ff6001612523565b6064906040519062461bcd60e51b82526004820152600e60248201526d43414c4c4241434b535f4f4e4c5960901b6044820152fd5b6126029150833d8511610831576108238183612802565b866124ef565b346101ca5760203660031901126101ca57612621612d41565b506004356000526005602052608061263f6002604060002001612a15565b61264c60405180926128c4565bf35b346101ca5760003660031901126101ca576004546040516001600160a01b039091168152602090f35b346101ca5760403660031901126101ca576001600160401b036004358181116101ca576126a8903690600401612825565b6024359182116101ca576126f060ff916126e060206126cc81963690600401612825565b92816040519382858094519384920161287b565b810160088152030190209061289e565b54166040519015158152f35b346101ca5760403660031901126101ca576024356004356000526009602052604060002060028210156101ca5760209161129991612770565b346101ca5760203660031901126101ca5760209060043560005260058252600760406000200154600052600782526006604060002001548152f35b6002821015612780570190600090565b634e487b7160e01b600052603260045260246000fd5b60c081019081106001600160401b038211176106b657604052565b60a081019081106001600160401b038211176106b657604052565b60e081019081106001600160401b038211176106b657604052565b608081019081106001600160401b038211176106b657604052565b601f909101601f19168101906001600160401b038211908210176106b657604052565b81601f820112156101ca578035906001600160401b0382116106b65760405192612859601f8401601f191660200185612802565b828452602083830101116101ca57816000926020809301838601378301015290565b60005b83811061288e5750506000910152565b818101518382015260200161287e565b6020906128b892826040519483868095519384920161287b565b82019081520301902090565b60018060a01b038082511683526020820151166020830152604081015160038110156128fa576040830152606090810151910152565b634e487b7160e01b600052602160045260246000fd5b906020916129298151809281855285808601910161287b565b601f01601f1916010190565b90600182811c92168015612965575b602083101461294f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612944565b906040519182600082549261298384612935565b9081845260019485811690816000146129f257506001146129af575b50506129ad92500383612802565b565b9093915060005260209081600020936000915b8183106129da5750506129ad9350820101388061299f565b855488840185015294850194879450918301916129c2565b9150506129ad94506020925060ff191682840152151560051b820101388061299f565b90604051612a22816127e7565b82546001600160a01b039081168252600184015490811660208301529092839160a01c60ff1660038110156128fa5760609160029160408501520154910152565b908160209103126101ca57516001600160a01b03811681036101ca5790565b15612a8957565b60405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b6044820152606490fd5b356001600160a01b03811681036101ca5790565b15612ad457565b60405162461bcd60e51b815260206004820152600a60248201526915d493d391d7d191515160b21b6044820152606490fd5b15612b0d57565b60405162461bcd60e51b815260206004820152600e60248201526d464545445f325f4d495353494e4760901b6044820152606490fd5b15612b4a57565b60405162461bcd60e51b815260206004820152601060248201526f11d493d55417d393d517d31254d5115160821b6044820152606490fd5b15612b8957565b60405162461bcd60e51b815260206004820152600e60248201526d11915157d393d517d31254d5115160921b6044820152606490fd5b903590601e19813603018212156101ca57018035906001600160401b0382116101ca576020019181360383136101ca57565b6020919283604051948593843782019081520301902090565b919082549060031b600019811b9283911b16911916179055565b60001981146119505760010190565b908060209392818452848401376000828201840152601f01601f1916010190565b15612c5b57565b60405162461bcd60e51b815260206004820152600f60248201526e1410525497d393d517d31254d51151608a1b6044820152606490fd5b15612c9957565b60405162461bcd60e51b81526020600482015260096024820152684a4f425f454d50545960b81b6044820152606490fd5b15612cd157565b60405162461bcd60e51b815260206004820152600f60248201526e57524f4e475f4c455645524147455360881b6044820152606490fd5b15612d0f57565b60405162461bcd60e51b815260206004820152600a60248201526957524f4e475f4645455360b01b6044820152606490fd5b60405190612d4e826127e7565b6000606083828152826020820152826040820152015256feaf17de8e82beccc440012117a600dc37e26925225d0f1ee192fc107eb3dcbca4482049823c85e038e099fe4f2b901487c4800def71c9a3f5bae2de8381ec54f6cfde8f228364c70f12cbbac5a88fc91ceca76dd750ac93364991a333b34afb8e3adfd40f2b74073df2a84238acdb7f460565a557b3cc13bddc8833289bf38e098c4d35e54a3f2ef1134138fd8ea3daee6a3c89e10d2665996babdf70261e2c76a164736f6c6343000811000a",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10338,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "currentOrderId",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 10340,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "pairsCount",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 10342,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groupsCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 10344,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "feesCount",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 10347,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "storageT",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(StorageInterfaceV5)21143"
      },
      {
        "astId": 10352,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "pairs",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Pair)10310_storage)"
      },
      {
        "astId": 10357,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groups",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Group)10321_storage)"
      },
      {
        "astId": 10362,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "fees",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_struct(Fee)10336_storage)"
      },
      {
        "astId": 10368,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "isPairListed",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))"
      },
      {
        "astId": 10374,
        "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
        "label": "groupsCollaterals",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_array(t_uint256)2_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)2_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[2]",
        "numberOfBytes": "64"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(StorageInterfaceV5)21143": {
        "encoding": "inplace",
        "label": "contract StorageInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_enum(FeedCalculation)10286": {
        "encoding": "inplace",
        "label": "enum GNSPairsStorageV6.FeedCalculation",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_mapping(t_string_memory_ptr,t_bool))": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => mapping(string => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      "t_mapping(t_uint256,t_array(t_uint256)2_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[2])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)2_storage"
      },
      "t_mapping(t_uint256,t_struct(Fee)10336_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Fee)",
        "numberOfBytes": "32",
        "value": "t_struct(Fee)10336_storage"
      },
      "t_mapping(t_uint256,t_struct(Group)10321_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)10321_storage"
      },
      "t_mapping(t_uint256,t_struct(Pair)10310_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GNSPairsStorageV6.Pair)",
        "numberOfBytes": "32",
        "value": "t_struct(Pair)10310_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Fee)10336_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Fee",
        "members": [
          {
            "astId": 10323,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 10325,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "openFeeP",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 10327,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "closeFeeP",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10329,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "oracleFeeP",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 10331,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "nftLimitOrderFeeP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 10333,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "referralFeeP",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 10335,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "minLevPosDai",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Feed)10296_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Feed",
        "members": [
          {
            "astId": 10288,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed1",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 10290,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed2",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 10293,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feedCalculation",
            "offset": 20,
            "slot": "1",
            "type": "t_enum(FeedCalculation)10286"
          },
          {
            "astId": 10295,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxDeviationP",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(Group)10321_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Group",
        "members": [
          {
            "astId": 10312,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 10314,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "job",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          },
          {
            "astId": 10316,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "minLeverage",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10318,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxLeverage",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 10320,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "maxCollateralP",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(Pair)10310_storage": {
        "encoding": "inplace",
        "label": "struct GNSPairsStorageV6.Pair",
        "members": [
          {
            "astId": 10298,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 10300,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "to",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 10303,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feed",
            "offset": 0,
            "slot": "2",
            "type": "t_struct(Feed)10296_storage"
          },
          {
            "astId": 10305,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "spreadP",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 10307,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "groupIndex",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 10309,
            "contract": "contracts/contracts/GNSPairStorageV6.sol:GNSPairsStorageV6",
            "label": "feeIndex",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}