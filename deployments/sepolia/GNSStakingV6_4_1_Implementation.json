{
  "address": "0x308c4436d89f71a95491a7e48AA3F1Ce15833eBB",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DaiDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "DaiHarvested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "DaiHarvestedFromUnlock",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "GovFundUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensStaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "TokensUnstaked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "UnlockManagerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "UnlockScheduleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "schedule",
          "type": "tuple"
        }
      ],
      "name": "UnlockScheduled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_UNLOCK_DURATION",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_UNLOCK_TOKEN_AMOUNT",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accDaiPerToken",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "claimUnlockedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockScheduleInput",
          "name": "input",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "createUnlockSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dai",
      "outputs": [
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "distributeRewardDai",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUnlockSchedules",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "govFund",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "harvestAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "harvestFromUnlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_govFund",
          "type": "address"
        },
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "_dai",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pendingRewardDai",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "pendingRewardDaiFromUnlocks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "pendingRewardDaiFromUnlocks",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "v",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "timestamp",
          "type": "uint48"
        }
      ],
      "name": "releasable",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "revokeUnlockSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "setGovFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "manager",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "authorized",
          "type": "bool"
        }
      ],
      "name": "setUnlockManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract TokenInterfaceV5",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenBalance",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "totalTokensStaked",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "unlockManagers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "unlockSchedules",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "totalTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "claimedTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "debtDai",
          "type": "uint128"
        },
        {
          "internalType": "uint48",
          "name": "start",
          "type": "uint48"
        },
        {
          "internalType": "uint48",
          "name": "duration",
          "type": "uint48"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        },
        {
          "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
          "name": "unlockType",
          "type": "uint8"
        },
        {
          "internalType": "uint16",
          "name": "__placeholder",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint128",
              "name": "totalTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "claimedTokens",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "debtDai",
              "type": "uint128"
            },
            {
              "internalType": "uint48",
              "name": "start",
              "type": "uint48"
            },
            {
              "internalType": "uint48",
              "name": "duration",
              "type": "uint48"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "enum GNSStakingInterfaceV6_4_1.UnlockType",
              "name": "unlockType",
              "type": "uint8"
            },
            {
              "internalType": "uint16",
              "name": "__placeholder",
              "type": "uint16"
            }
          ],
          "internalType": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
          "name": "v",
          "type": "tuple"
        },
        {
          "internalType": "uint48",
          "name": "timestamp",
          "type": "uint48"
        }
      ],
      "name": "unlockedAmount",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "",
          "type": "uint128"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amount",
          "type": "uint128"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "stakedTokens",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "debtDai",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd333edeff1fd5ce08aee25dd4c361ebf2944fa626c71a887c25b8a1431ba431a",
  "receipt": {
    "to": null,
    "from": "0xd7D1dCba2c678ee7e049BD55176354E7C5bBdcCA",
    "contractAddress": "0x308c4436d89f71a95491a7e48AA3F1Ce15833eBB",
    "transactionIndex": 39,
    "gasUsed": "1958648",
    "logsBloom": "0x
    "blockHash": "0x1c376ab0281bb1a6aabff58f4b873ce58bcac1c75d308ac38a5f4beb01a79a03",
    "transactionHash": "0xd333edeff1fd5ce08aee25dd4c361ebf2944fa626c71a887c25b8a1431ba431a",
    "logs": [],
    "blockNumber": 6071116,
    "cumulativeGasUsed": "7773635",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "edab1d0feb7ffa5be1c95101a46d74db",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DaiDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DaiHarvested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"DaiHarvestedFromUnlock\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"GovFundUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"UnlockManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"UnlockScheduleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"schedule\",\"type\":\"tuple\"}],\"name\":\"UnlockScheduled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_UNLOCK_DURATION\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_UNLOCK_TOKEN_AMOUNT\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accDaiPerToken\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"claimUnlockedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockScheduleInput\",\"name\":\"input\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"createUnlockSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dai\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"distributeRewardDai\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUnlockSchedules\",\"outputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"govFund\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"harvestAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"harvestFromUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_govFund\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"_dai\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"pendingRewardDai\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"pendingRewardDaiFromUnlocks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"pendingRewardDaiFromUnlocks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"v\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"name\":\"releasable\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"revokeUnlockSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"setGovFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setUnlockManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract TokenInterfaceV5\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenBalance\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"totalTokensStaked\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"unlockManagers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"unlockSchedules\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint128\",\"name\":\"totalTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"claimedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"},{\"internalType\":\"uint48\",\"name\":\"start\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"duration\",\"type\":\"uint48\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"enum GNSStakingInterfaceV6_4_1.UnlockType\",\"name\":\"unlockType\",\"type\":\"uint8\"},{\"internalType\":\"uint16\",\"name\":\"__placeholder\",\"type\":\"uint16\"}],\"internalType\":\"struct GNSStakingInterfaceV6_4_1.UnlockSchedule\",\"name\":\"v\",\"type\":\"tuple\"},{\"internalType\":\"uint48\",\"name\":\"timestamp\",\"type\":\"uint48\"}],\"name\":\"unlockedAmount\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"stakedTokens\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"debtDai\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/GNSStakingV6_4_1.sol\":\"GNSStakingV6_4_1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```solidity\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n *\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts.\\n     *\\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\\n     * constructor.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\\n     * are added through upgrades and that require initialization.\\n     *\\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     *\\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\\n     *\\n     * Emits an {Initialized} event.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     *\\n     * Emits an {Initialized} event the first time it is successfully executed.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized != type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\\n     */\\n    function _getInitializedVersion() internal view returns (uint8) {\\n        return _initialized;\\n    }\\n\\n    /**\\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\\n     */\\n    function _isInitializing() internal view returns (bool) {\\n        return _initializing;\\n    }\\n}\\n\",\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\"},\"contracts/contracts/GNSStakingV6_4_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"../interfaces/GNSStakingInterfaceV6_4_1.sol\\\";\\nimport \\\"../interfaces/TokenInterfaceV5.sol\\\";\\n\\npragma solidity ^0.8.7;\\n\\ncontract GNSStakingV6_4_1 is Initializable, GNSStakingInterfaceV6_4_1 {\\n    // Constants\\n    uint128 public constant MAX_UNLOCK_DURATION = 730 days; // 2 years in seconds\\n    uint128 public constant MIN_UNLOCK_TOKEN_AMOUNT = 1e18;\\n\\n    // Contracts & Addresses\\n    address public override govFund;\\n    TokenInterfaceV5 public token; // GNS\\n    TokenInterfaceV5 public dai;\\n\\n    // Pool state\\n    uint128 public accDaiPerToken;\\n    uint128 public tokenBalance;\\n\\n    // Mappings\\n    mapping(address => User) public users;\\n    mapping(address => UnlockSchedule[]) public unlockSchedules;\\n    mapping(address => bool) public unlockManagers; // addresses allowed to create unlock schedules for others\\n\\n    // Events\\n    event GovFundUpdated(address value);\\n    event UnlockManagerUpdated(address indexed manager, bool authorized);\\n\\n    event DaiDistributed(uint amount);\\n    event DaiHarvested(address indexed user, uint128 amount);\\n    event DaiHarvestedFromUnlock(address indexed user, uint128 amount);\\n\\n    event TokensStaked(address indexed user, uint128 amount);\\n    event TokensUnstaked(address indexed user, uint128 amount);\\n    event TokensClaimed(address indexed user, uint[] ids, uint128 amount);\\n\\n    event UnlockScheduled(\\n        address indexed user,\\n        uint indexed index,\\n        UnlockSchedule schedule\\n    );\\n    event UnlockScheduleRevoked(address indexed user, uint indexed index);\\n\\n    function initialize(\\n        address _govFund,\\n        TokenInterfaceV5 _token,\\n        TokenInterfaceV5 _dai\\n    ) external initializer {\\n        require(\\n            _govFund != address(0) &&\\n                address(_token) != address(0) &&\\n                address(_dai) != address(0),\\n            \\\"WRONG_PARAMS\\\"\\n        );\\n\\n        govFund = _govFund;\\n        token = _token;\\n        dai = _dai;\\n    }\\n\\n    //\\n    // Modifiers\\n    //\\n\\n    modifier onlyGov() {\\n        require(msg.sender == govFund, \\\"GOV_ONLY\\\");\\n        _;\\n    }\\n\\n    modifier onlyAuthorizedUnlockManager(address user) {\\n        require(\\n            user == msg.sender ||\\n                msg.sender == govFund ||\\n                unlockManagers[msg.sender],\\n            \\\"NO_AUTH\\\"\\n        );\\n        _;\\n    }\\n\\n    //\\n    // Management functions\\n    //\\n\\n    function setGovFund(address value) external onlyGov {\\n        require(value != address(0), \\\"ADDRESS_0\\\");\\n\\n        govFund = value;\\n\\n        emit GovFundUpdated(value);\\n    }\\n\\n    function setUnlockManager(\\n        address manager,\\n        bool authorized\\n    ) external onlyGov {\\n        unlockManagers[manager] = authorized;\\n\\n        emit UnlockManagerUpdated(manager, authorized);\\n    }\\n\\n    //\\n    // Internal view functions\\n    //\\n\\n    function _currentDebtDai(uint128 staked) internal view returns (uint128) {\\n        return uint128((uint(staked) * accDaiPerToken) / 1e18);\\n    }\\n\\n    function _pendingDai(\\n        uint128 staked,\\n        uint128 debtDai\\n    ) internal view returns (uint128) {\\n        return _currentDebtDai(staked) - debtDai;\\n    }\\n\\n    function _pendingDai(\\n        UnlockSchedule memory v\\n    ) internal view returns (uint128) {\\n        return _currentDebtDai(v.totalTokens - v.claimedTokens) - v.debtDai;\\n    }\\n\\n    //\\n    // Public view functions\\n    //\\n\\n    function unlockedAmount(\\n        UnlockSchedule memory v,\\n        uint48 timestamp\\n    ) public pure override returns (uint128) {\\n        // if unlock schedule has ended return totalTokens\\n        if (timestamp >= v.start + v.duration) return v.totalTokens;\\n\\n        // if unlock hasn't started or it's a cliff unlock return 0\\n        if (timestamp < v.start || v.unlockType == UnlockType.CLIFF) return 0;\\n\\n        return\\n            uint128((uint(v.totalTokens) * (timestamp - v.start)) / v.duration);\\n    }\\n\\n    function releasable(\\n        UnlockSchedule memory v,\\n        uint48 timestamp\\n    ) public pure override returns (uint128) {\\n        return unlockedAmount(v, timestamp) - v.claimedTokens;\\n    }\\n\\n    //\\n    // Internal state-modifying functions\\n    //\\n\\n    function _harvestFromUnlock(address user, uint[] memory ids) internal {\\n        require(user != address(0), \\\"USER_EMPTY\\\");\\n        require(ids.length > 0, \\\"IDS_EMPTY\\\");\\n\\n        uint128 pendingDai;\\n\\n        for (uint i; i < ids.length; ) {\\n            UnlockSchedule storage v = unlockSchedules[user][ids[i]];\\n\\n            uint128 newDebtDai = _currentDebtDai(\\n                v.totalTokens - v.claimedTokens\\n            );\\n            uint128 newRewardsDai = newDebtDai - v.debtDai;\\n\\n            pendingDai += newRewardsDai;\\n            v.debtDai = newDebtDai;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        dai.transfer(user, uint(pendingDai));\\n\\n        emit DaiHarvestedFromUnlock(user, pendingDai);\\n    }\\n\\n    function _claimUnlockedTokens(\\n        address user,\\n        uint48 timestamp,\\n        uint[] memory ids\\n    ) internal {\\n        uint128 claimed;\\n\\n        _harvestFromUnlock(user, ids);\\n\\n        for (uint i; i < ids.length; ) {\\n            UnlockSchedule storage v = unlockSchedules[user][ids[i]];\\n            uint128 amount = releasable(v, timestamp);\\n\\n            v.claimedTokens += amount;\\n            v.debtDai = _currentDebtDai(v.totalTokens - v.claimedTokens);\\n\\n            claimed += amount;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        tokenBalance -= claimed;\\n        token.transfer(user, uint(claimed));\\n\\n        emit TokensClaimed(user, ids, claimed);\\n    }\\n\\n    //\\n    // Public/External interaction functions\\n    //\\n\\n    function distributeRewardDai(uint amount) external override {\\n        dai.transferFrom(msg.sender, address(this), amount);\\n\\n        if (tokenBalance > 0) {\\n            accDaiPerToken += uint128((amount * 1e18) / uint(tokenBalance));\\n        }\\n\\n        emit DaiDistributed(amount);\\n    }\\n\\n    function harvest() public {\\n        User storage u = users[msg.sender];\\n\\n        uint128 newDebtDai = _currentDebtDai(u.stakedTokens);\\n        uint128 pendingDai = uint128(newDebtDai - u.debtDai);\\n\\n        u.debtDai = newDebtDai;\\n        dai.transfer(msg.sender, uint(pendingDai));\\n\\n        emit DaiHarvested(msg.sender, pendingDai);\\n    }\\n\\n    function harvestFromUnlock(uint[] calldata ids) external {\\n        _harvestFromUnlock(msg.sender, ids);\\n    }\\n\\n    function harvestAll(uint[] calldata ids) external {\\n        harvest();\\n        _harvestFromUnlock(msg.sender, ids);\\n    }\\n\\n    function stakeTokens(uint128 amount) external {\\n        User storage u = users[msg.sender];\\n\\n        token.transferFrom(msg.sender, address(this), uint(amount));\\n\\n        harvest();\\n\\n        u.stakedTokens += amount;\\n        u.debtDai = _currentDebtDai(u.stakedTokens);\\n\\n        tokenBalance += amount;\\n\\n        emit TokensStaked(msg.sender, amount);\\n    }\\n\\n    function unstakeTokens(uint128 amount) external {\\n        User storage u = users[msg.sender];\\n\\n        harvest();\\n\\n        u.stakedTokens -= amount;\\n        u.debtDai = _currentDebtDai(u.stakedTokens);\\n\\n        tokenBalance -= amount;\\n\\n        token.transfer(msg.sender, uint(amount));\\n\\n        emit TokensUnstaked(msg.sender, amount);\\n    }\\n\\n    function claimUnlockedTokens(uint[] memory ids) external {\\n        _claimUnlockedTokens(msg.sender, uint48(block.timestamp), ids);\\n    }\\n\\n    function createUnlockSchedule(\\n        UnlockScheduleInput memory input,\\n        address user\\n    ) external override onlyAuthorizedUnlockManager(user) {\\n        require(\\n            input.duration > 0 && input.duration <= MAX_UNLOCK_DURATION,\\n            \\\"INCORRECT_DURATION\\\"\\n        );\\n        require(\\n            input.totalTokens >= MIN_UNLOCK_TOKEN_AMOUNT,\\n            \\\"INCORRECT_AMOUNT\\\"\\n        );\\n        require(user != address(0), \\\"ADDRESS_0\\\");\\n\\n        uint128 totalTokens = input.totalTokens;\\n\\n        // Requester has to pay the token amount\\n        token.transferFrom(msg.sender, address(this), uint(totalTokens));\\n\\n        uint48 timestamp = uint48(block.timestamp);\\n\\n        UnlockSchedule memory vs = UnlockSchedule({\\n            totalTokens: totalTokens,\\n            claimedTokens: 0,\\n            debtDai: _currentDebtDai(totalTokens),\\n            start: input.start >= timestamp ? input.start : timestamp, // accept time in the future\\n            duration: input.duration,\\n            unlockType: input.unlockType,\\n            revocable: input.revocable,\\n            __placeholder: 0\\n        });\\n\\n        tokenBalance += totalTokens;\\n        unlockSchedules[user].push(vs);\\n\\n        emit UnlockScheduled(user, unlockSchedules[user].length - 1, vs);\\n    }\\n\\n    function revokeUnlockSchedule(address user, uint id) external onlyGov {\\n        UnlockSchedule storage v = unlockSchedules[user][id];\\n        require(v.revocable, \\\"NOT_REVOCABLE\\\");\\n\\n        uint48 timestamp = uint48(block.timestamp);\\n\\n        uint[] memory ids;\\n        ids[0] = id;\\n\\n        // claim unlocked tokens and harvests pending rewards\\n        _claimUnlockedTokens(user, timestamp, ids);\\n\\n        uint128 lockedAmount = v.totalTokens - v.claimedTokens;\\n\\n        // reset unlockSchedule so no more claims are possible.\\n        // set start to timestamp if start is in the future. prevents div by 0 in releasable calculations\\n        v.totalTokens = v.claimedTokens;\\n        v.duration = 0;\\n        v.start = v.start > timestamp ? v.start : timestamp;\\n        v.debtDai = _currentDebtDai(v.totalTokens);\\n\\n        tokenBalance -= lockedAmount;\\n\\n        token.transfer(govFund, uint(lockedAmount));\\n\\n        emit UnlockScheduleRevoked(user, id);\\n    }\\n\\n    //\\n    // External view functions\\n    //\\n\\n    function pendingRewardDai(address user) external view returns (uint128) {\\n        User memory u = users[user];\\n\\n        return _pendingDai(u.stakedTokens, u.debtDai);\\n    }\\n\\n    function pendingRewardDaiFromUnlocks(\\n        address user\\n    ) external view returns (uint128) {\\n        uint128 pending;\\n        UnlockSchedule[] memory userUnlocks = unlockSchedules[user];\\n\\n        for (uint i; i < userUnlocks.length; ) {\\n            pending += _pendingDai(userUnlocks[i]);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return pending;\\n    }\\n\\n    function pendingRewardDaiFromUnlocks(\\n        address user,\\n        uint[] memory ids\\n    ) external view returns (uint128) {\\n        uint128 pending;\\n\\n        for (uint i; i < ids.length; ) {\\n            pending += _pendingDai(unlockSchedules[user][ids[i]]);\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return pending;\\n    }\\n\\n    function totalTokensStaked(address user) external view returns (uint128) {\\n        uint128 totalGns = users[user].stakedTokens;\\n        UnlockSchedule[] memory userUnlocks = unlockSchedules[user];\\n\\n        for (uint i; i < userUnlocks.length; ) {\\n            UnlockSchedule memory v = userUnlocks[i];\\n            totalGns += v.totalTokens - v.claimedTokens;\\n\\n            unchecked {\\n                ++i;\\n            }\\n        }\\n\\n        return totalGns;\\n    }\\n\\n    function getUnlockSchedules(\\n        address user\\n    ) external view override returns (UnlockSchedule[] memory) {\\n        return unlockSchedules[user];\\n    }\\n}\\n\",\"keccak256\":\"0xab5ff83229942d39cbca92eab2e839361a1f77ce4063dd3c7f2be847644e7fe5\",\"license\":\"MIT\"},\"contracts/interfaces/GNSStakingInterfaceV6_4_1.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface GNSStakingInterfaceV6_4_1 {\\n    // Structs\\n    struct User {\\n        uint128 stakedTokens; // 1e18\\n        uint128 debtDai; // 1e18\\n    }\\n\\n    struct UnlockSchedule {\\n        uint128 totalTokens;\\n        uint128 claimedTokens;\\n        uint128 debtDai;\\n        uint48 start; // block.timestamp (seconds)\\n        uint48 duration; // in seconds\\n        bool revocable;\\n        UnlockType unlockType;\\n        uint16 __placeholder;\\n    }\\n\\n    struct UnlockScheduleInput {\\n        uint128 totalTokens;\\n        uint48 start; // block.timestamp (seconds)\\n        uint48 duration; // in seconds\\n        bool revocable;\\n        UnlockType unlockType;\\n    }\\n\\n    enum UnlockType {\\n        LINEAR,\\n        CLIFF\\n    }\\n\\n    function govFund() external returns (address);\\n\\n    function distributeRewardDai(uint amount) external;\\n\\n    function createUnlockSchedule(\\n        UnlockScheduleInput memory schedule,\\n        address user\\n    ) external;\\n\\n    function getUnlockSchedules(\\n        address user\\n    ) external view returns (UnlockSchedule[] memory schedules);\\n\\n    function unlockedAmount(\\n        UnlockSchedule memory v,\\n        uint48 timestamp\\n    ) external view returns (uint128 amount);\\n\\n    function releasable(\\n        UnlockSchedule memory v,\\n        uint48 timestamp\\n    ) external view returns (uint128 amount);\\n}\\n\",\"keccak256\":\"0xea01b678637b3859d96af101afa681e61e2e5d0d79dde4c58edf37c2ce82274d\",\"license\":\"MIT\"},\"contracts/interfaces/TokenInterfaceV5.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\ninterface TokenInterfaceV5 {\\n    function burn(address, uint256) external;\\n\\n    function mint(address, uint256) external;\\n\\n    function transfer(address, uint256) external returns (bool);\\n\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    function balanceOf(address) external view returns (uint256);\\n\\n    function hasRole(bytes32, address) external view returns (bool);\\n\\n    function approve(address, uint256) external returns (bool);\\n\\n    function allowance(address, address) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xc1ad2a4fa990051fb693928d91a6c3192cfd68604d12436e7459c4d9f96cccd5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080806040523461001657612273908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c9081631eddd5ca14611959575080632185c5a81461187e5780632aabff15146118625780633620151b1461183957806337f2225e146117ad578063393a37dc1461168a5780633a6901a2146116675780634641257d1461164e5780634689e8d2146115c457806351f6cf2f1461150a5780635386777414611334578063635e0ba6146112f7578063731baf63146112cc57806378ce3d8914610e405780637c74f1af14610dae5780638102329214610d08578063865f12e814610cdb57806393e4573714610c1857806396c95c1a14610b4f5780639e1a4d1914610b2e578063a87430ba14610ae5578063b23b329f14610ac2578063b243fb01146109aa578063c0c53b8b146107c9578063dd01590a146107aa578063e860930a1461076b578063f4b9fa7514610742578063fc0c546a146107195763fc7d01481461015e57600080fd5b3461071457604036600319011261071457610177611a6d565b61018f60018060a01b0360005460101c163314611d05565b60018060a01b03811660005260056020526101b06024356040600020611ad0565b5060ff600182015460e01c16156106df57606051156106c9576024356080526000906001600160a01b0383161561069757606051156106665760009060005b60605181101561027d57600190818060a01b0386166000526005602052610222604060002060808360051b015190611ad0565b50938261024361023e87548060801c90848060801b0316611e51565b611fd6565b95019061026382549161025d868060801b03841689611e51565b90611ea4565b95848060801b031690848060801b031916179055016101ef565b5060025460405163a9059cbb60e01b8152919392919060209082906001600160a01b0316816000816102bc6001600160801b0389168c60048401611ee0565b03925af180156105f457610647575b506040516001600160801b0390911681526001600160a01b0384169060008051602061222783398151915290602090a26000905b6060518210156103be576103b6600191828060a01b0386166000526005602052610335604060002060808660051b015190611ad0565b509061036861034383612139565b61035565ffffffffffff421682611da7565b906020878060801b039101511690611e51565b9161038061037a84835460801c611ea4565b82611ebd565b8461039a61023e83548060801c90848060801b0316611e51565b910190858060801b0316858060801b0319825416179055611ea4565b9101906102ff565b6003549091506001600160801b03196103db83608084901c611e51565b60801b169060018060801b03161760035560018060a01b03600154166020604051809263a9059cbb60e01b82528160008161042260018060801b0389168b60048401611ee0565b03925af180156105f457610628575b50604051604081019160408252606051809352606082019260809060005b818110610612576001600160801b038416602086810191909152889061058190896001600160a01b0384166000805160206122078339815191528a8c038ba2805490608082901c6104a9816001600160801b038516611e51565b6001600160801b031990931617815560018101805465ffffffffffff60b01b19811690915560801c65ffffffffffff908116904216811115610600576104f3905b600183016121b1565b80546001906001600160801b039061050c908216611fd6565b16818060801b031982840154161791015560035460018060801b0319610535838360801c611e51565b60801b166001600160801b03918216176003556001546000805460405163a9059cbb60e01b81529687956001600160a01b039485169587958694929091169160101c1660048401611ee0565b03925af180156105f4576105c5575b50602435906001600160a01b03167fec3458853f0bb76e34bb0ac49646241e29b9d541e9b111c74803383b1878f4db600080a3005b6105e69060203d6020116105ed575b6105de8183611b15565b810190611e6a565b5081610590565b503d6105d4565b6040513d6000823e3d90fd5b506104f365ffffffffffff42166104ea565b825186526020958601959092019160010161044f565b6106409060203d6020116105ed576105de8183611b15565b5038610431565b61065f9060203d6020116105ed576105de8183611b15565b50386102cb565b60405162461bcd60e51b81526020600482015260096024820152684944535f454d50545960b81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a602482015269555345525f454d50545960b01b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152600d60248201526c4e4f545f5245564f4341424c4560981b6044820152606490fd5b600080fd5b34610714576000366003190112610714576001546040516001600160a01b039091168152602090f35b34610714576000366003190112610714576002546040516001600160a01b039091168152602090f35b34610714576020366003190112610714576001600160a01b0361078c611a6d565b166000526006602052602060ff604060002054166040519015158152f35b346107145760003660031901126107145760206040516303c267008152f35b34610714576060366003190112610714576107e2611a6d565b6024356001600160a01b03818116929183900361071457604435818116809103610714576000549160ff8360081c16159283809461099d575b8015610986575b1561092a5760ff19811660011760005583610918575b50831615158061090f575b80610906575b156108d2576000549262010000600160b01b039060101b16938462010000600160b01b031985161760005560018060a01b031990816001541617600155600254161760025561089457005b610100600160b01b03191617600055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b60405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f504152414d5360a01b6044820152606490fd5b50801515610849565b50831515610843565b61ffff19166101011760005585610838565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156108225750600160ff821614610822565b50600160ff82161061081b565b346107145760203660031901126107145760043560018060a01b0360025416602060405180926323b872dd60e01b8252816000816109ed88303360048501611e82565b03925af180156105f457610aa4575b506003548060801c9081610a26575b600080516020612247833981519152602084604051908152a1005b9091670de0b6b3a764000091828202928284041482151715610a8e57600080516020612247833981519152936020936001600160801b0391610a76918391610a6d91611d87565b16828416611ea4565b6001600160801b031990921691161760035591610a0b565b634e487b7160e01b600052601160045260246000fd5b610abb9060203d81116105ed576105de8183611b15565b50816109fc565b3461071457610ae3610add610ad636611a83565b3691611b4f565b33612014565b005b34610714576020366003190112610714576001600160a01b03610b06611a6d565b1660005260046020526040806000205481519060018060801b038116825260801c6020820152f35b3461071457600036600319011261071457602060035460801c604051908152f35b3461071457602080600319360112610714576001600160a01b03610b71611a6d565b16600052600581526040600020908154610b8a81611b38565b90610b986040519283611b15565b8082528282018094600052836000206000915b838310610bfb5760408051878152865181890181905289928201908960005b828110610bd75784840385f35b9091928261010082610bec6001948a51611c96565b01960191019492919094610bca565b600286600192610c0a85612139565b815201920192019190610bab565b346107145760208060031936011261071457610c32611a6d565b6001600160a01b0316600090815260058252604081208054610c5381611b38565b91610c616040519384611b15565b8183526000908152848120858085015b848410610cbc5750600085875b8151831015610ca857610ca060019161025d610c9a8686612000565b516121d8565b920191610c7e565b6040516001600160801b0390911681528390f35b600191600291610ccb85612139565b8152019201920191908690610c71565b346107145760003660031901126107145760005460405160109190911c6001600160a01b03168152602090f35b3461071457604036600319011261071457610d21611a6d565b6024356001600160401b03811161071457610d40903690600401611b9d565b6000916001600160a01b031690825b8151841015610d9957610d9160019184600052600560205261025d610d8c610d866040600020610d7f8a89612000565b5190611ad0565b50612139565b6121d8565b930192610d4f565b6040516001600160801b039091168152602090f35b34610714576020366003190112610714577f82ed90f787d49d0a2409d828dce36f3138f9c04e46a59446f7564352cc9dd5266020610dea611a6d565b6000546001600160a01b03610e0633601084901c831614611d05565b821691610e14831515611d3c565b62010000600160b01b031990911660109190911b62010000600160b01b031617600055604051908152a1005b3461071457366003190160c081126107145760a0136107145760405160a081016001600160401b038111828210176111b757604052610e7d611a57565b815260243565ffffffffffff8116810361071457602082019081526044359165ffffffffffff8316830361071457604081019283526064359081151582036107145760608101918252608435906002821015610714576080810191825260a435946001600160a01b0393848716870361071457338588161480156112bc575b80156112a4575b156112755765ffffffffffff8251168015159081611266575b501561122c578251670de0b6b3a764000093906001600160801b031684116111f457610f4b8689161515611d3c565b516001546040516323b872dd60e01b81526001600160801b039092169391906020908290891681600081610f848a303360048501611e82565b03925af180156105f4576111d5575b506003549365ffffffffffff904282169082906001600160801b0390610fbb828a1689611d74565b9b519b04169916908082106111cd5750915b5116945190600282101561118b576110409565ffffffffffff61102394511515926040519a610ffb8c611af9565b878c52600060208d015260408c01521660608a0152608089015260a088015260c0870161212d565b600060e08601526001600160801b0319928391608084901c611ea4565b60801b169060018060801b031617600355818416600052600560205260406000208054600160401b8110156111b75761107e91600182018155611ad0565b6111a1578351815483166001600160801b039182161782556020850151600192916110aa911682611ebd565b019060018060801b03604085015116908254161781556110d665ffffffffffff606085015116826121b1565b6080830151815460ff60e01b60a0860151151560e01b1660c086015191600283101561118b5761ffff60f01b60e088015160f01b169365ffffffffffff60b01b9060b01b169060018060b01b031617179060ff60e81b9060e81b16171790558083166000526005602052604060002054926000198401938411610a8e577fd858b6b4541385008baaa764f65f7ca9b7e0cdcf25fa214b9c3b1c8de97f3faa91610100916111866040518096611c96565b1692a3005b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b905091610fcd565b6111ed9060203d6020116105ed576105de8183611b15565b5088610f93565b60405162461bcd60e51b815260206004820152601060248201526f125390d3d4949150d517d05353d5539560821b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527124a721a7a92922a1aa2fa22aa920aa24a7a760711b6044820152606490fd5b6303c267009150111588610f1c565b60405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606490fd5b5033600052600660205260ff60406000205416610f03565b508460005460101c163314610efc565b346107145760206112e56112df36611bbb565b90611da7565b6040516001600160801b039091168152f35b346107145760208061132b61131661130e36611bbb565b819291611da7565b9201516001600160801b039290831690611e51565b60405191168152f35b3461071457602080600319360112610714576004356001600160401b03811161071457611365903690600401611b9d565b65ffffffffffff421691600061137b8333612014565b6000905b835182101561142757336000526005835261141f836113a66040600020610d7f8689612000565b50926113d36113b485612139565b6113be8a82611da7565b9301516001600160801b039390841690611e51565b9161140061023e86546113f36113ed87608093841c611ea4565b89611ebd565b83885480921c9116611e51565b60019586018054919092166001600160801b0319909116179055611ea4565b91019061137f565b60035490849084906001600160801b031961144682608087901c611e51565b60801b1660018060801b038095161760035560019360018060a01b0385541691169082604051809263a9059cbb60e01b82528160008161148a883360048401611ee0565b03925af180156105f4576114ed575b506040519160408301604084528451809152816060850195019060005b8181106114da578386018590523360008051602061220783398151915287890388a2005b82518752958301959183019187016114b6565b61150390833d85116105ed576105de8183611b15565b5084611499565b3461071457604036600319011261071457611523611a6d565b6001600160a01b0316600090815260056020526040902080546024359190821015610714576101009161155591611ad0565b50600181549101546040519160018060801b0390818116845260801c60208401528116604083015265ffffffffffff808260801c1660608401528160b01c16608083015260ff8160e01c16151560a08301526115ba60c0830160ff8360e81c16611aec565b60f01c60e0820152f35b34610714576040366003190112610714576115dd611a6d565b602435908115158092036107145760207f37d059510662ed4f7c846b2b307b12cae9efc251486cb247fba0b9d7021e5b3f9160018060a01b03906116298260005460101c163314611d05565b16928360005260068252604060002060ff1981541660ff8316179055604051908152a2005b3461071457600036600319011261071457610ae3611efb565b34610714576000366003190112610714576020604051670de0b6b3a76400008152f35b3461071457602080600319360112610714576116a4611a57565b336000526004825260406000206116b9611efb565b80546001600160801b03916117069083670de0b6b3a76400006116fe826116e289828916611e51565b166001600160801b031996871681178555600354841690611d74565b041690611ebd565b8160035491611718858460801c611e51565b60801b1691161760035560018060a01b036001541691169180604051809363a9059cbb60e01b825281600081611752893360048401611ee0565b03925af19182156105f4577fee66b9189612f29967ec6ab5c02a4015623d4b820313b0411ad1ce6c4c0d5c2a92611790575b506040519283523392a2005b6117a690823d84116105ed576105de8183611b15565b5083611784565b34610714576020366003190112610714576001600160a01b036117ce611a6d565b1660005260046020526040600020604051604081019181831060018060401b038411176111b757602061132b9181946040525492670de0b6b3a764000061183260018060801b039586938482169182825260801c9586910152836003541690611d74565b0416611e51565b34610714576000366003190112610714576003546040516001600160801b039091168152602090f35b3461071457610ae3610add61187636611a83565b610ad6611efb565b3461071457602080600319360112610714576001600160a01b036118a0611a6d565b166000526004815260018060801b0380604060002054166005835260406000209182546118cc81611b38565b936118da6040519586611b15565b8185526000908152858120868087015b84841061193a5750505050506000915b835183101561192f5761192760019161025d6119168688612000565b518589818351169201511690611e51565b9201916118fa565b849160405191168152f35b60019160029161194985612139565b81520192019201919087906118ea565b34610714576020908160031936011261071457611974611a57565b91336000526004815260406000209260018060a01b03600154169360018060801b03908385838516976323b872dd60e01b8252816000816119ba8c303360048501611e82565b03925af19485156105f4577f603ec8111e4b299ce77433420e77ede7dff7aaf20a360583ed003ac868e59afe95611a3a575b506119f5611efb565b611a1581549183670de0b6b3a76400006116fe826116e289828916611ea4565b611a25600354938460801c611ea4565b60801b169116176003556040519283523392a2005b611a5090853d87116105ed576105de8183611b15565b50866119ec565b600435906001600160801b038216820361071457565b600435906001600160a01b038216820361071457565b906020600319830112610714576001600160401b03916004359083821161071457806023830112156107145781600401359384116107145760248460051b83010111610714576024019190565b80548210156106c95760005260206000209060011b0190600090565b90600282101561118b5752565b61010081019081106001600160401b038211176111b757604052565b601f909101601f19168101906001600160401b038211908210176111b757604052565b6001600160401b0381116111b75760051b60200190565b9291611b5a82611b38565b91611b686040519384611b15565b829481845260208094019160051b810192831161071457905b828210611b8e5750505050565b81358152908301908301611b81565b9080601f8301121561071457816020611bb893359101611b4f565b90565b6003190190610120821261071457610100809212610714576040519182016001600160401b038111838210176111b7576040526001600160801b0360043581811681036107145783526024358181168103610714576020840152604435908116810361071457604083015265ffffffffffff916064358381168103610714576060820152608435838116810361071457608082015260a43580151581036107145760a082015260c43560028110156107145760c082015260e43561ffff811681036107145760e0820152916101043590811681036107145790565b61ffff60e0809260018060801b03808251168652806020830151166020870152604082015116604086015265ffffffffffff806060830151166060870152608082015116608086015260a0810151151560a0860152611cfd60c082015160c0870190611aec565b015116910152565b15611d0c57565b60405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b6044820152606490fd5b15611d4357565b60405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606490fd5b81810292918115918404141715610a8e57565b8115611d91570490565b634e487b7160e01b600052601260045260246000fd5b90606082019065ffffffffffff80835116916080850192828451160190828211610a8e578216908216811015611e3e578184511681108015611e27575b611e1d578160018060801b03809651169451169003818111610a8e57611e199382611e10921690611d74565b91511690611d87565b1690565b5050505050600090565b5060c0850151600281101561118b57600114611de4565b505091516001600160801b031692915050565b6001600160801b039182169082160391908211610a8e57565b90816020910312610714575180151581036107145790565b6001600160a01b03918216815291166020820152604081019190915260600190565b6001600160801b039182169082160191908211610a8e57565b80546001600160801b031660809290921b6001600160801b031916919091179055565b6001600160a01b039091168152602081019190915260400190565b33600052600460205260406000208054611f4560018060801b0391611f3f83670de0b6b3a7640000611f338260035416838616611d74565b04169160801c82611e51565b93611ebd565b60025460405163a9059cbb60e01b8152919092169160209082906001600160a01b031681600081611f7a883360048401611ee0565b03925af180156105f457611fb8575b506040519081527ff5c4762b09bad9ee274417cb38a318d436e5840ab30be2c2900f8f0e69b317fc60203392a2565b611fcf9060203d81116105ed576105de8183611b15565b5038611f89565b6003546001600160801b0391670de0b6b3a764000091611ffb91908416908416611d74565b041690565b80518210156106c95760209160051b010190565b916001600160a01b0391908284169081156106975782511561066657600094855b84518110156120a9578360005260056020526120596040600020610d7f8388612000565b5090815461207761023e60018060801b0392838160801c9116611e51565b9860018094019161209183549261025d8d84861690611e51565b9a166001600160801b03199190911617905501612035565b506120e39350602091959294600254169260018060801b0316928391600060405180978195829463a9059cbb60e01b845260048401611ee0565b03925af19081156105f45760008051602061222783398151915292602092612110575b50604051908152a2565b61212690833d81116105ed576105de8183611b15565b5038612106565b600282101561118b5752565b9060405161214681611af9565b60e081936001815491818060801b0392838116865260801c60208601520154908116604084015265ffffffffffff808260801c1660608501528160b01c16608084015260ff81831c16151560a08401526121a960ff8260e81c1660c0850161212d565b60f01c910152565b805465ffffffffffff60801b191660809290921b65ffffffffffff60801b16919091179055565b611bb89060018060801b0360406121fc61023e838551168460208701511690611e51565b9201511690611e5156fe1b11859773b8218821d15e67ec2127a3cdc452e22e610e0a45e1085b5bb9955b572be9934ed68fdab8bb0ce42f16ca23368a9081261ff0757dc7d17923fc25d13d3a5dc6f49d04618f423dcbc7425d8eb9449f43a3f35243a05d11f5f6a78dfea164736f6c6343000811000a",
  "deployedBytecode": "0x608080604052600436101561001357600080fd5b60003560e01c9081631eddd5ca14611959575080632185c5a81461187e5780632aabff15146118625780633620151b1461183957806337f2225e146117ad578063393a37dc1461168a5780633a6901a2146116675780634641257d1461164e5780634689e8d2146115c457806351f6cf2f1461150a5780635386777414611334578063635e0ba6146112f7578063731baf63146112cc57806378ce3d8914610e405780637c74f1af14610dae5780638102329214610d08578063865f12e814610cdb57806393e4573714610c1857806396c95c1a14610b4f5780639e1a4d1914610b2e578063a87430ba14610ae5578063b23b329f14610ac2578063b243fb01146109aa578063c0c53b8b146107c9578063dd01590a146107aa578063e860930a1461076b578063f4b9fa7514610742578063fc0c546a146107195763fc7d01481461015e57600080fd5b3461071457604036600319011261071457610177611a6d565b61018f60018060a01b0360005460101c163314611d05565b60018060a01b03811660005260056020526101b06024356040600020611ad0565b5060ff600182015460e01c16156106df57606051156106c9576024356080526000906001600160a01b0383161561069757606051156106665760009060005b60605181101561027d57600190818060a01b0386166000526005602052610222604060002060808360051b015190611ad0565b50938261024361023e87548060801c90848060801b0316611e51565b611fd6565b95019061026382549161025d868060801b03841689611e51565b90611ea4565b95848060801b031690848060801b031916179055016101ef565b5060025460405163a9059cbb60e01b8152919392919060209082906001600160a01b0316816000816102bc6001600160801b0389168c60048401611ee0565b03925af180156105f457610647575b506040516001600160801b0390911681526001600160a01b0384169060008051602061222783398151915290602090a26000905b6060518210156103be576103b6600191828060a01b0386166000526005602052610335604060002060808660051b015190611ad0565b509061036861034383612139565b61035565ffffffffffff421682611da7565b906020878060801b039101511690611e51565b9161038061037a84835460801c611ea4565b82611ebd565b8461039a61023e83548060801c90848060801b0316611e51565b910190858060801b0316858060801b0319825416179055611ea4565b9101906102ff565b6003549091506001600160801b03196103db83608084901c611e51565b60801b169060018060801b03161760035560018060a01b03600154166020604051809263a9059cbb60e01b82528160008161042260018060801b0389168b60048401611ee0565b03925af180156105f457610628575b50604051604081019160408252606051809352606082019260809060005b818110610612576001600160801b038416602086810191909152889061058190896001600160a01b0384166000805160206122078339815191528a8c038ba2805490608082901c6104a9816001600160801b038516611e51565b6001600160801b031990931617815560018101805465ffffffffffff60b01b19811690915560801c65ffffffffffff908116904216811115610600576104f3905b600183016121b1565b80546001906001600160801b039061050c908216611fd6565b16818060801b031982840154161791015560035460018060801b0319610535838360801c611e51565b60801b166001600160801b03918216176003556001546000805460405163a9059cbb60e01b81529687956001600160a01b039485169587958694929091169160101c1660048401611ee0565b03925af180156105f4576105c5575b50602435906001600160a01b03167fec3458853f0bb76e34bb0ac49646241e29b9d541e9b111c74803383b1878f4db600080a3005b6105e69060203d6020116105ed575b6105de8183611b15565b810190611e6a565b5081610590565b503d6105d4565b6040513d6000823e3d90fd5b506104f365ffffffffffff42166104ea565b825186526020958601959092019160010161044f565b6106409060203d6020116105ed576105de8183611b15565b5038610431565b61065f9060203d6020116105ed576105de8183611b15565b50386102cb565b60405162461bcd60e51b81526020600482015260096024820152684944535f454d50545960b81b6044820152606490fd5b60405162461bcd60e51b815260206004820152600a602482015269555345525f454d50545960b01b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b815260206004820152600d60248201526c4e4f545f5245564f4341424c4560981b6044820152606490fd5b600080fd5b34610714576000366003190112610714576001546040516001600160a01b039091168152602090f35b34610714576000366003190112610714576002546040516001600160a01b039091168152602090f35b34610714576020366003190112610714576001600160a01b0361078c611a6d565b166000526006602052602060ff604060002054166040519015158152f35b346107145760003660031901126107145760206040516303c267008152f35b34610714576060366003190112610714576107e2611a6d565b6024356001600160a01b03818116929183900361071457604435818116809103610714576000549160ff8360081c16159283809461099d575b8015610986575b1561092a5760ff19811660011760005583610918575b50831615158061090f575b80610906575b156108d2576000549262010000600160b01b039060101b16938462010000600160b01b031985161760005560018060a01b031990816001541617600155600254161760025561089457005b610100600160b01b03191617600055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b60405162461bcd60e51b815260206004820152600c60248201526b57524f4e475f504152414d5360a01b6044820152606490fd5b50801515610849565b50831515610843565b61ffff19166101011760005585610838565b60405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156108225750600160ff821614610822565b50600160ff82161061081b565b346107145760203660031901126107145760043560018060a01b0360025416602060405180926323b872dd60e01b8252816000816109ed88303360048501611e82565b03925af180156105f457610aa4575b506003548060801c9081610a26575b600080516020612247833981519152602084604051908152a1005b9091670de0b6b3a764000091828202928284041482151715610a8e57600080516020612247833981519152936020936001600160801b0391610a76918391610a6d91611d87565b16828416611ea4565b6001600160801b031990921691161760035591610a0b565b634e487b7160e01b600052601160045260246000fd5b610abb9060203d81116105ed576105de8183611b15565b50816109fc565b3461071457610ae3610add610ad636611a83565b3691611b4f565b33612014565b005b34610714576020366003190112610714576001600160a01b03610b06611a6d565b1660005260046020526040806000205481519060018060801b038116825260801c6020820152f35b3461071457600036600319011261071457602060035460801c604051908152f35b3461071457602080600319360112610714576001600160a01b03610b71611a6d565b16600052600581526040600020908154610b8a81611b38565b90610b986040519283611b15565b8082528282018094600052836000206000915b838310610bfb5760408051878152865181890181905289928201908960005b828110610bd75784840385f35b9091928261010082610bec6001948a51611c96565b01960191019492919094610bca565b600286600192610c0a85612139565b815201920192019190610bab565b346107145760208060031936011261071457610c32611a6d565b6001600160a01b0316600090815260058252604081208054610c5381611b38565b91610c616040519384611b15565b8183526000908152848120858085015b848410610cbc5750600085875b8151831015610ca857610ca060019161025d610c9a8686612000565b516121d8565b920191610c7e565b6040516001600160801b0390911681528390f35b600191600291610ccb85612139565b8152019201920191908690610c71565b346107145760003660031901126107145760005460405160109190911c6001600160a01b03168152602090f35b3461071457604036600319011261071457610d21611a6d565b6024356001600160401b03811161071457610d40903690600401611b9d565b6000916001600160a01b031690825b8151841015610d9957610d9160019184600052600560205261025d610d8c610d866040600020610d7f8a89612000565b5190611ad0565b50612139565b6121d8565b930192610d4f565b6040516001600160801b039091168152602090f35b34610714576020366003190112610714577f82ed90f787d49d0a2409d828dce36f3138f9c04e46a59446f7564352cc9dd5266020610dea611a6d565b6000546001600160a01b03610e0633601084901c831614611d05565b821691610e14831515611d3c565b62010000600160b01b031990911660109190911b62010000600160b01b031617600055604051908152a1005b3461071457366003190160c081126107145760a0136107145760405160a081016001600160401b038111828210176111b757604052610e7d611a57565b815260243565ffffffffffff8116810361071457602082019081526044359165ffffffffffff8316830361071457604081019283526064359081151582036107145760608101918252608435906002821015610714576080810191825260a435946001600160a01b0393848716870361071457338588161480156112bc575b80156112a4575b156112755765ffffffffffff8251168015159081611266575b501561122c578251670de0b6b3a764000093906001600160801b031684116111f457610f4b8689161515611d3c565b516001546040516323b872dd60e01b81526001600160801b039092169391906020908290891681600081610f848a303360048501611e82565b03925af180156105f4576111d5575b506003549365ffffffffffff904282169082906001600160801b0390610fbb828a1689611d74565b9b519b04169916908082106111cd5750915b5116945190600282101561118b576110409565ffffffffffff61102394511515926040519a610ffb8c611af9565b878c52600060208d015260408c01521660608a0152608089015260a088015260c0870161212d565b600060e08601526001600160801b0319928391608084901c611ea4565b60801b169060018060801b031617600355818416600052600560205260406000208054600160401b8110156111b75761107e91600182018155611ad0565b6111a1578351815483166001600160801b039182161782556020850151600192916110aa911682611ebd565b019060018060801b03604085015116908254161781556110d665ffffffffffff606085015116826121b1565b6080830151815460ff60e01b60a0860151151560e01b1660c086015191600283101561118b5761ffff60f01b60e088015160f01b169365ffffffffffff60b01b9060b01b169060018060b01b031617179060ff60e81b9060e81b16171790558083166000526005602052604060002054926000198401938411610a8e577fd858b6b4541385008baaa764f65f7ca9b7e0cdcf25fa214b9c3b1c8de97f3faa91610100916111866040518096611c96565b1692a3005b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b905091610fcd565b6111ed9060203d6020116105ed576105de8183611b15565b5088610f93565b60405162461bcd60e51b815260206004820152601060248201526f125390d3d4949150d517d05353d5539560821b6044820152606490fd5b60405162461bcd60e51b815260206004820152601260248201527124a721a7a92922a1aa2fa22aa920aa24a7a760711b6044820152606490fd5b6303c267009150111588610f1c565b60405162461bcd60e51b815260206004820152600760248201526609c9ebe82aaa8960cb1b6044820152606490fd5b5033600052600660205260ff60406000205416610f03565b508460005460101c163314610efc565b346107145760206112e56112df36611bbb565b90611da7565b6040516001600160801b039091168152f35b346107145760208061132b61131661130e36611bbb565b819291611da7565b9201516001600160801b039290831690611e51565b60405191168152f35b3461071457602080600319360112610714576004356001600160401b03811161071457611365903690600401611b9d565b65ffffffffffff421691600061137b8333612014565b6000905b835182101561142757336000526005835261141f836113a66040600020610d7f8689612000565b50926113d36113b485612139565b6113be8a82611da7565b9301516001600160801b039390841690611e51565b9161140061023e86546113f36113ed87608093841c611ea4565b89611ebd565b83885480921c9116611e51565b60019586018054919092166001600160801b0319909116179055611ea4565b91019061137f565b60035490849084906001600160801b031961144682608087901c611e51565b60801b1660018060801b038095161760035560019360018060a01b0385541691169082604051809263a9059cbb60e01b82528160008161148a883360048401611ee0565b03925af180156105f4576114ed575b506040519160408301604084528451809152816060850195019060005b8181106114da578386018590523360008051602061220783398151915287890388a2005b82518752958301959183019187016114b6565b61150390833d85116105ed576105de8183611b15565b5084611499565b3461071457604036600319011261071457611523611a6d565b6001600160a01b0316600090815260056020526040902080546024359190821015610714576101009161155591611ad0565b50600181549101546040519160018060801b0390818116845260801c60208401528116604083015265ffffffffffff808260801c1660608401528160b01c16608083015260ff8160e01c16151560a08301526115ba60c0830160ff8360e81c16611aec565b60f01c60e0820152f35b34610714576040366003190112610714576115dd611a6d565b602435908115158092036107145760207f37d059510662ed4f7c846b2b307b12cae9efc251486cb247fba0b9d7021e5b3f9160018060a01b03906116298260005460101c163314611d05565b16928360005260068252604060002060ff1981541660ff8316179055604051908152a2005b3461071457600036600319011261071457610ae3611efb565b34610714576000366003190112610714576020604051670de0b6b3a76400008152f35b3461071457602080600319360112610714576116a4611a57565b336000526004825260406000206116b9611efb565b80546001600160801b03916117069083670de0b6b3a76400006116fe826116e289828916611e51565b166001600160801b031996871681178555600354841690611d74565b041690611ebd565b8160035491611718858460801c611e51565b60801b1691161760035560018060a01b036001541691169180604051809363a9059cbb60e01b825281600081611752893360048401611ee0565b03925af19182156105f4577fee66b9189612f29967ec6ab5c02a4015623d4b820313b0411ad1ce6c4c0d5c2a92611790575b506040519283523392a2005b6117a690823d84116105ed576105de8183611b15565b5083611784565b34610714576020366003190112610714576001600160a01b036117ce611a6d565b1660005260046020526040600020604051604081019181831060018060401b038411176111b757602061132b9181946040525492670de0b6b3a764000061183260018060801b039586938482169182825260801c9586910152836003541690611d74565b0416611e51565b34610714576000366003190112610714576003546040516001600160801b039091168152602090f35b3461071457610ae3610add61187636611a83565b610ad6611efb565b3461071457602080600319360112610714576001600160a01b036118a0611a6d565b166000526004815260018060801b0380604060002054166005835260406000209182546118cc81611b38565b936118da6040519586611b15565b8185526000908152858120868087015b84841061193a5750505050506000915b835183101561192f5761192760019161025d6119168688612000565b518589818351169201511690611e51565b9201916118fa565b849160405191168152f35b60019160029161194985612139565b81520192019201919087906118ea565b34610714576020908160031936011261071457611974611a57565b91336000526004815260406000209260018060a01b03600154169360018060801b03908385838516976323b872dd60e01b8252816000816119ba8c303360048501611e82565b03925af19485156105f4577f603ec8111e4b299ce77433420e77ede7dff7aaf20a360583ed003ac868e59afe95611a3a575b506119f5611efb565b611a1581549183670de0b6b3a76400006116fe826116e289828916611ea4565b611a25600354938460801c611ea4565b60801b169116176003556040519283523392a2005b611a5090853d87116105ed576105de8183611b15565b50866119ec565b600435906001600160801b038216820361071457565b600435906001600160a01b038216820361071457565b906020600319830112610714576001600160401b03916004359083821161071457806023830112156107145781600401359384116107145760248460051b83010111610714576024019190565b80548210156106c95760005260206000209060011b0190600090565b90600282101561118b5752565b61010081019081106001600160401b038211176111b757604052565b601f909101601f19168101906001600160401b038211908210176111b757604052565b6001600160401b0381116111b75760051b60200190565b9291611b5a82611b38565b91611b686040519384611b15565b829481845260208094019160051b810192831161071457905b828210611b8e5750505050565b81358152908301908301611b81565b9080601f8301121561071457816020611bb893359101611b4f565b90565b6003190190610120821261071457610100809212610714576040519182016001600160401b038111838210176111b7576040526001600160801b0360043581811681036107145783526024358181168103610714576020840152604435908116810361071457604083015265ffffffffffff916064358381168103610714576060820152608435838116810361071457608082015260a43580151581036107145760a082015260c43560028110156107145760c082015260e43561ffff811681036107145760e0820152916101043590811681036107145790565b61ffff60e0809260018060801b03808251168652806020830151166020870152604082015116604086015265ffffffffffff806060830151166060870152608082015116608086015260a0810151151560a0860152611cfd60c082015160c0870190611aec565b015116910152565b15611d0c57565b60405162461bcd60e51b8152602060048201526008602482015267474f565f4f4e4c5960c01b6044820152606490fd5b15611d4357565b60405162461bcd60e51b81526020600482015260096024820152680414444524553535f360bc1b6044820152606490fd5b81810292918115918404141715610a8e57565b8115611d91570490565b634e487b7160e01b600052601260045260246000fd5b90606082019065ffffffffffff80835116916080850192828451160190828211610a8e578216908216811015611e3e578184511681108015611e27575b611e1d578160018060801b03809651169451169003818111610a8e57611e199382611e10921690611d74565b91511690611d87565b1690565b5050505050600090565b5060c0850151600281101561118b57600114611de4565b505091516001600160801b031692915050565b6001600160801b039182169082160391908211610a8e57565b90816020910312610714575180151581036107145790565b6001600160a01b03918216815291166020820152604081019190915260600190565b6001600160801b039182169082160191908211610a8e57565b80546001600160801b031660809290921b6001600160801b031916919091179055565b6001600160a01b039091168152602081019190915260400190565b33600052600460205260406000208054611f4560018060801b0391611f3f83670de0b6b3a7640000611f338260035416838616611d74565b04169160801c82611e51565b93611ebd565b60025460405163a9059cbb60e01b8152919092169160209082906001600160a01b031681600081611f7a883360048401611ee0565b03925af180156105f457611fb8575b506040519081527ff5c4762b09bad9ee274417cb38a318d436e5840ab30be2c2900f8f0e69b317fc60203392a2565b611fcf9060203d81116105ed576105de8183611b15565b5038611f89565b6003546001600160801b0391670de0b6b3a764000091611ffb91908416908416611d74565b041690565b80518210156106c95760209160051b010190565b916001600160a01b0391908284169081156106975782511561066657600094855b84518110156120a9578360005260056020526120596040600020610d7f8388612000565b5090815461207761023e60018060801b0392838160801c9116611e51565b9860018094019161209183549261025d8d84861690611e51565b9a166001600160801b03199190911617905501612035565b506120e39350602091959294600254169260018060801b0316928391600060405180978195829463a9059cbb60e01b845260048401611ee0565b03925af19081156105f45760008051602061222783398151915292602092612110575b50604051908152a2565b61212690833d81116105ed576105de8183611b15565b5038612106565b600282101561118b5752565b9060405161214681611af9565b60e081936001815491818060801b0392838116865260801c60208601520154908116604084015265ffffffffffff808260801c1660608501528160b01c16608084015260ff81831c16151560a08401526121a960ff8260e81c1660c0850161212d565b60f01c910152565b805465ffffffffffff60801b191660809290921b65ffffffffffff60801b16919091179055565b611bb89060018060801b0360406121fc61023e838551168460208701511690611e51565b9201511690611e5156fe1b11859773b8218821d15e67ec2127a3cdc452e22e610e0a45e1085b5bb9955b572be9934ed68fdab8bb0ce42f16ca23368a9081261ff0757dc7d17923fc25d13d3a5dc6f49d04618f423dcbc7425d8eb9449f43a3f35243a05d11f5f6a78dfea164736f6c6343000811000a",
  "libraries": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3282,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 3285,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 22599,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "govFund",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 22602,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(TokenInterfaceV5)36847"
      },
      {
        "astId": 22605,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "dai",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(TokenInterfaceV5)36847"
      },
      {
        "astId": 22607,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "accDaiPerToken",
        "offset": 0,
        "slot": "3",
        "type": "t_uint128"
      },
      {
        "astId": 22609,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "tokenBalance",
        "offset": 16,
        "slot": "3",
        "type": "t_uint128"
      },
      {
        "astId": 22614,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "users",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(User)35096_storage)"
      },
      {
        "astId": 22620,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "unlockSchedules",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_struct(UnlockSchedule)35114_storage)dyn_storage)"
      },
      {
        "astId": 22624,
        "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
        "label": "unlockManagers",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UnlockSchedule)35114_storage)dyn_storage": {
        "base": "t_struct(UnlockSchedule)35114_storage",
        "encoding": "dynamic_array",
        "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(TokenInterfaceV5)36847": {
        "encoding": "inplace",
        "label": "contract TokenInterfaceV5",
        "numberOfBytes": "20"
      },
      "t_enum(UnlockType)35129": {
        "encoding": "inplace",
        "label": "enum GNSStakingInterfaceV6_4_1.UnlockType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(UnlockSchedule)35114_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.UnlockSchedule[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(UnlockSchedule)35114_storage)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(User)35096_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GNSStakingInterfaceV6_4_1.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)35096_storage"
      },
      "t_struct(UnlockSchedule)35114_storage": {
        "encoding": "inplace",
        "label": "struct GNSStakingInterfaceV6_4_1.UnlockSchedule",
        "members": [
          {
            "astId": 35098,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "totalTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 35100,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "claimedTokens",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 35102,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "debtDai",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 35104,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "start",
            "offset": 16,
            "slot": "1",
            "type": "t_uint48"
          },
          {
            "astId": 35106,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "duration",
            "offset": 22,
            "slot": "1",
            "type": "t_uint48"
          },
          {
            "astId": 35108,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "revocable",
            "offset": 28,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 35111,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "unlockType",
            "offset": 29,
            "slot": "1",
            "type": "t_enum(UnlockType)35129"
          },
          {
            "astId": 35113,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "__placeholder",
            "offset": 30,
            "slot": "1",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(User)35096_storage": {
        "encoding": "inplace",
        "label": "struct GNSStakingInterfaceV6_4_1.User",
        "members": [
          {
            "astId": 35093,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "stakedTokens",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 35095,
            "contract": "contracts/contracts/GNSStakingV6_4_1.sol:GNSStakingV6_4_1",
            "label": "debtDai",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint48": {
        "encoding": "inplace",
        "label": "uint48",
        "numberOfBytes": "6"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}